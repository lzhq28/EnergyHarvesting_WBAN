%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: slot_allocation.pdf
%%Creator: Adobe Acrobat 11.0.0
%%For: lzhq28
%%CreationDate: 2018/1/4, 15:40:13
%%BoundingBox: 0 0 500 172
%%HiResBoundingBox: 0 0 499.1281 171.7500
%%CropBox: 0 0 499.1281 171.7500
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2016 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 949 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.4-c005 78.147326, 2012/08/23-13:03:03        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
   dc:format="application/pdf"
   xmp:CreateDate="2018-01-04T15:39:32+08:00"
   xmp:CreatorTool="Microsoft® Visio® 2013"
   xmp:ModifyDate="2018-01-04T15:39:32+08:00"
   pdf:Keywords=""
   pdf:Producer="Microsoft® Visio® 2013">
   <dc:creator>
    <rdf:Seq>
     <rdf:li>刘志强</rdf:li>
    </rdf:Seq>
   </dc:creator>
   <dc:description>
    <rdf:Alt>
     <rdf:li xml:lang="x-default"/>
    </rdf:Alt>
   </dc:description>
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default"/>
    </rdf:Alt>
   </dc:title>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -171.75 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 171.75 li
499.128 171.75 li
499.128 0 li
cp
clp
gsave
-.641975 171.88 mo
499.358 171.88 li
499.358 -.120058 li
-.641975 -.120058 li
-.641975 171.88 li
clp
88.0679 117.11 mo
105.147 117.11 li
105.147 49.079 li
88.0679 49.079 li
88.0679 117.11 li
false sop
/0 
[/DeviceRGB] /CSA add_res
.984 .898 .835 rgb
ef
88.0679 117.11 mo
88.0679 116.735 li
104.772 116.735 li
104.772 49.4545 li
88.4434 49.4545 li
88.4434 117.11 li
88.0679 117.11 li
88.0679 116.735 li
88.0679 117.11 li
87.6926 117.11 li
87.6926 48.7037 li
105.522 48.7037 li
105.522 117.485 li
87.6926 117.485 li
87.6926 117.11 li
88.0679 117.11 li
0 .69 .941 rgb
f
/1 
[/DeviceGray] /CSA add_res
0 gry
%ADOBeginSubsetFont: PBAAAA+Calibri-Bold Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /PBAAAA+Calibri-Bold def
/FontInfo 5 dict dup begin
/ItalicAngle 0 def
/FSType 8 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 83 /S put
dup 108 /l put
dup 111 /o put
dup 116 /t put
def
/FontBBox {-519 -306 1263 1039} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
5 dict dup begin
/.notdef <1C60D8A8C9B7A086528E2CBE7FD4F03CC6CDCA18E09BCC917FA5F1
19478AAC0A696931453BF661861F40ACE8D15EA0278E8F88478BB0248E8D1904
2FB8B7F2BB2D4ECFE961B3EEB80565197E481D427DFF375EC95F16C0E36FE28A
EC2A0702F6CB5ACA5B242B6593847C74B58C6FBE25BCF0D4AFF25D49578CAB0D
929B025DECF86FE8C45E91FC3804785896842CEEC7085BA98EF5BCC94B208BF4
3A5FA51448171853E476E618A0AB76D0CDCEE51B8CF3FCD6DA051824D7EFC40D
8D270BAD39624CE3E5CBFE64B165BA24EF48FCEC82F8DEB8BFCD829A07FF03FF
E381E622BF0967DB53309A79D2F393F52C4B535EC59CAFAAC152061A92D31A3A
6E83C18D63056F4453027EAA702C494809677EB8C59BD219046DE492EABC7DF1
9D085C93C98D2A8DDC68AF0F5D7D82447ED6165A8DE95E6965A0F15A3F7696EA
E508CE290FD5B2FFA8A49A20B157645C3C3FEFBC64E2B40E75B90474094AF159
9689FA1EAB0D131F6DB991FC0D5943DE54CA9E5ECDA986A63CDF0394AF79DB39
8CE8AC4F02FDBD88EE6AE535CFB6C3B33C157AAFFBEC52BA3DACE77ABDA0C787
220FBA75DA1E45C945> |-
/S <1C60D8A8C9B742B2428B22C58173B85783D75A797DBCB372A0CB32648247
4FAB61F063E0140601EC7FF01420397E5BDA67D4F9EDAE8E10230A79EC92A883
0D2282FCE48C14D6255C2ED38A9227193C8E6C63D4DDC56C1677AD4EE7A081BF
7E8A0FF7039F31DB9E38AA3D9C2EB519583088084AA15E2BB9360A4E499CAC66
644008970F6456622973EBC19ABE9CB7A2E2E1E436FF7CFF17A456DD4F34C942
5E8B0FD7DE46D10D79C35ECAF346DB73750038187DFDA7C08FA4F48F7113F63A
FD0A79F7B60ED56D2ECBD0518AE5F6486AECEBC538DAAA88840DE9FD61A7C5CE
810708E5D83B5B7C944D9C1E933328832CB2C1C15FF59A769DC54012A003CD2D
939547D59BB8CA0EDD6EE29AE032391BAF39F38DA1EDFC771E0FCA4EC6DCF952
E839737B2539E516D209F792B48305C6FAB4D747AEC9E9C287FF4145435610A8
CE0D829239E17AD471B7D50F49EAEE2D4789B01FCDAE85BE94E4A248F072817A
DE20C93B792AF7C1262529AB3872BFC67D038B73B9815822C383A38940639918
361A4A73948EE1A93B0DB78FD9D96349705DBB9BAADC27C924FF385CADAA15DB
528408E800871EF0C31C6F3F452B977A4424498006B5AFF12D057DDA48B3582F
ED5A4C> |-
/l <1C60D8A8C9B874A685BEE6A5E28F9948AE1E7D147199A7FD5C3385C67EA3
BE0E4BDDEEBED94EEAEFFC708E6FBFBB110A4FD3B0B2C6A50B9DF51D26DA8F79
E50A98C439853420902774615E5C4AA802BC14286E49C6715A4394D046A1685B
7F2557950D872EDAE985E8B69D5B3A1679FE91E5F44DD94A755B4DC7CB2094A7
62633492> |-
/o <1C60D8A8C9B78181CF98F408291F4DD5CDCB6D065079E3C32B2DC7574F85
010122317EAC4CB787C5DCCAEA2DCDF59718E98AB798D0A7C1D0A4AFDAF28987
02DB340B4925E43E83E5146EC936D266F11A185F61F58114BA94B80C81D7D8DC
D3FC28BA75D8A38DA3AC10DA8DE7F6935CAB2D98F05D04B7C0D79A2CEACAB661
A11B789E89B6D4B148DC1A7CB3550A2956556AF6D6068A328964C77CAC19F987
75B69DBB8B2282422672CD9527E49182094C282B5043D56AD150402E5BC1D0FB
CC13812FC82AC63ACFCEEF5D77A3A595F46555D44C6632B4645C234C6CF48BE6
8F54878A59D4C863675CD2B4AF968FD7298C1FD09F77D9> |-
/t <1C60D8A8C9B811DA5D4543EFE763FE07FB96B6C57E1041B720B12395755A
D170E1C95BCAF4A2E07F08B3527B85FB4B749D3F56190F68B968E525451C3AE3
228733358D3B0A4C671159FB2D66F4623773F95AB53B6E5F82C4D1162EF1F1D4
E57FDA1EEF70327DBE4F94D4CA953DA49B009A6CE451FDF5FD819F6892B657B7
073F3DB90026C98348CDA83213F5FE3803287637443B9875961ADEC93A662F36
7D30B1D64FEC94C3B7D13A776301EC9C6F446E01C4556C7599D35348744BB4C0
7BEDF72B7B19A9909847F0BA47C222B2E533F87C4B7AA516B5A1E0E7365242B5
879EFE81A74993AD272F8F9838C2A26DF98C12A45718CB59AC62E5107E8E34F2
7910F2367476C7C04E0E4233AFE86333074EFF0032ECDB6435F19DBFBCDB19D0
579CF4055335373B7C3C1BD559B22725F49EA0166722B1401585> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/IESYKG+Calibri-Bold /PBAAAA+Calibri-Bold findfont ct_VMDictPut
/IESYKG+Calibri-Bold*1 
[83{/.notdef}rp /S 24{/.notdef}rp /l 2{/.notdef}rp /o 4{/.notdef}rp /t 
139{/.notdef}rp]
IESYKG+Calibri-Bold nf
IESYKG+Calibri-Bold*1 [-6.27e-7 -14.25 -14.25 6.27e-7 0 0 ]msf
100.988 94.71 mo
(Slot)
[-6.74036 -3.03528 -7.52393 0 ]ysh
.357 .608 .835 rgb
%ADOBeginSubsetFont: IESYKH+SimSun-GBK-EUC-H-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (IESYKH+SimSun-GBK-EUC-H)
%%Title: (IESYKH+SimSun-GBK-EUC-H Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /IESYKH+SimSun-GBK-EUC-H def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-8 -141 1000 859} def
/FontInfo 4 dict dup begin
/FSType 8 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 28779 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 2 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
0 <001C60D8A8C9B5EE31F4> |
258 <001C60D8A8C9B5EE3102B97DA49B9C2565F96C92655401A57AAFA547FAD
B589897873059305223E2C41775B0F583433C64658E1B144B67EE6854F55B223
C3856A9158BC7D5DB6FE38E50B5F730AF4B06BAE2AA8A1A41407C8734F43BE3E
1390D92BFC39466E44971CE24916A34F3B46B526300E724AB9EAFC497462FE20
3B58E23AC12B8EF5340E96AFE817A6074E27701A50225B44BD2BFFA1A0C8C9EB
CFAE463E19964FDD8D4895384D52ED10C5231C422EA6C24E2D7FEBE1811012E7
B8BC8> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /IESYKH+SimSun-GBK-EUC-H-Identity-H /Identity-H 0 [/IESYKH+SimSun-GBK-EUC-H] ct_ComposeFont pop end end
%ADOEndSubsetFont
/IESYKH+SimSun-GBK-EUC-H-Identity-H findfont [12.025 0 0 -12.025 0 0 ]msf
126.258 87.45 mo
(\001\002)sh
.75075 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
112.278 17.69 mo
150.938 17.87 li
@
112.958 20.46 mo
104.668 17.6499 li
112.988 14.9201 li
112.958 20.46 li
ef
150.258 15.09 mo
158.548 17.9 li
150.228 20.63 li
150.258 15.09 li
cp
ef
117.988 23.72 mo
145.168 23.84 li
145.228 11.84 li
118.048 11.72 li
117.988 23.72 li
cp
1 gry
ef
123.908 20.29 mo
123.868 20.49 li
123.758 20.64 li
123.608 20.72 li
123.418 20.75 li
122.878 20.75 li
122.758 20.75 122.658 20.74 122.578 20.71 cv
122.348 20.59 li
122.278 20.53 122.208 20.44 122.148 20.34 cv
122.088 20.24 122.008 20.11 121.928 19.94 cv
120.368 16.98 li
120.278 16.81 120.188 16.62 120.098 16.41 cv
119.998 16.21 119.918 16.01 119.848 15.82 cv
119.838 15.82 li
119.848 16.05 119.858 16.29 119.858 16.52 cv
119.868 16.75 119.868 16.99 119.868 17.24 cv
119.848 20.54 li
119.828 20.63 li
119.728 20.7 li
119.558 20.74 li
119.478 20.75 119.378 20.75 119.268 20.75 cv
119.148 20.75 119.058 20.75 118.978 20.74 cv
118.808 20.69 li
118.718 20.63 li
118.698 20.54 li
118.718 14.86 li
118.718 14.71 118.768 14.59 118.858 14.52 cv
118.948 14.44 119.058 14.4 119.188 14.4 cv
119.878 14.41 li
119.998 14.41 120.098 14.42 120.188 14.44 cv
120.418 14.55 li
120.598 14.75 li
120.658 14.84 120.718 14.94 120.778 15.07 cv
121.998 17.38 li
122.068 17.53 122.138 17.66 122.208 17.8 cv
122.278 17.93 122.348 18.07 122.408 18.2 cv
122.478 18.34 122.538 18.47 122.598 18.6 cv
122.658 18.73 122.718 18.86 122.778 18.99 cv
122.788 18.99 li
122.778 18.77 122.768 18.53 122.768 18.28 cv
122.758 18.03 122.758 17.8 122.758 17.57 cv
122.778 14.61 li
122.808 14.52 li
122.898 14.45 li
123.088 14.41 li
123.158 14.41 123.258 14.4 123.368 14.4 cv
123.478 14.4 123.578 14.41 123.648 14.42 cv
123.818 14.46 li
123.908 14.53 li
123.928 14.62 li
cp
129.788 18.38 mo
129.788 18.75 129.738 19.09 129.638 19.4 cv
129.538 19.7 129.388 19.97 129.188 20.19 cv
128.988 20.41 128.738 20.58 128.438 20.7 cv
128.138 20.81 127.788 20.87 127.388 20.87 cv
126.998 20.87 126.658 20.81 126.378 20.71 cv
126.088 20.6 125.858 20.44 125.668 20.23 cv
125.478 20.03 125.338 19.77 125.248 19.47 cv
125.158 19.17 125.118 18.83 125.118 18.45 cv
125.118 18.08 125.168 17.74 125.268 17.43 cv
125.368 17.12 125.518 16.86 125.718 16.64 cv
125.918 16.42 126.168 16.25 126.468 16.14 cv
126.768 16.02 127.118 15.96 127.518 15.96 cv
127.908 15.96 128.248 16.02 128.528 16.12 cv
128.818 16.23 129.058 16.39 129.238 16.59 cv
129.428 16.8 129.568 17.05 129.658 17.35 cv
129.748 17.65 129.788 17.99 129.788 18.38 cv
cp
128.518 18.43 mo
128.518 18.21 128.508 18.01 128.468 17.83 cv
128.438 17.65 128.378 17.49 128.298 17.36 cv
128.218 17.23 128.108 17.12 127.978 17.05 cv
127.848 16.97 127.678 16.93 127.468 16.93 cv
127.288 16.93 127.128 16.96 126.988 17.03 cv
126.848 17.1 126.738 17.19 126.648 17.32 cv
126.558 17.45 126.498 17.6 126.448 17.78 cv
126.408 17.96 126.388 18.17 126.378 18.4 cv
126.378 18.62 126.398 18.81 126.438 18.99 cv
126.468 19.18 126.528 19.33 126.608 19.47 cv
126.688 19.6 126.788 19.7 126.928 19.78 cv
127.068 19.85 127.238 19.89 127.438 19.89 cv
127.618 19.89 127.778 19.86 127.918 19.79 cv
128.058 19.73 128.168 19.63 128.258 19.5 cv
128.348 19.38 128.408 19.22 128.458 19.04 cv
128.498 18.86 128.518 18.66 128.518 18.43 cv
cp
134.748 20.63 mo
134.728 20.72 li
134.648 20.78 li
134.488 20.81 li
134.418 20.82 134.338 20.82 134.238 20.82 cv
134.138 20.82 134.048 20.82 133.988 20.81 cv
133.828 20.77 li
133.738 20.71 li
133.708 20.62 li
133.718 20.14 li
133.488 20.38 133.248 20.56 133.008 20.7 cv
132.758 20.83 132.488 20.89 132.188 20.89 cv
131.858 20.89 131.578 20.83 131.348 20.7 cv
131.118 20.57 130.928 20.39 130.788 20.17 cv
130.638 19.96 130.538 19.7 130.478 19.41 cv
130.408 19.12 130.378 18.81 130.378 18.49 cv
130.388 18.1 130.428 17.75 130.508 17.44 cv
130.598 17.13 130.718 16.87 130.878 16.65 cv
131.038 16.44 131.238 16.27 131.478 16.15 cv
131.718 16.04 131.988 15.98 132.298 15.98 cv
132.538 15.98 132.758 16.03 132.958 16.13 cv
133.158 16.23 133.358 16.38 133.548 16.57 cv
133.558 14.21 li
133.588 14.13 li
133.688 14.06 li
133.878 14.02 li
133.948 14.01 134.048 14.01 134.168 14.01 cv
134.288 14.01 134.388 14.01 134.468 14.02 cv
134.658 14.07 li
134.748 14.13 li
134.778 14.22 li
cp
133.548 17.71 mo
133.368 17.49 133.198 17.32 133.038 17.2 cv
132.878 17.08 132.708 17.02 132.538 17.02 cv
132.378 17.02 132.238 17.06 132.128 17.14 cv
132.008 17.22 131.918 17.33 131.848 17.46 cv
131.778 17.59 131.718 17.74 131.688 17.91 cv
131.648 18.07 131.638 18.24 131.628 18.41 cv
131.628 18.59 131.648 18.77 131.678 18.94 cv
131.698 19.12 131.748 19.27 131.818 19.4 cv
131.878 19.54 131.968 19.65 132.078 19.73 cv
132.188 19.81 132.328 19.85 132.498 19.85 cv
132.748 19.82 li
132.988 19.7 li
133.248 19.48 li
133.338 19.4 133.438 19.29 133.538 19.16 cv
cp
139.908 18.35 mo
139.908 18.5 139.868 18.61 139.808 18.68 cv
139.738 18.75 139.648 18.78 139.528 18.78 cv
136.878 18.77 li
136.878 18.96 136.898 19.13 136.938 19.28 cv
136.978 19.43 137.048 19.56 137.148 19.66 cv
137.248 19.77 137.368 19.85 137.518 19.91 cv
137.668 19.96 137.848 19.99 138.058 19.99 cv
138.278 19.99 138.468 19.98 138.628 19.95 cv
138.788 19.92 138.928 19.88 139.048 19.85 cv
139.168 19.81 139.268 19.78 139.348 19.75 cv
139.538 19.7 li
139.608 19.72 li
139.658 19.78 li
139.688 19.9 li
139.688 20.11 li
139.688 20.29 li
139.668 20.42 li
139.638 20.51 li
139.588 20.58 li
139.418 20.67 li
139.318 20.71 139.198 20.75 139.058 20.79 cv
138.908 20.82 138.738 20.85 138.548 20.88 cv
138.358 20.91 138.158 20.92 137.948 20.92 cv
137.558 20.92 137.218 20.87 136.928 20.77 cv
136.638 20.67 136.398 20.52 136.198 20.32 cv
136.008 20.12 135.858 19.87 135.768 19.57 cv
135.668 19.26 135.628 18.91 135.628 18.5 cv
135.628 18.11 135.678 17.77 135.788 17.46 cv
135.888 17.14 136.038 16.88 136.228 16.67 cv
136.418 16.45 136.658 16.29 136.928 16.17 cv
137.208 16.06 137.518 16.01 137.858 16.01 cv
138.228 16.01 138.538 16.06 138.798 16.17 cv
139.048 16.28 139.268 16.43 139.428 16.62 cv
139.598 16.81 139.718 17.04 139.788 17.3 cv
139.868 17.56 139.908 17.84 139.908 18.15 cv
cp
138.718 17.99 mo
138.728 17.64 138.658 17.37 138.508 17.17 cv
138.368 16.98 138.138 16.88 137.828 16.88 cv
137.668 16.88 137.538 16.9 137.418 16.96 cv
137.298 17.02 137.208 17.1 137.128 17.2 cv
137.048 17.3 136.998 17.41 136.948 17.55 cv
136.908 17.68 136.888 17.83 136.878 17.98 cv
cp
144.698 20.82 mo
144.688 21.16 144.658 21.44 144.598 21.65 cv
144.538 21.86 144.448 22.04 144.338 22.18 cv
144.218 22.33 144.068 22.43 143.888 22.51 cv
143.708 22.58 143.498 22.62 143.258 22.61 cv
143.118 22.61 143.008 22.6 142.918 22.59 cv
142.818 22.57 142.748 22.55 142.708 22.53 cv
142.618 22.45 li
142.588 22.35 li
142.568 22.23 li
142.568 22.04 li
142.578 21.82 li
142.608 21.67 li
142.648 21.6 li
142.708 21.57 li
142.808 21.58 li
142.978 21.6 li
143.198 21.56 li
143.348 21.44 li
143.438 21.22 li
143.458 21.13 143.468 20.98 143.468 20.79 cv
143.488 16.32 li
143.518 16.24 li
143.618 16.17 li
143.798 16.13 li
143.878 16.12 143.978 16.12 144.098 16.12 cv
144.218 16.12 144.318 16.12 144.398 16.13 cv
144.588 16.18 li
144.688 16.24 li
144.718 16.33 li
cp
144.818 14.84 mo
144.808 15.09 144.758 15.26 144.658 15.35 cv
144.558 15.45 144.378 15.49 144.098 15.49 cv
143.828 15.49 143.638 15.45 143.538 15.35 cv
143.448 15.26 143.398 15.1 143.398 14.86 cv
143.398 14.61 143.448 14.44 143.548 14.35 cv
143.648 14.25 143.838 14.2 144.118 14.2 cv
144.388 14.21 144.578 14.25 144.668 14.35 cv
144.768 14.44 144.818 14.61 144.818 14.84 cv
cp
0 gry
f
79.6079 124.13 mo
42.858 124.13 li
42.858 46.13 li
79.6079 46.13 li
79.6079 124.13 li
/2 
[/DeviceCMYK] /CSA add_res
/2 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 87.642 171.75 ]ct
[38.25 0 0 79.5 -45.534 46.87 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 51 
/H 106 
/M[51 0 0 -106 0 106 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 51 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 51 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 51 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 51 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&^B!L!jo>A^p],mGo)Jmo!X&T/mfWas!sAZ+l2Uqf!WrK,mf<Oo!WrH(klC_brrDot
o`>0p!!;<`!!:LI!s/Q/$LJ3'$4$e:q#Ksc"9JW,"U=AurWE3%l2Unf!!!&e!<3)`!!!)q!8.>T!<`T:
'^Z\>'b:QQ!UKdh!<WE.$1&$$#6Y/*!:^$k!WW6%lMpqd!k847!<WZD*$6:%+S6c\+!2I:$O$Rs!!NE,
$O[IUnIPj7%gr[J"Qoab!pfpe!r;o2!!NB+%2U-2mj&&]+;YIk!p]gh!<roA&,m12&HiXQ#6Y+o!!<9'
!!2Bc!W`9&cN!qHr;c<e"p"o;)'L:PnKnGd,pF39"p4)j"U#&=&.oKD&dAmZ&I\jH!pTah!<<*#!<DZj
"p"`)!<E0%cN!qHli71i"qDIn-1</a,pF3:"p4c(mJm@m#Rh7Vmh,d9%h&XF!p9O`!UKdf!<<2_!:'Ub
!pfmj!<s#N+XQS("XP?1%L*"#!!EE1$kO$>&dK!Z$jHh9!!)6`!!2Ed!W`9&cN!qHli71i"qDIn-1</a
,pF3:"p4)j"9\u=&/"@D"VD7R"p>"j!!!&d!!<6%!W^RI!!;Ke"T\f;(a13o-3Y\>)%HiPlMq"i#Rh7E
&ap>9&J#9S"9R`d!!2Ed!W`9&cN!qHli71i"qDIn-1</a,pF3:"p4)j"9\u=&/"@D"VD7R"p>"k!!*'#
li7(f!!:IH!!;Ke"T\f;(a13o-3PV=)%HiN!p]gh":,DI&ap>9&J#9S"9R`d!!2Ed!W`9&klBlH!!;Ke
"T\f;(a13o-3Y\>)%HiPlMq%j#Rh7Vmh,^7%h&XC"9R`d!!2Ed!W`9&cN!qHli7%e"p5>P+XQS("XP?1
%L*"#!!EE1$kO$>&d8jX$jHh9k5YJ_li7(f!!:IH!!;Ke"T\f;(a13o-3Y\>)%HiPlMq%j#Rh7Vmh,d9
%h&XF!p9O`!UKdf!<<2L!<)ru!qcQg!!NB-%N$?8mj82a+rLjp!p]gh":,DI&ap>9&J#9S"9R`d!!2fo
p&G-p!!:IH!!;Ke"T\f;(a13o-3Y\>)%HiPp&Odd"9\u=&/"@D"VD7R"p>"j!!!&d!!30$!o3kJ!!!)e
!!NB-%N$?8mj82a+rLjp!p]gh":,DI&ap>9&J#9S"9S;tnGiOili7(f!!:IH!!;Ke"T\f;(a14$-MJhj
,pF3:"p4)j"9\u=&/"@D"VD7R"p>"j!!!&d!!30$!r)cJ!!!)e!!NB-%N$?8mj82a+rLjp!p]gh":,DI
&c*.6&d8jX$jHh9k5YJ_li7(f!!:IH!!;rroDf$q"qDIn-1</a,pF3:"p4)j"9\u=&/"@D"VD7R"p>"j
!!!&s!:g*k!<<2I!!!)e!!NB-%N$?8mj82a+rLjp!r;of!!EE1$kO$>&d8jX$jHh9k5YJ_li7(f!!;*Z
mf3=hli71i"qDIn-1</a,pF3:"p4)j"9\u=&/"@D"VD7R"p>#)!:9ad!UKdf!<<2I!!!)e!!NB-%N$?8
r?h+_"XP?1%L*"#!!EE1$kO$>&d8jX$jHh9k5YJ_li7(f!!<&ue,TIMli71i"qDIn-1</a,pF3:"p4)j
"9\u=&/"mSne)*<%h&XF!p9O`!UKdf!<<2I!!!*!!:Tsl!<s#N+XQS("XP?1%L*"#!!EE1$kO$>&d8jX
$jHh9k5YPa!!)Ee!W`9&cN!qHli71i"qDIn-1</a,pF3:"p4c(mJm@m#Rh7Vmh,d9%h&XF!p9O`!UKdf
!<<2_!:'Ub!pfmj!<s#N+XQS("XP?1%L*"#!!EE1$kO$>&dK!Z$jHh9!!)6`!!2Ed!W`9&cN!qHli71i
"qDIn-1</a,pF3:"p4)j"9\u=&/"@D"VD7R"p>"j!!!&d!!<6%!W^RI!!;Ke"T\f;(a13o-3Y\>)%HiP
lMq"i#Rh7E&ap>9&J#9S"9R`d!!2Ed!W`9&cN!qHli71i"qDIn-1</a,pF3:"p4)j"9\u=&/"@D"VD7R
"p>"k!!*'#li7(f!!:IH!!;Ke"T\f;(a13o-3PV=)%HiN!p]gh":,DI&ap>9&J#9S"9R`d!!2Ed!W`9&
klBlH!!;Ke"T\f;(a13o-3Y\>)%HiPlMq%j#Rh7Vmh,^7%h&XC"9R`d!!2Ed!W`9&cN!qHli7%e"p5>P
+XQS("XP?1%L*"#!!EE1$kO$>&d8jX$jHh9k5YJ_li7(f!!:IH!!;Ke"T\f;(a13o-3Y\>)%HiPlMq%j
#Rh7Vmh,d9%h&XF!p9O`!UKdf!<<2L!<)ru!qcQg!!NB-%N$?8mj82a+rLjp!p]gh":,DI&ap>9&J#9S
"9R`d!!2fop&G-p!!:IH!!;Ke"T\f;(a13o-3Y\>)%HiPp&Odd"9\u=&/"@D"VD7R"p>"j!!!&d!!30$
!o3kJ!!!)e!!NB-%N$?8mj82a+rLjp!p]gh":,DI&ap>9&J#9S"9S;tnGiOili7(f!!:IH!!;Ke"T\f;
(a14$-MJhj,pF3:"p4)j"9\u=&/"@D"VD7R"p>"j!!!&d!!30$!r)cJ!!!)e!!NB-%N$?8mj82a+rLjp
!p]gh":,DI&c*.6&d8jX$jHh9k5YJ_li7(f!!:IH!!;rroDf$q"qDIn-1</a,pF3:"p4)j"9\u=&/"@D
"VD7R"p>"j!!!&s!:g*k!<<2I!!!)e!!NB-%N$?8mj82a+rLjp!r;of!!EE1$kO$>&d8jX$jHh9k5YJ_
li7(f!!;*Zmf3=hli71i"qDIn-1</a,pF3:"p4)j"9\u=&/"@D"VD7R"p>#)!:9ad!UKdf!<<2I!!!)e
!!NB-%N$?8r?h+_"XP?1%L*"#!!EE1$kO$>&d8jX$jHh9k5YJ_li7(f!!<&ue,TIMli71i"qDIn-1</a
,pF3:"p4)j"9\u=&/"mSne)*<%h&XF!p9O`!UKdf!<<2I!!!*!!:Tsl!<s#N+XQS("XP?1%L*"#!!EE1
$kO$>&d8jX$jHh9k5YPa!!)Ee!W`9&cN!qHli71i"qDIn-1</a,pF3:"p4c(mJm@m#Rh7Vmh,d9%h&XF
!p9O`!UKdf!<<2_!:'Ub!pfmj!<s#N+XQS("XP?1%L*"#!!EE1$kO$>&dK!Z$jHh9!!)6`!!2Ed!W`9&
cN!qHli71i"qDIn-1</a,pF3:"p4)j"9\u=&/"@D"VD7R"p>"j!!!&d!!<6%!W^RI!!;Ke"T\f;(a13o
-3Y\>)%HiPlMq"i#Rh7E&ap>9&J#9S"9R`d!!2Ed!W`9&cN!qHli71i"qDIn-1</a,pF3:"p4)j"9\u=
&/"@D"VD7R"p>"k!!*'#li7(f!!:IH!!;Ke"T\f;(a13o-3PV=)%HiN!p]gh":,DI&ap>9&J#9S"9R`d
!!2Ed!W`9&klBlH!!;Ke"T\f;(a13o-3Y\>)%HiPlMq%j#Rh7Vmh,^7%h&XC"9R`d!!2Ed!W`9&cN!qH
li7%e"p5>P+XQS("XP?1%L*"#!!EE1$kO$>&d8jX$jHh9k5YJ_li7(f!!:IH!!;Ke"T\f;(a13o-3Y\>
)%HiPlMq%j#Rh7Vmh,d9%h&XF!p9O`!UKdf!<<2L!<)ru!qcQg!!NB-%N$?8mj82a+rLjp!p]gh":,DI
&ap>9&J#9S"9R`d!!2fop&G-p!!:IH!!;Ke"T\f;(a13o-3Y\>)%HiPp&Odd"9\u=&/"@D"VD7R"p>"j
!!!&d!!30$!o3kJ!!!)e!!NB-%N$?8mj82a+rLjp!p]gh":,DI&ap>9&J#9S"9S;tnGiOili7(f!!:IH
!!;Ke"T\f;(a14$-MJhj,pF3:"p4)j"9\u=&/"@D"VD7R"p>"j!!!&d!!30$!r)cJ!!!)e!!NB-%N$?8
mj82a+rLjp!p]gh":,DI&c*.6&d8jX$jHh9k5YJ_li7(f!!:IH!!;rroDf$q"qDIn-1</a,pF3:"p4)j
"9\u=&/"@D"VD7R"p>"j!!!&s!:g*k!<<2I!!!)e!!NB-%N$?8mj82a+rLjp!r;of!!EE1$kO$>&d8jX
$jHh9k5YJ_li7(f!!;*Zmf3=hli71i"qDIn-1</a,pF3:"p4)j"9\u=&/"@D"VD7R"p>#)!:9ad!UKdf
!<<2I!!!)e!!NB-%N$?8r?h+_"XP?1%L*"#!!EE1$kO$>&d8jX$jHh9k5YJ_li7(f!!<&ue,TIMli71i
"qDIn-1</a,pF3:"p4)j"9\u=&/"mSne)*<%h&XF!p9O`!UKdf!<<2I!!!*!!:Tsl!<s#N+XQS("XP?1
%L*"#!!EE1$kO$>&d8jX$jHh9k5YPa!!)Ee!W`9&cN!qHli71i"qDIn-1</a,pF3:"p4c(mJm@m#Rh7V
mh,d9%h&XF!p9O`!UKdf!<<2_!:'Ub!pfmj!<s#N+XQS("XP?1%L*"#!!EE1$kO$>&dK!Z$jHh9!!)6`
!!2Ed!W`9&cN!qHli71i"qDIn-1</a,pF3:"p4)j"9\u=&/"@D"VD7R"p>"j!!!&d!!<6%!W^RI!!;Ke
"T\f;(a13o-3Y\>)%HiPlMq"i#Rh7E&ap>9&J#9S"9R`d!!2Ed!W`9&cN!qHli71i"qDIn-1</a,pF3:
"p4)j"9\u=&/"@D"VD7R"p>"k!!*'#li7(f!!:IH!!;Ke"T\f;(a13o-3PV=)%HiN!p]gh":,DI&ap>9
&J#9S"9R`d!!2Ed!W`9&klBlH!!;Ke"T\f;(a13o-3Y\>)%HiPlMq%j#Rh7Vmh,^7%h&XC"9R`d!!2Ed
!W`9&cN!qHli7%e"p5>P+XQS("XP?1%L*"#!!EE1$kO$>&d8jX$jHh9k5YJ_li7(f!!:IH!!;Ke"T\f;
(a13o-3Y\>)%HiPlMq%j#Rh7Vmh,d9%h&XF!p9O`!UKdf!<<2L!<)ru!qcQg!!NB-%N$?8mj82a+rLjp
!p]gh":,DI&ap>9&J#9S"9R`d!!2fop&G-p!!:IH!!;Ke"T\f;(a13o-3Y\>)%HiPp&Odd"9\u=&/"@D
"VD7R"p>"j!!!&d!!30$!o3kJ!!!)e!!NB-%N$?8mj82a+rLjp!p]gh":,DI&ap>9&J#9S"9S;tnGiOi
li7(f!!:IH!!;Ke"T\f;(a14$-MJhj,pF3:"p4)j"9\u=&/"@D"VD7R"p>"j!!!&d!!30$!r)cJ!!!)e
!!NB-%N$?8mj82a+rLjp!p]gh":,DI&c*.6&d8jX$jHh9k5YJ_li7(f!!:IH!!;rroDf$q"qDIn-1</a
,pF3:"p4)j"9\u=&/"@D"VD7R"p>"j!!!&s!:g*k!<<2I!!!)e!!NB-%N$?8mj82a+rLjp!r;of!!EE1
$kO$>&d8jX$jHh9k5YJ_li7(f!!;*Zmf3=hli71i"qDIn-1</a,pF3:"p4)j"9\u=&/"@D"VD7R"p>#)
!:9ad!UKdf!<<2I!!!)e!!NB-%N$?8r?h+_"XP?1%L*"#!!EE1$kO$>&d8jX$jHh9k5YJ_li7(f!!<&u
e,TIMli71i"qDIn-1</a,pF3:"p4)j"9\u=&/"mSne)*<%h&XF!p9O`!UKdf!<<2I!!!*!!:Tsl!<s#N
+XQS("XP?1%L*"#!!EE1$kO$>&d8jX$jHh9k5YPa!!)Ee!W`9&cN!qHli71i"qDIn-1</a,pF3:"p4c(
mJm@m#Rh7Vmh,d9%h&XF!p9O`!UKdf!<<2_!:'Ub!pfmj!<s#N+XQS("XP?1%L*"#!!EE1$kO$>&dK!Z
$jHh9!!)6`!!2Ed!W`9&cN!qHli71i"qDIn-1</a,pF3:"p4)j"9\u=&/"@D"VD7R"p>"j!!!&d!!<6%
!W^RI!!;Ke"T\f;(a13o-3Y\>)%HiPlMq"i#Rh7E&ap>9&J#9S"9R`d!!2Ed!W`9&cN!qHli71i"q;Fn
-1</a,pF3:"p4)j"9\r<&/"@D"VD7R"p>"m!!**#!<</f!!<6&!!:IH!!;Ke"T\`8(Eask,m5J9(_-`M
!p]gh!<roC&FL,5%L`UG!p]ge!WhWf!!3#u!!;Bbk5YJ`li71i!t,e`+R^KX+<;4*"9Ifg"9Jc6%M%q<
!tGbI"TSSf!<3,b!!!)1!!**'!XK>QmMQ0F((^cS!UB^f!sAl:m0j((#R1@q!!NE(!<<*#nGiXl!!!&-
!!<9*#n-,1!t,D<!pTag!<EB/#k%s##R(D5!U0Ra!r`2g!WE'!!mgr;!;?Hq!<N?,m03Xq!s/Mg!!30%
!pg$k!<N;U!;HNo!jVh+!UTsg!V6<^!:9jI!:9jI!;?Qh!fR,2!.k3&!.k3&!3cHR~>

%%EndBinary
grestore
np
51.228 117.11 mo
68.307 117.11 li
68.307 49.079 li
51.228 49.079 li
cp
.984 .898 .835 rgb
ef
2 lc
0 lj
2 ml
51.228 117.11 mo
68.307 117.11 li
68.307 49.079 li
51.228 49.079 li
cp
0 .69 .941 rgb
@
0 gry
IESYKG+Calibri-Bold*1 [-6.27e-7 -14.25 -14.25 6.27e-7 0 0 ]msf
64.108 94.71 mo
(Slot)
[-6.74036 -3.03528 -7.52393 0 ]ysh
.357 .608 .835 rgb
/IESYKH+SimSun-GBK-EUC-H-Identity-H findfont [12.025 0 0 -12.025 0 0 ]msf
72.328 87.45 mo
(\001\002)sh
1 lc
1 lj
58.848 17.69 mo
97.498 17.87 li
@
59.518 20.46 mo
51.228 17.65 li
59.548 14.92 li
59.518 20.46 li
cp
ef
96.8181 15.0899 mo
105.118 17.9 li
96.7879 20.6301 li
96.8181 15.0899 li
ef
64.598 23.72 mo
91.678 23.84 li
91.738 11.84 li
64.658 11.72 li
64.598 23.72 li
cp
1 gry
ef
70.518 20.29 mo
70.478 20.49 li
70.368 20.64 li
70.218 20.72 li
70.028 20.75 li
69.488 20.75 li
69.368 20.75 69.268 20.74 69.188 20.71 cv
68.958 20.59 li
68.888 20.53 68.828 20.45 68.758 20.34 cv
68.698 20.24 68.618 20.11 68.538 19.94 cv
66.978 16.98 li
66.888 16.81 66.798 16.62 66.708 16.41 cv
66.608 16.21 66.528 16.01 66.458 15.82 cv
66.448 15.82 li
66.458 16.05 66.468 16.29 66.468 16.52 cv
66.478 16.75 66.478 16.99 66.478 17.24 cv
66.458 20.54 li
66.438 20.63 li
66.338 20.7 li
66.168 20.74 li
66.088 20.75 65.998 20.75 65.878 20.75 cv
65.758 20.75 65.668 20.75 65.588 20.74 cv
65.418 20.69 li
65.328 20.63 li
65.308 20.54 li
65.328 14.86 li
65.328 14.71 65.378 14.59 65.468 14.52 cv
65.558 14.44 65.668 14.4 65.798 14.4 cv
66.488 14.41 li
66.608 14.41 66.718 14.42 66.798 14.44 cv
67.028 14.55 li
67.208 14.75 li
67.268 14.84 67.328 14.94 67.388 15.07 cv
68.608 17.38 li
68.678 17.53 68.748 17.66 68.818 17.8 cv
68.888 17.93 68.958 18.07 69.018 18.2 cv
69.088 18.34 69.148 18.47 69.208 18.6 cv
69.268 18.73 69.328 18.86 69.388 18.99 cv
69.398 18.99 li
69.388 18.77 69.378 18.53 69.378 18.28 cv
69.368 18.03 69.368 17.8 69.368 17.57 cv
69.388 14.61 li
69.418 14.52 li
69.518 14.45 li
69.698 14.41 li
69.768 14.41 69.868 14.4 69.978 14.4 cv
70.088 14.4 70.188 14.41 70.258 14.42 cv
70.438 14.46 li
70.518 14.53 li
70.538 14.62 li
cp
76.398 18.38 mo
76.398 18.75 76.348 19.09 76.248 19.4 cv
76.148 19.7 75.998 19.97 75.798 20.19 cv
75.598 20.41 75.348 20.58 75.048 20.7 cv
74.748 20.81 74.398 20.87 73.998 20.87 cv
73.608 20.87 73.278 20.81 72.988 20.71 cv
72.698 20.6 72.468 20.44 72.278 20.23 cv
72.088 20.03 71.948 19.77 71.858 19.48 cv
71.768 19.18 71.728 18.83 71.728 18.45 cv
71.728 18.08 71.778 17.74 71.878 17.43 cv
71.978 17.12 72.128 16.86 72.328 16.64 cv
72.528 16.42 72.778 16.25 73.078 16.14 cv
73.378 16.02 73.728 15.96 74.128 15.96 cv
74.518 15.96 74.858 16.02 75.138 16.12 cv
75.428 16.23 75.668 16.39 75.848 16.59 cv
76.038 16.8 76.178 17.05 76.268 17.35 cv
76.358 17.65 76.398 18 76.398 18.38 cv
cp
75.128 18.43 mo
75.128 18.21 75.118 18.01 75.088 17.83 cv
75.048 17.65 74.988 17.49 74.908 17.36 cv
74.828 17.23 74.728 17.12 74.588 17.05 cv
74.458 16.97 74.288 16.93 74.078 16.93 cv
73.898 16.93 73.738 16.96 73.598 17.03 cv
73.468 17.1 73.348 17.19 73.258 17.32 cv
73.178 17.45 73.108 17.6 73.058 17.78 cv
73.018 17.96 72.998 18.17 72.998 18.4 cv
72.988 18.62 73.008 18.81 73.048 18.99 cv
73.078 19.18 73.138 19.33 73.218 19.47 cv
73.298 19.6 73.398 19.7 73.538 19.78 cv
73.678 19.85 73.848 19.89 74.048 19.89 cv
74.228 19.89 74.388 19.86 74.528 19.79 cv
74.668 19.73 74.778 19.63 74.868 19.5 cv
74.958 19.38 75.018 19.22 75.068 19.04 cv
75.108 18.86 75.128 18.66 75.128 18.43 cv
cp
81.358 20.63 mo
81.338 20.72 li
81.258 20.78 li
81.098 20.81 li
81.028 20.82 80.948 20.82 80.848 20.82 cv
80.748 20.82 80.658 20.82 80.598 20.81 cv
80.438 20.77 li
80.348 20.71 li
80.318 20.62 li
80.328 20.14 li
80.098 20.38 79.868 20.56 79.618 20.7 cv
79.368 20.83 79.098 20.89 78.798 20.89 cv
78.468 20.89 78.188 20.83 77.958 20.7 cv
77.728 20.57 77.538 20.39 77.398 20.17 cv
77.258 19.96 77.148 19.7 77.088 19.41 cv
77.018 19.12 76.988 18.81 76.988 18.49 cv
76.998 18.1 77.038 17.75 77.118 17.44 cv
77.208 17.13 77.328 16.87 77.488 16.65 cv
77.648 16.44 77.848 16.27 78.088 16.15 cv
78.328 16.04 78.598 15.98 78.908 15.98 cv
79.148 15.98 79.378 16.03 79.568 16.13 cv
79.768 16.23 79.968 16.38 80.158 16.57 cv
80.168 14.22 li
80.198 14.13 li
80.298 14.06 li
80.488 14.02 li
80.568 14.01 80.658 14.01 80.778 14.01 cv
80.908 14.01 80.998 14.01 81.078 14.02 cv
81.268 14.07 li
81.368 14.13 li
81.388 14.22 li
cp
80.158 17.71 mo
79.978 17.49 79.818 17.32 79.648 17.2 cv
79.488 17.08 79.328 17.02 79.148 17.02 cv
78.988 17.02 78.848 17.06 78.738 17.14 cv
78.618 17.22 78.528 17.33 78.458 17.46 cv
78.388 17.59 78.328 17.74 78.298 17.91 cv
78.258 18.07 78.248 18.24 78.248 18.41 cv
78.238 18.59 78.258 18.77 78.288 18.94 cv
78.318 19.12 78.358 19.27 78.428 19.41 cv
78.488 19.54 78.578 19.65 78.688 19.73 cv
78.798 19.81 78.938 19.85 79.108 19.85 cv
79.358 19.82 li
79.598 19.7 li
79.858 19.48 li
79.948 19.4 80.048 19.29 80.148 19.16 cv
cp
86.518 18.35 mo
86.518 18.5 86.478 18.61 86.418 18.68 cv
86.348 18.75 86.258 18.78 86.138 18.78 cv
83.488 18.77 li
83.488 18.96 83.508 19.13 83.548 19.28 cv
83.598 19.43 83.658 19.56 83.758 19.66 cv
83.858 19.77 83.978 19.85 84.128 19.91 cv
84.278 19.96 84.458 19.99 84.668 19.99 cv
84.888 19.99 85.078 19.98 85.238 19.95 cv
85.398 19.92 85.538 19.89 85.658 19.85 cv
85.778 19.81 85.878 19.78 85.958 19.75 cv
86.148 19.7 li
86.218 19.72 li
86.268 19.78 li
86.298 19.9 li
86.298 20.11 li
86.298 20.29 li
86.278 20.42 li
86.248 20.51 li
86.198 20.58 li
86.028 20.67 li
85.928 20.71 85.808 20.75 85.668 20.79 cv
85.518 20.82 85.348 20.85 85.158 20.88 cv
84.968 20.91 84.768 20.92 84.558 20.92 cv
84.168 20.92 83.828 20.87 83.538 20.77 cv
83.248 20.67 83.008 20.52 82.808 20.32 cv
82.618 20.12 82.468 19.87 82.378 19.57 cv
82.278 19.26 82.238 18.91 82.238 18.5 cv
82.238 18.11 82.288 17.77 82.398 17.46 cv
82.498 17.14 82.648 16.88 82.838 16.67 cv
83.028 16.45 83.268 16.29 83.538 16.17 cv
83.818 16.06 84.128 16.01 84.468 16.01 cv
84.838 16.01 85.148 16.06 85.408 16.17 cv
85.668 16.28 85.878 16.43 86.038 16.62 cv
86.208 16.81 86.328 17.04 86.408 17.3 cv
86.478 17.56 86.518 17.84 86.518 18.15 cv
cp
85.328 17.99 mo
85.338 17.64 85.268 17.37 85.118 17.17 cv
84.978 16.98 84.748 16.88 84.438 16.88 cv
84.278 16.88 84.148 16.9 84.028 16.96 cv
83.918 17.02 83.818 17.1 83.738 17.2 cv
83.668 17.3 83.608 17.41 83.568 17.55 cv
83.518 17.68 83.498 17.83 83.488 17.98 cv
cp
91.208 20.67 mo
91.178 20.76 li
91.078 20.82 li
90.898 20.85 li
90.818 20.86 90.718 20.87 90.598 20.86 cv
90.478 20.86 90.378 20.86 90.298 20.85 cv
90.108 20.81 li
90.008 20.75 li
89.978 20.67 li
89.998 16.32 li
90.028 16.24 li
90.128 16.17 li
90.318 16.13 li
90.398 16.12 90.498 16.12 90.618 16.12 cv
90.738 16.12 90.838 16.12 90.918 16.13 cv
91.108 16.18 li
91.208 16.24 li
91.228 16.33 li
cp
91.328 14.84 mo
91.328 15.09 91.278 15.26 91.178 15.35 cv
91.078 15.45 90.888 15.49 90.618 15.49 cv
90.338 15.49 90.158 15.45 90.058 15.35 cv
89.958 15.26 89.918 15.1 89.918 14.86 cv
89.918 14.61 89.968 14.44 90.068 14.35 cv
90.168 14.25 90.358 14.2 90.628 14.2 cv
90.908 14.21 91.088 14.25 91.188 14.35 cv
91.288 14.44 91.338 14.6 91.328 14.84 cv
cp
0 gry
f
27.948 117.11 mo
50.726 117.11 li
50.726 32.071 li
27.948 32.071 li
cp
.565 .667 .859 rgb
ef
2 lc
0 lj
27.948 117.11 mo
50.726 117.11 li
50.726 32.071 li
27.948 32.071 li
cp
0 .439 .753 rgb
@
0 gry
%ADOBeginSubsetFont: PBAAAA+Calibri-Bold AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
IESYKG+Calibri-Bold dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/B <1C60D8A8C9B7EA3AB4AA72EA6C9D5822C36DC52B7506387C94A1506AC7A8
6F6C6E817505B93D6B1F29709160B4EF452103E7352B5CED61024312789493DA
B3A1688AC39E6903EA4A00E3E139036273229653E5808447AFAAD391AEFC3F4C
70E766347D8579A41765D38DA51DA0EF2D7BEB0451F92CB8E33AE964134753DE
AE0E5BB106164A8A9354B1BB848EFABCAD33366AABBC777436C5EB334C583856
A66F083B29A6362E3B41B25F7CC2F26283599EC14ED7CF660C2F0227F5936084
018183304E87A47F24A572F1381D6556499F96458CF482730D853BA67111A38A
C37D07C18A1AD81581AD700702DCBA687C421A9364E42F7A22415A5F2501C076
7C28D0EDE5CB57305E2F8EECCFDB4F291D92B72F0299EC24C0738625586CCDA8
E7BC7264AAD589C6D6C0DFC1333B66982AB1A07865F01153DF85CB0BF3> |-
/a <1C60D8A8C9B7AD0A34D5A33DA54D708C09070E3263DB3F8B204742934F45
464C864E5219DC64C17C21334728C70A28136E97F8B50DED54E9169E494DCFFB
E08054CD1ABEDFE9442047B18ABC511F07776D5525C7536F54A7020A4D066604
44EA4587557797F3D30E946423D7B549AB2AE4911FA9B4137E2A2722357A506A
6A05F91A214894E28FEC6B492CDF90F6872AAE0C40180F5DD11FF249C62B7437
E3A71BA232F3D2872FD555E1C9AC4E7F4B48457EB6186F604DC3EE6103F0F881
A966A4A53DB93C1C7AD28044A61CF0FCE7D40BA68015641BB746FB7DDE0D2F13
5B3E72C27DE147EB6127162600CEE2FE996BF71B8B39FDE57DFC392DDA09C4BF
60254D74CA373499967C5100501D06A31B9AF30F8F868E5E3B054E309214BEED
4F999B3B55712B0FD812D6575581ED3C4A080C3FC359594852C6FA23B784C4DB
4B1AC424E90B4505E356F1C575F8C57FE52642AA261D219ED5B82760638581CA
02> |-
/c <1C60D8A8C9B719BD263F1C66E176AB1A9B9A5A3A8367D7DDD55624575D83
30769E89EDE2B210CAC0C33466D934E07EE8C5D0A40F156D15CC57AF923B2505
73D6A3F9259B0A3431793F366C2A4E1951E4FEDD7CFAEAA854A72A9831B3A189
34A1E3BA67B1825DD68D168A926FEDC2EA7260DFA821668535829AE8FBDD7974
81380CC39C4AF2C6ECADB05FF3DA8E4A111EB4A3E3B59FFB126A3A37C4B5A113
868987F4611BA41E12178776F476582469050F58D9C2434F2F75015CEE522ED8
E12899B67502531E8AB98B42F667383D35B65B55576BE7A1323FDACE70DEAB60
FF6C739F5C1FBD6BC404A862F611E798DE5F7D20626F50E2F0A84DB6262D7AA2
98F592743052BB8FB5A0340AD9FF86B3B347A6731F17F7E35046670F71F40967
A7BFAB9BA0179B380201FC6F3EA37CFED86A9E1255880201A87ECC18F17716BB
9085A306CE> |-
/e <1C60D8A8C9B7A4C86C545A4AC8A7D7F6C345E834CA1213E882E926387794
826A205EEEE689D37E8FC5A261291E47A8EB37515D6AFF3E8D4C2927EEA10BDE
E7B9C51B7C7E29EC21F969487478C80B6DD492C8CB06797735DBFAA0767835E1
6CF60557FF99669574049AC02AF815FE3A71EC95AE08115F25C3E55D5B1FD10C
A1E741534F0E60416081D7FA16D9DFEF57FF91FD82FC7BA4FB9689D718D9A71D
ED1EF9DCA51AF0BBC79B40093EF91CBC3D8C48A3FDFEA41B5047A65EAFDD5AF1
021F9C948AAB35D583226126C585E079DEB6D479075845CECA8ED7ED10944C11
C924501DD381B71E2F7690C30AF54ADDDF92DD4099EA219A54E3CF84E276FA78
71C8A6ED23473DBBAA6EDA7BEF929816C1760D14417F454980C243ACB7FEEE42
2DBAD62FF97870FD2250B1790169B64F76> |-
/n <1C60D8A8C9B78256DD09855002C1F642102EC28B82F48E21B28CD8D11618
04F5A9A747AD2624D941564B1DAE90411653B58E89369C53390A39373C180E92
1901CFF6CB5B97D1E2F6881105A39AF049AF7BAB6A1217A5C2B8A9279563CA12
76FC02BACD1EEE8432C4000AF8AC8B81C2B3B82F6968BF9741308293C4341FD8
C1BF06F82527B4BB1BFEB05C7AAE16687F72280798047F2DE0F0B0C1A73D4FFE
FAEDFA40DAB27F9393250746B607E6DD1B8488942E5E65DC28EF4BF61000038A
490B102DA889E711AC446FA2AE5AF546DC759185DC2C75747BB2C76E9F900921
B79B64F414F07BA72B97757066640FBFE321B86C7EC04E0E0AD1B078011E4790
36E3D4D1746C4387436B0F75E38AB678D2BFE9BAAAF021F8> |-
systemdict /gcheck known {setglobal} if end {end} if
end
IESYKG+Calibri-Bold /Encoding get
dup 66 /B put
dup 97 /a put
dup 99 /c put
dup 101 /e put
dup 110 /n put
pop
%ADOEndSubsetFont
/IESYKG+Calibri-Bold*1 
[66{/.notdef}rp /B 16{/.notdef}rp /S 13{/.notdef}rp /a /.notdef /c 
/.notdef /e 6{/.notdef}rp /l /.notdef /n /o 4{/.notdef}rp 
/t 139{/.notdef}rp]
IESYKG+Calibri-Bold nf
IESYKG+Calibri-Bold*1 [-6.281e-7 -14.275 -14.275 6.281e-7 0 0 ]msf
43.658 96.33 mo
(Beacon)
[-7.49445 -7.48019 -6.75211 -5.96695 -7.53711 0 ]ysh
1.5 lw
1 lc
1 lj
51.008 116.83 mo
51.258 3.73001 li
.357 .608 .835 rgb
@
/IESYKH+SimSun-GBK-EUC-H-Identity-H findfont [12.025 0 0 -12.025 0 0 ]msf
165.628 87.45 mo
(\001\002\001\002)
[12 0 ]xsh
.75075 lw
166.588 17.9 mo
188.208 17.9 li
@
167.278 20.67 mo
158.968 17.9 li
167.278 15.13 li
167.278 20.67 li
cp
ef
187.508 15.13 mo
195.818 17.9 li
187.508 20.67 li
187.508 15.13 li
cp
ef
164.718 23.3 mo
190.074 23.3 li
190.074 12.5 li
164.718 12.5 li
cp
1 gry
ef
170.458 17.69 mo
170.458 18.16 170.398 18.59 170.278 18.96 cv
170.158 19.33 169.988 19.65 169.758 19.9 cv
169.528 20.16 169.238 20.36 168.898 20.5 cv
168.558 20.63 168.158 20.7 167.708 20.7 cv
167.268 20.7 166.888 20.64 166.558 20.53 cv
166.228 20.41 165.948 20.24 165.728 20 cv
165.508 19.76 165.348 19.46 165.238 19.09 cv
165.128 18.73 165.068 18.29 165.068 17.79 cv
165.068 17.33 165.128 16.92 165.248 16.55 cv
165.368 16.18 165.538 15.87 165.768 15.61 cv
165.998 15.36 166.288 15.16 166.628 15.02 cv
166.968 14.88 167.368 14.81 167.818 14.81 cv
168.248 14.81 168.628 14.87 168.958 14.98 cv
169.288 15.1 169.558 15.27 169.788 15.51 cv
170.008 15.75 170.168 16.05 170.288 16.41 cv
170.398 16.77 170.458 17.2 170.458 17.69 cv
cp
169.238 17.75 mo
169.238 17.45 169.218 17.18 169.168 16.94 cv
169.128 16.69 169.048 16.48 168.928 16.31 cv
168.818 16.14 168.668 16 168.478 15.91 cv
168.298 15.81 168.058 15.76 167.778 15.76 cv
167.498 15.76 167.258 15.82 167.068 15.92 cv
166.878 16.03 166.718 16.17 166.608 16.35 cv
166.488 16.53 166.408 16.74 166.358 16.98 cv
166.308 17.22 166.288 17.47 166.288 17.74 cv
166.288 18.05 166.308 18.33 166.358 18.57 cv
166.398 18.82 166.478 19.03 166.588 19.21 cv
166.698 19.38 166.848 19.52 167.038 19.61 cv
167.228 19.7 167.458 19.75 167.748 19.75 cv
168.028 19.75 168.268 19.7 168.458 19.59 cv
168.648 19.48 168.808 19.34 168.918 19.16 cv
169.038 18.98 169.118 18.77 169.168 18.52 cv
169.218 18.28 169.238 18.03 169.238 17.75 cv
cp
173.598 20.06 mo
173.598 20.19 173.588 20.29 173.568 20.36 cv
173.508 20.51 li
173.388 20.58 li
173.208 20.64 li
172.988 20.68 li
172.738 20.69 li
172.518 20.69 172.328 20.66 172.168 20.61 cv
172.008 20.55 171.878 20.46 171.768 20.35 cv
171.668 20.23 171.588 20.09 171.538 19.91 cv
171.488 19.74 171.458 19.53 171.458 19.29 cv
171.458 17.28 li
170.988 17.28 li
170.868 17.18 li
170.838 17.11 170.818 16.99 170.818 16.83 cv
170.828 16.62 li
170.868 16.48 li
170.918 16.4 li
170.998 16.38 li
171.458 16.38 li
171.458 15.51 li
171.488 15.43 li
171.578 15.37 li
171.748 15.33 li
171.818 15.33 171.908 15.32 172.008 15.32 cv
172.118 15.32 172.208 15.33 172.278 15.33 cv
172.448 15.37 li
172.538 15.43 li
172.568 15.51 li
172.568 16.38 li
173.418 16.38 li
173.498 16.4 li
173.548 16.48 li
173.578 16.62 li
173.598 16.83 li
173.598 16.99 173.578 17.11 173.548 17.18 cv
173.418 17.28 li
172.568 17.28 li
172.568 19.12 li
172.568 19.33 172.598 19.49 172.668 19.6 cv
172.738 19.71 172.858 19.76 173.028 19.76 cv
173.188 19.75 li
173.308 19.71 li
173.398 19.68 li
173.468 19.66 li
173.518 19.68 li
173.558 19.74 li
173.578 19.86 li
173.598 20.06 li
cp
178.018 20.45 mo
177.988 20.53 li
177.898 20.58 li
177.738 20.62 li
177.658 20.62 177.578 20.63 177.468 20.63 cv
177.358 20.63 177.268 20.62 177.198 20.62 cv
177.028 20.58 li
176.938 20.53 li
176.918 20.45 li
176.918 18.21 li
176.918 18.02 176.898 17.87 176.868 17.77 cv
176.848 17.66 176.808 17.57 176.748 17.49 cv
176.548 17.31 li
176.468 17.26 176.368 17.24 176.258 17.24 cv
176.118 17.24 175.968 17.29 175.828 17.4 cv
175.688 17.5 175.538 17.65 175.378 17.85 cv
175.378 20.45 li
175.358 20.53 li
175.268 20.58 li
175.098 20.62 li
175.028 20.62 174.938 20.63 174.828 20.63 cv
174.718 20.63 174.628 20.62 174.558 20.62 cv
174.388 20.58 li
174.298 20.53 li
174.268 20.45 li
174.268 14.67 li
174.298 14.59 li
174.388 14.53 li
174.558 14.5 li
174.628 14.49 174.718 14.48 174.828 14.48 cv
174.938 14.48 175.028 14.49 175.098 14.5 cv
175.268 14.53 li
175.358 14.59 li
175.378 14.67 li
175.378 16.84 li
175.568 16.65 175.768 16.51 175.958 16.42 cv
176.158 16.33 176.368 16.28 176.578 16.28 cv
176.848 16.28 177.068 16.33 177.258 16.41 cv
177.438 16.5 177.588 16.62 177.698 16.77 cv
177.808 16.93 177.888 17.1 177.938 17.31 cv
177.988 17.51 178.018 17.76 178.018 18.05 cv
cp
183.148 18.38 mo
183.148 18.51 183.118 18.61 183.058 18.68 cv
182.998 18.74 182.908 18.77 182.808 18.77 cv
180.418 18.77 li
180.418 18.94 180.438 19.09 180.478 19.23 cv
180.518 19.36 180.578 19.48 180.668 19.57 cv
180.758 19.67 180.868 19.74 180.998 19.79 cv
181.138 19.84 181.298 19.87 181.488 19.87 cv
181.688 19.87 181.858 19.85 181.998 19.83 cv
182.148 19.8 182.278 19.77 182.378 19.73 cv
182.488 19.7 182.578 19.67 182.648 19.64 cv
182.818 19.6 li
182.888 19.61 li
182.928 19.67 li
182.948 19.78 li
182.958 19.96 li
182.958 20.13 li
182.938 20.25 li
182.918 20.33 li
182.868 20.39 li
182.718 20.47 li
182.628 20.51 182.518 20.54 182.388 20.58 cv
182.258 20.61 182.108 20.64 181.938 20.66 cv
181.768 20.69 181.588 20.7 181.388 20.7 cv
181.038 20.7 180.738 20.66 180.478 20.57 cv
180.208 20.48 179.988 20.35 179.818 20.17 cv
179.638 19.99 179.508 19.77 179.428 19.49 cv
179.338 19.22 179.298 18.9 179.298 18.54 cv
179.298 18.19 179.338 17.87 179.428 17.59 cv
179.518 17.31 179.658 17.08 179.828 16.88 cv
179.998 16.69 180.208 16.54 180.458 16.44 cv
180.708 16.33 180.988 16.28 181.298 16.28 cv
181.618 16.28 181.898 16.33 182.138 16.43 cv
182.368 16.52 182.558 16.66 182.708 16.83 cv
182.858 17 182.968 17.2 183.038 17.44 cv
183.108 17.67 183.148 17.93 183.148 18.2 cv
cp
182.068 18.06 mo
182.078 17.75 182.018 17.51 181.888 17.33 cv
181.748 17.15 181.548 17.06 181.268 17.06 cv
181.128 17.06 181.008 17.09 180.898 17.14 cv
180.798 17.2 180.708 17.27 180.638 17.36 cv
180.568 17.45 180.518 17.55 180.478 17.67 cv
180.448 17.79 180.428 17.92 180.418 18.06 cv
cp
186.538 16.9 mo
186.538 17 186.538 17.09 186.528 17.16 cv
186.508 17.31 li
186.458 17.39 li
186.388 17.42 li
186.308 17.4 li
186.208 17.37 li
186.088 17.33 li
185.948 17.32 li
185.758 17.36 li
185.568 17.47 li
185.358 17.68 li
185.288 17.77 185.208 17.88 185.128 18.01 cv
185.128 20.45 li
185.108 20.53 li
185.018 20.58 li
184.848 20.62 li
184.778 20.62 184.688 20.63 184.578 20.63 cv
184.468 20.63 184.378 20.62 184.308 20.62 cv
184.138 20.58 li
184.048 20.53 li
184.018 20.45 li
184.018 16.53 li
184.048 16.45 li
184.128 16.4 li
184.268 16.37 li
184.328 16.36 184.408 16.36 184.498 16.36 cv
184.728 16.37 li
184.878 16.4 li
184.948 16.45 li
184.968 16.53 li
184.968 17.02 li
185.068 16.87 185.168 16.75 185.258 16.66 cv
185.348 16.56 185.438 16.49 185.518 16.43 cv
185.768 16.31 li
186.008 16.28 li
186.128 16.29 li
186.268 16.31 li
186.388 16.34 li
186.468 16.39 li
186.508 16.44 li
186.528 16.51 li
186.538 16.65 li
186.538 16.71 186.538 16.79 186.538 16.9 cv
cp
189.778 19.34 mo
189.778 19.57 189.738 19.76 189.658 19.93 cv
189.578 20.1 189.458 20.25 189.308 20.36 cv
189.148 20.47 188.968 20.56 188.768 20.62 cv
188.558 20.67 188.328 20.7 188.088 20.7 cv
187.938 20.7 187.798 20.69 187.668 20.67 cv
187.538 20.65 187.418 20.62 187.308 20.59 cv
187.198 20.55 187.118 20.52 187.048 20.48 cv
186.888 20.38 li
186.818 20.24 li
186.798 20.17 186.788 20.08 186.788 19.95 cv
186.798 19.74 li
186.828 19.62 li
186.868 19.56 li
186.938 19.54 li
187.078 19.6 li
187.138 19.63 187.218 19.67 187.308 19.72 cv
187.408 19.76 187.518 19.8 187.638 19.84 cv
187.768 19.88 187.908 19.9 188.068 19.9 cv
188.168 19.9 188.248 19.89 188.328 19.87 cv
188.528 19.78 li
188.658 19.63 li
188.708 19.43 li
188.628 19.21 li
188.568 19.14 188.498 19.09 188.408 19.04 cv
188.318 18.99 188.218 18.95 188.108 18.91 cv
187.998 18.87 187.878 18.82 187.758 18.77 cv
187.638 18.72 187.528 18.67 187.408 18.6 cv
187.298 18.54 187.198 18.46 187.108 18.36 cv
187.018 18.27 186.948 18.16 186.898 18.03 cv
186.838 17.89 186.808 17.74 186.808 17.55 cv
186.808 17.36 186.848 17.19 186.918 17.03 cv
186.998 16.88 187.098 16.74 187.238 16.63 cv
187.378 16.52 187.548 16.44 187.738 16.37 cv
187.938 16.31 188.158 16.28 188.408 16.28 cv
188.528 16.28 188.648 16.29 188.768 16.31 cv
188.878 16.33 188.988 16.35 189.078 16.37 cv
189.178 16.4 189.248 16.43 189.318 16.46 cv
189.458 16.54 li
189.518 16.6 li
189.538 16.68 li
189.558 16.8 li
189.558 16.97 li
189.558 17.16 li
189.538 17.28 li
189.488 17.34 li
189.428 17.35 li
189.308 17.31 li
189.098 17.21 li
189.018 17.17 188.918 17.14 188.808 17.11 cv
188.698 17.08 188.578 17.06 188.438 17.06 cv
188.338 17.06 188.248 17.07 188.178 17.09 cv
187.998 17.18 li
187.888 17.32 li
187.858 17.48 li
187.938 17.71 li
188.158 17.87 li
188.248 17.92 188.348 17.96 188.468 18 cv
188.578 18.04 188.698 18.09 188.818 18.14 cv
188.938 18.19 189.058 18.24 189.168 18.31 cv
189.288 18.37 189.388 18.45 189.478 18.54 cv
189.568 18.64 189.648 18.75 189.698 18.88 cv
189.758 19.01 189.778 19.17 189.778 19.34 cv
cp
0 gry
f
1.5 lw
236.108 117.11 mo
236.108 3.73001 li
.357 .608 .835 rgb
@
.75075 lw
203.438 17.9 mo
228.488 17.9 li
@
204.128 20.67 mo
195.818 17.9 li
204.128 15.13 li
204.128 20.67 li
cp
ef
227.798 15.13 mo
236.108 17.9 li
227.798 20.67 li
227.798 15.13 li
cp
ef
201.188 23.3 mo
230.746 23.3 li
230.746 12.5 li
201.188 12.5 li
cp
1 gry
ef
0 gry
%ADOBeginSubsetFont: PBAAAA+Calibri-Bold AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
IESYKG+Calibri-Bold dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/I <1C60D8A8C9B861542AC637EE43C146C31BD9761A5744ABD275647292EE36
CB498857E20832A31E32228C922B76ED9EB9B45B679D97EE58115E0910D7A678
3C9D74B3C47A3C0DF89E3EE60E2849D5516E05FF3C845F308543415BCC223429
8E4DCADDBC225A62EEFA2E410319810E3AE2C3346BA419C601347FC59380E946
0C65AF6A> |-
/i <1C60D8A8C9B874A685BEE7073E3D9BEB2350BB486AC62AB5FFB3F3055796
FFA7201F6E4CDF32059564C619C9CC449E2E13D3438C6F3A00A8C33DF67EED72
B4A703E19615397FBD65B8F41AB93A2D076C7948B4D6A7E1920548D052C7AB18
31CD8F1E6F01CDE398A3464141E18D2DB8A524CC3BE1885811A2FA4464E9BFA4
4F3B137A209AC07BC2D4DC8265BE2C3CDB96FC76B4E494C7989F89FD865B563D
37857FCA1A5FB165B3A362BB87A93EC69254C2AAA91985E82347B6547083A306
CE> |-
/v <1C60D8A8C9B742B242AF24C5463CD21A2B2162380B9DE3D531C8CD22F818
42A79D4539006FDC16FA540CA25BD10A2DA54DD77514658FA916D57D23AF59C8
D707B16716909CEBFC129FAB05F53CB50FB180BB5967A8B933E73CE1AE72721C
BE70758EFCA352306115CBDBCF6DC408CB5D5213275358ACF8B0AB048749FCBA
188701EE9E97573A20C46A8730AAAC612922419B45133B11FE4C8B2093BE72B0
60D2C0B669E9DBFAC2DFE420C79E7EE0B4724A6B070A1EACFA1949B4C9C3E656
EDBDE19652FC805F0B8D63BD46CCAE3306432A23D4F903787F9252210173D07B
28222B1E5AA09FF6C761E5DD7A42C43A1DE7EE65F4C06FC72B3B232B502EFA15
3E77> |-
systemdict /gcheck known {setglobal} if end {end} if
end
IESYKG+Calibri-Bold /Encoding get
dup 73 /I put
dup 105 /i put
dup 118 /v put
pop
%ADOEndSubsetFont
/IESYKG+Calibri-Bold*1 
[66{/.notdef}rp /B 6{/.notdef}rp /I 9{/.notdef}rp /S 13{/.notdef}rp /a 
/.notdef /c /.notdef /e 3{/.notdef}rp /i 2{/.notdef}rp /l 
/.notdef /n /o 4{/.notdef}rp /t /.notdef /v 137{/.notdef}rp]
IESYKG+Calibri-Bold nf
IESYKG+Calibri-Bold*1 [9.025 0 0 -9.025 0 0 ]msf
201.438 20.88 mo
(Inactive)
[2.27429 5.2616 4.51251 3.77246 3.02338 2.26529 3.77252 0 ]xsh
.357 .608 .835 rgb
/IESYKH+SimSun-GBK-EUC-H-Identity-H findfont [12.025 0 0 -12.025 0 0 ]msf
220.338 87.45 mo
(\001\002)sh
236.038 117.11 mo
258.816 117.11 li
258.816 32.071 li
236.038 32.071 li
236.038 117.11 li
.565 .667 .859 rgb
ef
236.038 117.11 mo
236.038 116.735 li
258.441 116.735 li
258.441 32.4464 li
236.413 32.4464 li
236.413 117.11 li
236.038 117.11 li
236.038 116.735 li
236.038 117.11 li
235.663 117.11 li
235.663 31.6956 li
259.191 31.6956 li
259.191 117.485 li
235.663 117.485 li
235.663 117.11 li
236.038 117.11 li
0 .439 .753 rgb
f
0 gry
IESYKG+Calibri-Bold*1 [-6.27e-7 -14.25 -14.25 6.27e-7 0 0 ]msf
251.938 96.33 mo
(Beacon)
[-7.49557 -7.48132 -6.75455 -5.98499 -7.49542 0 ]ysh
125.158 119.36 mo
109.408 119.36 li
124.408 119.36 li
124.408 47.36 li
109.408 47.36 li
109.408 46.61 li
125.158 46.61 li
125.158 119.36 li
/2 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 87.642 171.75 ]ct
[17.25 0 0 74.25 21.016 51.64 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 23 
/H 99 
/M[23 0 0 -99 0 99 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 23 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 23 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 23 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 23 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&lN$>qr;c9i!!^aLoMGH^!JDKm!:L9r%g0NG!FmPE!!*K3quFV7!FmPE!!*K3f`:.7!FmPE!!*K3
^&S1D./O#8!!*K3^&S1D.-pp7$jH)"ci=)V.-pp7$jFiTo)Jf$.-pp7$jF?F!FmPG!!<3$$jF?F!FmPE
!!*K3iW.d7!FmPE!!*K3^An<8@jp[D!=T.G!!-RXli7%p"o&)<!!-RXli7%p"k<V<!!-RXli7%p"hjs;
@jq'Op&G+%"hjs;@jp[D!=T.t!7UuL@jp[D!=T.Q!;?Ho@jp[D!=T.G!!-RXli7%p"hjs;@jp[D!=T.g
!9!nY@jp[D!=T.G!!6XY!:9ae$jF?F!FmPE!!*K3oDm&7!FmPE!!*K3d/`S7!FmPE!!*K3^&S1D..[H8
!!*K3^&S1D.-pp7$jGeofDkq^.-pp7$jFQLqZ$Y,.-pp7$jF?F!FmPE!!*K3r;a\7!FmPE!!*K3g&U47
!FmPE!!*K3^&S1D./X)8!!*K3^&S1D.-pp7$jH,#cN!uU.-pp7$jFlUnc/]#.-pp7$jF?F!FmPH!<)s!
$jF?F!FmPE!!*K3irIj7!FmPE!!*K3^]4H:!+RGD!!*K3rW'b7!FmPE!!*K3gAp:7!FmPE!!*K3^&S1D
./a/8!!*K3^&S1D.-pp7$jH/$c2[lT.-pp7$jFoVnGiT".-pp7$jF?F!FmPI!;ulu$jF?F!FmPE!!*K3
j8dp7!FmPE!!*K3_#XH7!FmPE!!*K3^&S1D.-pp7$jHJ-`;fpK.-pp7$jG5_kPtWn.-pp7$jF?F!FmPR
!;$6l$jF?F!FmPE!!*K3m/YQ7!FmPE!!*K3aoM)7!FmPE!!*K3^&S1D.-pp7$jF?F!FmPE!!*K3huMX7
!FmPE!!*K3^&S.C!%@16!=T.G!!-RXli7%p"nhr<!!-RXli7%p"k*J<!!-RXli7%p"hjs;@jq!Mp](='
"hjs;@jp[D!=T.r!7h,N@jp[D!=T.O!;QTq@jp[D!=T.G!!-RXli7+r"TSP<!!-RXli7%p"l'+<!!-RX
li7%p"hjs;@jq<Vmf3@s"hjs;@jp[D!=T/&!6kKE@jp[D!=T.X!:Tsh@jp[D!=T.G!!-RXnGrIe!=T.G
!!-RXli7%p"m#a<!!-RXli7%p"i:9<!!-RXli7%p"hjs;@jp[D!=T//!5nj<@jp[D!=T.a!9X=_@jp[D
!=T.G!!-RXq>g*e!=T.H!!312.-pp7$jH&!irJNJ!F@2@!!*E1^&S1F..RB8!!*K3^&S1Q.-pp7$O,Ym
f`2%i.-pp7$jFNKqu?b-1$el@$jY,ZmlLPu.fKG:"p#/;quG7ImlUV7%fQIs#6>)3f`6U(JcOd1J,~>

%%EndBinary
grestore
np
124.408 119.36 mo
109.408 119.36 li
109.408 94.2684 li
118.745 94.2684 li
118.745 72.8506 li
109.408 72.8506 li
109.408 47.36 li
124.408 47.36 li
124.408 119.36 li
/2 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 87.642 171.75 ]ct
[15.5585 0 0 72.5099 21.4788 52.1499 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 65 
/H 302 
/M[65 0 0 -302 0 302 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 65 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 65 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 65 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 65 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&klAaHq>f7RnHJjqQ2oqF`ut3Yi<ANNr<Ablh#PJ<q>f[^jTYSeU&`dFb>J4l
rZ1q;m0qk\r=Al0r;b"`r=8&ld/_?erIt4kr;cEtfaRfirWE*!b96`nmf:N2b>J4lrZ1q;q$b^\r=Al0
r;b"`r=8K#`;n'_rFGmUr;ciublRbOrWW6#b<#S=qZ+A2b6%WQr[@^Fb5qPMrWW6#b<#S=\H'eS!+c(>
r[@^Fb5qPMrWW6#brYkcr><'FciX+HrFGmUr;b"Ar=&Z/r;b;-q)\Hk\H(1^p&b2'r[@^Fb5qPMrWW6#
ffJ^cr><'Fg]HsHrFGmUr;b"Ar=&Z/r;b_9m5k1_q>e;2b6%WQr[7aHrW(+Br=&Z/r;b#%r>5M7\cBnT
s().?r[@^Fb5qPMrWW6#bW5_br><'FcN=%HrFGmUr;b"Ar=&Z/r;b8,qE"Ql\H(.]pB(;(r[@^Fb5qPM
rWW6#fK/Xcr><'FgB-mHrFGmUr;b"Ar=&Z/r;b\8mQ1:`\H(RilN7#qr[@^Fb5qPMrWW6#j>uKcr><'F
k5s`HrFGmUr;b"Ar=&Z/r;c+Di]@#T\H)!uhZEaer[@^Fb5qPMrWW6#n2f>cr><'Fo)dSHrFGmUr;b"A
r=&Z/r;cOPeiNaH\H)F,dfTJYr[@^Fb5qPMrWW6#r&W1cr><'FrrUFHrFGmUr;b"Ar=&Z/rVuoub<#S=
]`A!2b6%WQr[@^Fb5qPMrWW6#b<#S=_Z9E2b6%WQr[@^FblRhFr=&Z/r;b#%r><WVnGp`6rFGmUr;b:I
q#UF&rWW6#b<#S=cN*82b6%WQr[@^Ff`C[Fr=&Z/r;b#%r>=&bjT*I*rFGmUr;b^Um/d.orWW6#b<#S=
]E%p2b6%WQr[@^Fb5qPM!!WB+r;b#%r><BOp]/J=rFGmUr;b%B!!3$,rWW6#b<#S=a8kc2b6%WQr[@^F
dK01Fr=&Z/r;b#%r><f[li>31rFGmUr;bINoE"n!rWW6#b<#S=e,\V2b6%WQr[@^Fh?!$Fr=&Z/r;b#%
r>=5ghuLq%rFGmUr;bmZkQ1VjrWW6#b<#S=huMI2b6%WQr[@^Fl2flFr=&Z/r;b#%r>=Yse,[YnrFGmU
r;c<fg]@?^rWW6#b<#S=li><2b6%WQr[@^Fp&W_Fr=&Z/r;b#%r>>)*a8jBbrFGmUr;c`rciO(RrWW6#
b<#S=p]//2b6%WQr[@aG!!(1Cr=&Z/r;b#%r>>M6]E$+VrFGmUr;b"Ar=&Z/r;b#%!#Y\P\H'kUrrW.0
r[@^Fb5qPMrWW6#coV(cr><'FdfT=HrFGmUr;b"Ar=&Z/r;bD0p,`-h\H(:ao)el$r[@^Fb5qPMrWW6#
gcFpcr><'FhZE0HrFGmUr;b"Ar=&Z/r;b#%r>>J5]`?4WrF>mVs![gGb5qPMrWW6#b<#Y?rtr9HbQ7bG
rFGmUr;b"Ar=&Z/r;b/)rAslo\H(%Zq?$V+r[@^Fb5qPMrWW6#eN3Fcr><'FfE1[HrFGmUr;b"Ar=&Z/
r;bS5nN-Uc\H(IfmK3>tr[@^Fb5qPMrWW6#iB$9cr><'Fj9"NHrFGmUr;b"Ar=&Z/r;c"AjZ<>W\H(mr
iWB'hr[@^Fb5qPMrWW6#m5j,cr><'Fn,hAHrFGmUr;b"Ar=&Z/r;cFMffK'K\H)=)ecPe\r[@^Fb5qPM
rWW6#q)Ztcr><'FquY4HrFGmUr;b"Ar=&Z/r;cjYbrYe?\c;^1b6%WQr[@^Fb5qPMrWW6#b<#S=^]=32
b6%WQr[@^Fb5hSOrXAc0r;b#%r><NSoDm&9rFGmUr;b1FquQa)rWW6#b<#S=bQ.&2b6%WQr[@^FecGIF
r=&Z/r;b#%r><r_kQ&d-rFGmUr;bURn,`IrrWW6#b<#S=fDsn2b6%WQr[@^Fb5qPMrWN9%rW(,&r><9L
qZ+e@rFGmUr;b"Ars\o9rWW6#b<#S=`;oQ2b6%WQr[@^FcN3tFr=&Z/r;b#%r><]Xmf:N4rFGmUr;b@K
pAt4$rWW6#b<#S=d/`D2b6%WQr[@^FgB$gFr=&Z/r;b#%r>=,dirI7(rFGmUr;bdWlN-qmrWW6#b<#S=
h#Q72b6%WQr[@^Fk5jZFr=&Z/r;b#%r>=Ppf)WtqrFGmUr;c3chZ<ZarWW6#b<#S=klB*2b6%WQr[@^F
o)[MFr=&Z/r;b#%r>=u'b5f]erFGmUr;cWodfKCUrWW6#b<#S=o`2r2b6%WQr[@^FrrL@Fr=&Z/r;b#%
r>>D3^AuFYrFGmUr;b"Ar=&Z/r;b#%r><'Fb5qZSrac!Vr;b"Ar=&Z/r;b)'s#U)q\H'tXquZh-r[@^F
b5qPMrWW6#dlR:cr><'FecPOHrFGmUr;b"Ar=&Z/r;bM3o/cge\H(Cdn,iQ!r[@^Fb5qPMrWW6#h`C-c
r>>A2^];OZrFGmU!!)uub5qPMrWW6#b<#S=!!'S1b6%]Ss()*Wr;b"Ar=&Z/r;b&&!':&q\H'qWr;uq.
r[@^Fb5qPMrWW6#dQ74cr><'FeH5IHrFGmUr;b"Ar=&Z/r;bJ2oK)pf\H(@cnH/Z"r[@^Fb5qPMrWW6#
hE('cr><'Fi<&<HrFGmUr;b"Ar=&Z/r;bn>kW8YZ\H(dojT>Bkr[@^Fb5qPMrWW6#l8mocr><'Fm/l/H
rFGmUr;b"Ar=&Z/r;c=JgcGBN\H)4&f`M+_r[@^Fb5qPMrWW6#p,^bcr><'Fq#]"HrFGmUr;b"Ar=&Z/
r;caVcoV+B\H)X2bl[iSr[@^Fb5qPMrWW9$!!(2'r><3Jr;b"BrFGmUr;b"Ar=&Z/r;b#%r><EPpAiA<
rFGmUr;b(CrrN',rWW6#b<#S=aT1i2b6%WQr[@^FdfK7Fr=&Z/r;b#%r><i\lN#*0rFGmUr;bLOo)\du
rWW6#b<#S=eH"\2b6%WQr[@^FhZ<*Fr=&Z/r;b#%r><0IrW(+CrFGmUr;b"Ar<rZ0rrr?$b<#S=_>s?2
b6%WQr[@^FbQ.\Er=&Z/r;b#%r><TUnc6i7rFGmUr;b7Hq>pO'rWW6#b<#S=c2d22b6%WQr[@^FfE(UF
r=&Z/r;b#%r>=#ajoER+rFGmUr;b[TmK*7prWW6#b<#S=g&U%2b6%WQr[@^Fj8nHFr=&Z/r;b#%r>=Gm
g&T:trFGmUr;c*`iW8udrWW6#b<#S=joEm2b6%WQr[@^Fn,_;Fr=&Z/r;b#%r>=l$c2c#hrFGmUr;cNl
ecG^XrWW6#b<#S=nc6`2b6%WQr[@^FquP.Fr=&Z/r;b#%r>>;0_>qa\rFGmUrVuoub5qPMrWW6#b<#S=
rW'S2b6%WQr[@^Fb5qPMrWW6#b;oV?rYW0Gbl[nHrFGmUr;b"Ar=&Z/r;b2*r&Xcn\H(([q#^M*r[@^F
b5qPMrWW6#eiNLcr><'Ff`LaHrFGmUr;b"Ar=&Z/r;bV6n2gLb\H(Lgm/m5sr[@^Fb5qPMrWW6#b<#S=
r;aM2b6%WQ!%@jqr;b"Ar=&Z/r;b#%rttbQ\H'hT!!<+0r[@^Fb5qPMrWW6#cT;"cr><'FdK97HrFGmU
r;b"Ar=&Z/r;bA/pH&6i\H(7`oE+u%r[@^Fb5qPMrWW6#gH+jcr><'Fh?**HrFGmUr;b"Ar=&Z/r;be;
lT4t]\H([lkQ:]nr[@^Fb5qPMrWW6#k;q]cr><'Fl2orHrFGmUr;b"Ar=&Z/r;c4Gh`C]Q\H)+#g]IFb
r[@^Fb5qPMrWW6#o/bPcr><'Fp&`eHrFGmUr;b"Ar=&Z/r;cXSdlRFE\H)O/ciX/Vr[@^Fb5qPMrWW6#
s#SCcr><*G!!(1DrFGmUr;b"Ar=&Z/r;b#%r><<Mq>e\?rFGmUr;b"A!"Ai8rWW6#b<#S=`W5W2b6%WQ
r[@^FciO%Fr=&Z/r;b#%r><`YmJtE3rFGmUr;bCLp&Y+#rWW6#b<#S=dK&J2b6%WQr[@^Fg]?mFr=&Z/
r;b#%r>=/eiW..'rFGmUr;b"Ar=&Z/!!)uub<#S=^B"-2b6%WQr[@^Fb5qVOrs\l1r;b#%r><KRo`3/:
rFGmUr;b.Er;lj*rWW6#b<#S=b5gu2b6%WQr[@^FeH,CFr=&Z/r;b#%r><o^klAm.rFGmUr;bRQnH&Rs
rWW6#b<#S=f)Xh2b6%WQr[@^Fi;r6Fr=&Z/r;b#%r>=>jh#PV"rFGmUr;c!]jT5;grWW6#b<#S=irI[2
b6%WQr[@^Fm/c)Fr=&Z/r;b#%r>=c!d/_>krFGmUr;cEif`D$[rWW6#b<#S=mf:N2b6%WQr[@^Fq#SqF
r=&Z/r;b#%r>>2-`;n'_rFGmUr;ciublRbOrWW6#b<#S=qZ+A2b6%WQr[@^Fb5qPMrWW6#b<#S=\H'eS
!+c(>r[@^Fb5qPMrWW6#brYkcr><'FciX+HrFGmUr;b"Ar=&Z/r;b;-q)\Hk\H(1^p&b2'r[@^Fb5qPM
rWW6#ffJ^cr><'Fg]HsHrFGmUr;b"Ar=&Z/r;b_9m5k1_q>e;2b6%WQr[7aHrW(+Br=&Z/r;b#%r>5M7
\cBnTs().?r[@^Fb5qPMrWW6#bW5_br><'FcN=%HrFGmUr;b"Ar=&Z/r;b8,qE"Ql\H(.]pB(;(r[@^F
b5qPMrWW6#fK/Xcr><'FgB-mHrFGmUr;b"Ar=&Z/r;b\8mQ1:`\H(RilN7#qr[@^Fb5qPMrWW6#j>uKc
r><'Fk5s`HrFGmUr;b"Ar=&Z/r;c+Di]@#T\H)!uhZEaer[@^Fb5qPMrWW6#n2f>cr><'Fo)dSHrFGmU
r;b"Ar=&Z/r;cOPeiNaH\H)F,dfTJYr[@^Fb5qPMrWW6#r&W1cr><'FrrUFHrFGmUr;b"Ar=&Z/rVuou
b<#S=]`A!2b6%WQr[@^Fb5qPMrWW6#b<#S=_Z9E2b6%WQr[@^FblRhFr=&Z/r;b#%r><WVnGp`6rFGmU
r;b:Iq#UF&rWW6#b<#S=cN*82b6%WQr[@^Ff`C[Fr=&Z/r;b#%r>=&bjT*I*rFGmUr;b^Um/d.orWW6#
b<#S=]E%p2b6%WQr[@^Fb5qPM!!WB+r;b#%r><BOp]/J=rFGmUr;b%B!!3$,rWW6#b<#S=a8kc2b6%WQ
r[@^FdK01Fr=&Z/r;b#%r><f[li>31rFGmUr;bINoE"n!rWW6#b<#S=e,\V2b6%WQr[@^Fh?!$Fr=&Z/
r;b#%r>=5ghuLq%rFGmUr;bmZkQ1VjrWW6#b<#S=huMI2b6%WQr[@^Fl2flFr=&Z/r;b#%r>=Yse,[Yn
rFGmUr;c<fg]@?^rWW6#b<#S=li><2b6%WQr[@^Fp&W_Fr=&Z/r;b#%r>>)*a8jBbrFGmUr;c`rciO(R
rWW6#b<#S=p]//2b6%WQr[@aG!!(1Cr=&Z/r;b#%r>>M6]E$+VrFGmUr;b"Ar=&Z/r;b#%!#Y\P\H'kU
rrW.0r[@^Fb5qPMrWW6#coV(cr><'FdfT=HrFGmUr;b"Ar=&Z/r;bD0p,`-h\H(:ao)el$r[@^Fb5qPM
rWW6#gcFpcr><'FhZE0HrFGmUr;b"Ar=&Z/r;b#%r>>J5]`?4WrF>mVs![gGb5qPMrWW6#b<#Y?rtr9H
bQ7bGrFGmUr;b"Ar=&Z/r;b/)rAslo\H(%Zq?$V+r[@^Fb5qPMrWW6#eN3Fcr><'FfE1[HrFGmUr;b"A
r=&Z/r;bS5nN-Uc\H(IfmK3>tr[@^Fb5qPMrWW6#iB$9cr><'Fj9"NHrFGmUr;b"Ar=&Z/r;c"AjZ<>W
\H(mriWB'hr[@^Fb5qPMrWW6#m5j,cr><'Fn,hAHrFGmUr;b"Ar=&Z/r;cFMffK'K\H)=)ecPe\r[@^F
b5qPMrWW6#q)Ztcr><'FquY4HrFGmUr;b"Ar=&Z/r;cjYbrYe?\c;^1b6%WQr[@^Fb5qPMrWW6#b<#S=
^]=32b6%WQr[@^Fb5hSOrXAc0r;b#%r><NSoDm&9rFGmUr;b1FquQa)rWW6#b<#S=bQ.&2b6%WQr[@^F
ecGIFr=&Z/r;b#%r><r_kQ&d-rFGmUr;bURn,`IrrWW6#b<#S=fDsn2b6%WQr[@^Fb5qPMrWN9%rW(,&
r><9LqZ+e@rFGmUr;b"Ars\o9rWW6#b<#S=`;oQ2b6%WQr[@^FcN3tFr=&Z/r;b#%r><]Xmf:N4rFGmU
r;b@KpAt4$rWW6#b<#S=d/`D2b6%WQr[@^FgB$gFr=&Z/r;b#%r>=,dirI7(rFGmUr;bdWlN-qmrWW6#
b<#S=h#Q72b6%WQr[@^Fk5jZFr=&Z/r;b#%r>=Ppf)WtqrFGmUr;c3chZ<ZarWW6#b<#S=klB*2b6%WQ
r[@^Fo)[MFr=&Z/r;b#%r>=u'b5f]erFGmUr;cWodfKCUrWW6#b<#S=o`2r2b6%WQr[@^FrrL@Fr=&Z/
r;b#%r>>D3^AuFYrFGmUr;b"Ar=&Z/r;b#%r><'Fb5qZSrac!Vr;b"Ar=&Z/r;b)'s#U)q\H'tXquZh-
r[@^Fb5qPMrWW6#dlR:cr><'FecPOHrFGmUr;b"Ar=&Z/r;bM3o/cge\H(Cdn,iQ!r[@^Fb5qPMrWW6#
h`C-cr>>A2^];OZrFGmU!!)uub5qPMrWW6#b<#S=!!'S1b6%]Ss()*Wr;b"Ar=&Z/r;b&&!':&q\H'qW
r;uq.r[@^Fb5qPMrWW6#dQ74cr><'FeH5IHrFGmUr;b"Ar=&Z/r;bJ2oK)pf\H(@cnH/Z"r[@^Fb5qPM
rWW6#hE('cr><'Fi<&<HrFGmUr;b"Ar=&Z/r;bn>kW8YZ\H(dojT>Bkr[@^Fb5qPMrWW6#l8mocr><'F
m/l/HrFGmUr;b"Ar=&Z/r;c=JgcGBN\H)4&f`M+_r[@^Fb5qPMrWW6#p,^bcr><'Fq#]"HrFGmUr;b"A
r=&Z/r;caVcoV+B\H)X2bl[iSr[@^Fb5qPMrWW9$!!(2'r><3Jr;b"BrFGmUr;b"Ar=&Z/r;b#%r><EP
pAiA<rFGmUr;b(CrrN',rWW6#b<#S=aT1i2b6%WQr[@^FdfK7Fr=&Z/r;b#%r><i\lN#*0rFGmUr;bLO
o)\durWW6#b<#S=eH"\2b6%WQr[@^FhZ<*Fr=&Z/r;b#%r><0IrW(+CrFGmUr;b"Ar<rZ0rrr?$b<#S=
_>s?2b6%WQr[@^FbQ.\Er=&Z/r;b#%r><TUnc6i7rFGmUr;b7Hq>pO'rWW6#b<#S=c2d22b6%WQr[@^F
fE(UFr=&Z/r;b#%r>=#ajoER+rFGmUr;b[TmK*7prWW6#b<#S=g&U%2b6%WQr[@^Fj8nHFr=&Z/r;b#%
r>=Gmg&T:trFGmUr;c*`iW8udrWW6#b<#S=joEm2b6%WQr[@^Fn,_;Fr=&Z/r;b#%r>=l$c2c#hrFGmU
r;cNlecG^XrWW6#b<#S=nc6`2b6%WQr[@^FquP.Fr=&Z/r;b#%r>>;0_>qa\rFGmUrVuoub5qPMrWW6#
b<#S=rW'S2b6%WQr[@^Fb5qPMrWW6#b;oV?rYW0Gbl[nHrFGmUr;b"Ar=&Z/r;b2*r&Xcn\H(([q#^M*
r[@^Fb5qPMrWW6#eiNLcr><'Ff`LaHrFGmUr;b"Ar=&Z/r;bV6n2gLb\H(Lgm/m5sr[@^Fb5qPMrWW6#
b<#S=r;aM2b6%WQ!%@jqr;b"Ar=&Z/r;b#%rttbQ\H'hT!!<+0r[@^Fb5qPMrWW6#cT;"cr><'FdK97H
rFGmUr;b"Ar=&Z/r;bA/pH&6i\H(7`oE+u%r[@^Fb5qPMrWW6#gH+jcr><'Fh?**HrFGmUr;b"Ar=&Z/
r;be;lT4t]\H([lkQ:]nr[@^Fb5qPMrWW6#k;q]cr><'Fl2orHrFGmUr;b"Ar=&Z/r;c4Gh`C]Q\H)+#
g]IFbr[@^Fb5qPMrWW6#o/bPcr><'Fp&`eHrFGmUr;b"Ar=&Z/r;cXSdlRFE\H)O/ciX/Vr[@^Fb5qPM
rWW6#s#SCcr><*G!!(1DrFGmUr;b"Ar=&Z/r;b#%r><<Mq>e\?rFGmUr;b"A!"Ai8rWW6#b<#S=`W5W2
b6%WQr[@^FciO%Fr=&Z/r;b#%r><`YmJtE3rFGmUr;bCLp&Y+#rWW6#b<#S=dK&J2b6%WQr[@^Fg]?mF
r=&Z/r;b#%r>=/eiW..'rFGmUr;b"Ar=&Z/!!)uub<#S=^B"-2b6%WQr[@^Fb5qVOrs\l1r;b#%r><KR
o`3/:rFGmUr;b.Er;lj*rWW6#b<#S=b5gu2b6%WQr[@^FeH,CFr=&Z/r;b#%r><o^klAm.rFGmUr;bRQ
nH&RsrWW6#b<#S=f)Xh2b6%WQr[@^Fi;r6Fr=&Z/r;b#%r>=>jh#PV"rFGmUr;c!]jT5;grWW6#b<#S=
irI[2b6%WQr[@^Fm/c)Fr=&Z/r;b#%r>=c!d/_>krFGmUr;cEif`D$[rWW6#b<#S=mf:N2b6%WQr[@^F
q#SqFr=&Z/r;b#%r>>2-`;n'_rFGmUr;ciublRbOrWW6#b<#S=qZ+A2b6%WQr[@^Fb5qPMrWW6#b<#S=
\H'eS!+c(>r[@^Fb5qPMrWW6#brYkcr><'FciX+HrFGmUr;b"Ar=&Z/r;b;-q)\Hk\H(1^p&b2'r[@^F
b5qPMrWW6#ffJ^cr><'Fg]HsHrFGmUr;b"Ar=&Z/r;b_9m5k1_q>e;2b6%WQr[7aHrW(+Br=&Z/r;b#%
r>5M7\cBnTs().?r[@^Fb5qPMrWW6#bW5_br><'FcN4(JrWE+0r[@^Fb5qPMrWW6#dQ74cr><'FeH5RK
rWE+0r[@^Fb5qPMrWW6#fK/Xcr><'FgB.!KrWE+0r[@^Fb5qPMrWW6#hE('cr><'Fi<&<HrEoOPr;b"A
r<iN-r;bn>kW8YZ\H(dojT>Bfr[@^Fb5qPKrWW6#l8mocr><'Fm/l/HrEoOPr;b"Ar<iN-r;c=JgcGBN
\H)4&f`M+br[@^Fb5qPMrWW6#p,^bcr>3!Eq#]"HrFc*Xr;b"Ar=&Z/r;caVcoV+A\H)X2bl[iVr[@^F
b5qPMrWW9$!!(2'r>3-Ir;b"BrGhfbr;b"Ar<rT.r;b#%r=d'KpAiA<rGhfbr;b(CrrN'+rWW6#b<#S8
aT1i2b6%W^r[@^FdfK7Fr<rT.r;b#%r=dKWlN#*0rGVZ`r;bLOo)\durWW6#b<#S9eH"\2b6%W\r[@^F
hZ<*Fr=&Z/r;b#%r=lmErW(+CrGVZ`r;b"Ar<rZ0rrr?$b<#S9_>s?2b6%WQr\=?ObQ.\Er=&Z1r;b#%
r><TUnc6i7rFGm^r;b7Hq>pO'rWiB%b<#S=c2d22b6%WQr\=?OfE(UFr=&Z1r;b#%r>=#ajoER+rFGm^
r;b[TmK*7prWiB%b<#S=g&U%2b<5`Pr[RjHj9FfPr=8f2r;b"gr=@fdg&T;YrI4_qr;c*eiWf>krW`<$
b:!6!joEm2b<5`Pr[RjHn-7YPr=8f2r;b"gr=A5pc2c$NrB^Dmr;cNred)-ZrW<#ub9m03nc6`2b<>ei
rXSl,r!1RRr<WB(r;b"fr?D":_>qbBrB^DmrVuoub6RtOrW<#ub9m03rW%NMJcLB&JcLB&JcLB&JcLB&
iW+Q1JcLB&JcLB&YlK:~>

%%EndBinary
grestore
np
118.745 94.2684 mo
109.408 94.2684 li
109.408 72.8506 li
118.745 72.8506 li
118.745 94.2684 li
/2 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 87.642 171.75 ]ct
[9.81383 0 0 21.849 21.4788 77.3603 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 41 
/H 91 
/M[41 0 0 -91 0 91 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 41 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 41 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 41 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 41 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
fE0\+fK/s2g]5t.fE(e/i&]KjfE1^Hj8mmofDtFCkQ9B;fK/C"li>Z>fE(4tn2f2%fE1.8oE!T*fDsk3
p]B(KfK.ggquG@NfE'Yd!'8a4fE0\+r]8dpfDsP*q>oISfK.Xbp&a7UfE'Vcnc7hQfE0\+mQ0YpfDsP*
l2g>SfK.XbjoY,UfE'VciW/]QfE0\+hE(NpfDsP*g&_3SfK.XbfE2'Rg&]hefDtdMh?)=1fK/a,iW.U4
fE(S)juV,pfE1LBl2fNufDt4=mK2#AfK/0qnc7;DfE("np,^h+fE0q2q>o50fDsY-rW:^QfK.Xb!!:gT
fE'VcfDsP*fE(q3gcF'ffE1jLhuVIkfDtRGj9!s7fK/O&kQ'6:fE(A#loNc!fE1:<n,_0&fDt"7oE*YG
fK.skp]/qJfE'ehr&WI1fE0_,!!1_5fDsP*rW1aSfK.Xbq?#OUfE'Vcp&O+QfE0\+niGqpfDsP*mK)VS
fK.Xbl2pDUfE'VcjoFuQfE0\+i]?fpfDsP*h?!KSfK.Xbg&h9UfE'VcfDtpQg&fn-fK/m0h>l10fE(_-
i]>]lfE1XFjoO*qfDt@Al2oT=fK/<umJtl@fE(.rniGD'fE1(6p&Wf,fDse1q?#:MfK.aerW(RPfE'Vc
!!([PfE0\+fK.XbfE2!Pg]?%gfDt^Khu_O3fK/[*j8dg6fE(M'kW7>rfE1F@liGa"fDt.;n,h5CfK/*o
oDmMFfE'qlpc@%-fE0k0quPG2fDsS+!!:dRfK.XbrW:gUfE'Vcq>fCQfE0\+p,_4pfDsP*nc@nSfK.Xb
mK2\UfE'Vcl2^8QfE0\+juW)pfDsP*iW8cSfK.Xbh?*QUfE'Vcg&V-QfE0\+fK0$4g&Tb,fE(k1hE'9h
fE1dJiW7[mfDtLEjoX09fK/I$l2]H<fE(;!mQ/u#fE14:nc@B(fDsq5p&`kIfK.miq>f.LfE'_fr]8[3
fE0\+!'8dofDsP*fE'VcfDtjOg]H+/fK/g.huMC2fE(Y+j>tonfE1RDkQ0<sfDt:?liPf?fK/6sn,V)B
fE((poK(V)fE1"4p]9#.fDs_/quYLOfK.[c!!(XQfE'VcrW([QfE0\+qE!LpfDsP*p&X1SfK.XbncItU
fE'VcmJuPQfE0\+l8nApfDsP*joP&SfK.XbiWAiUfE'Vch>mEQfE0\+g,f6pfDsP*fE)"5g,djdJ,~>

%%EndBinary
grestore
np
0 gry
IESYKG+Calibri-Bold*1 [-6.27e-7 -14.25 -14.25 6.27e-7 0 0 ]msf
118.588 94.71 mo
(Slot)
[-6.74036 -3.03528 -7.52393 0 ]ysh
169.608 124.13 mo
132.858 124.13 li
132.858 84.023 li
137.015 84.023 li
137.015 82.1951 li
132.858 82.1951 li
132.858 46.13 li
169.608 46.13 li
169.608 82.1951 li
166.854 82.1951 li
166.854 84.023 li
169.608 84.023 li
169.608 124.13 li
/2 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 87.642 171.75 ]ct
[38.25 0 0 79.5 44.466 46.87 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 51 
/H 106 
/M[51 0 0 -106 0 106 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 51 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 51 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 51 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 51 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&^B!L!jo>A^p],mGnc/am!WrPn"9\l1"9JVf!!30&!q--l"9JZ+j8f&Yo`>0p!!9P.
!s&K/$1/*'$4$b9!Vufd!!<9+"U=Aurri<%kl:bc!!;Nf!<E8Z!8.>U!<NK6&f0pP"Vqd`#m14p!!NB'
"U#)<mgB7*#m^_:q>g$crrN*!!!;WirW0G-"T\]3&fMhi+S-]Z*ul%("p4)j"Tel7%1Wm;&-WRR$3UJ5
df9@KrVup"quG4H!!;Ke"T\]4'HSIe,R#D8(_-`OlMq%h"UPYLrXn]5"V;4R"p4nk!!E<&!!*,f!!!&@
!:Tsl!<WZE*[C/$"skQ>)@m#RlMq%h":>VMn.Gp:&J#<U!s.H_nc8[jZiC:2!t#ec,UMq,"XP<1%gE+7
!:Bgj!X&i@&J4FE"VD7Q#6P"i!<3)f!!!&Z!7_&R!<WZE+!`0%-3Y\=)@m#RlMq(i":>YO&F^;;&J#6S
!s&B%klC_amJm4f[K$I3!t#ec,QK.[-3Y\=)@m#RlMq(i":>YO&F^;9&J#6S!s.QbrrMNf!!3#u\c;p8
!t#ec,UMq,"XP<1%gE+$!!<9*$4d.L&F^;9&J#6S!s.QbrrMNf!!17Cli74j!t#ec,UMq,"XP<1%gE+$
!!NE,$4d^[n.Gm:%grUE!U'Lb!!*,g!!!&.!!WH+$5O^/-1E5a,p=0;"on_j!!NE,$4d^[n.Gm:%grUE
!TsI_!U]pf!TjC0!!WH+$5O^/-1E5b,p=0;"p4)j"Tef6%hTBB&d&^V$O6\7!TsI_!U]pf!O_t/!<WH3
(*=eJn0S;b+W:jq!p]gi!X&i@&J4FE"VD7Q#6P"i!<3)f!!!&.!!WH+$5O^/-1E5b,p=0;"p4)j"Tef6
%hTBB&d8jX$O6b7k5bM_mJm4fcN*J8p](L!!t#ec,UMq,"XP<1%gE+$!!NE,$4d^[n.Gm:%grUE!TsI_
!VcZh!!!&.!!WH+$5O^/-1E5b,p=0;"p4Jup&G6t":>YO&F^;9&J#6S!s.QbrrMNf!!1dRh#IW[!t#ec
,UMq,"XP<1%gE+$!!NE,$4d^[n.Gm:%grUE!VZTa!<3)f!!!&.!!WH+$5O^/-2Jt_-3Y\=)@m#RlMq(i
":>YO&F^;9&J#6S!s.QbrrMNf!!2`m_>jc@!t#ec,UMq,"XP<1%gE+$!!NE,$4d^[q\&T8"VD7Q#6P"i
!<3)f!!!&;!;$6q!<WZE+!`0%-3Y\=)@m#RlMq(i":>YO&F^;9&J#6S!s.QbrrN#to)Jak[K$L4!t#ec
,UMq,"XP<1%gE+3!:g*n!X&i@&J4FE"VD7Q#6P"i!<3)f!!!&V!8.>V!<WZE+!`0%-3Y\=)@m#RlMq(i
":>YO&F^;9&J#6S!s/9!m/[.emJm4f[K$L4!t#ec,UNF:o-OVe+W:jq!p]gi!X&i@&J4FE"VD7Q#6P"i
!<3)f!!!&q!58F;!<WZE+!`0%-3Y\=)@m#RlMq.k":>YO&/#WH&d8jX$O6b7k5bM_mJm4f`rPT/"p"f5
(*=eJn0S;b+W:jq!p]gi!X&i@&J4FE"VD7Q#6P"i!!30%!:Kmf!O_t4!<WZE+!`0%-3Y\=)@m#RrW)?d
"Tef6%hTBB&d8jX$O6b7k5bM_mJm4fiW.L/"p"f5(*=eJn0S;b+W:jq!p]gi!X&i@&J4FE#8%IS#6Ou,
!9jL`!U]pf!O_t3!<WZE+!^h4n0S;b+W:jq!p]gi!X&i@&J4FE"VD7Q#6P"i!<3)f!!!&u!4i.7!<WZE
+!`0%-3Y\=)@m#RlMq"g":>Y?&J4FE"VD7Q#6P"i!<3)f!!!&C!:0[i!<WZE+!`0%-3Y\=)@m#RlMq(i
":>YO&F^;9&J#6S!s.Tc!WW6%mJm4f[K$L4!t#ec,UMq,"=530%gE"8lMq(i":>YO&F^;9&J#6S!s.Qb
rrMNf!!23^d/X@O!t#ec,UMq,"XP<1%gE+$!!NE,$4d^[n.Gg8%grUC!s.QbrrMNf!!0M.!<E9*$5O^/
-1E5b,p=0;"p4)j"Tef6%hTBB&d8jX$O6b7k5bM_mJm4f[K$L4!t#ec,UMq,"XP<1%gE+$!!NE,$4d^[
n.Gm:%grUE!TsI_!U]pf!RCc9!;HNu!<WZE+!`0%-3Y\=)@m#RlMq(i":>YO&F^;9&J#6S!s.QbrrMlp
pAb0o[K$L4!t#ec,UMq,"XP<1%gE+/!;6Br!X&i@&J4FE"VD7Q#6P"i!<3)f!!!&R!8RVZ!<WZE+!`0%
-3Y\=)@m#RlMq(i":>YO&F^;9&J#6S!s/,rnGrRimJm4f[K$L4!t#ec,UN:6pEg%i+W:jq!p]gi!X&i@
&J4FE"VD7Q#6P"i!<3)f!!!&m!5\^?!<WZE+!`0%-3Y\=)@m#RlMq(i":>YO&Gm+6&d8jX$O6b7k5bM_
mJm4f_Z9</"p"f5(*=eJn0S;b+W:jq!p]gi!X&i@&J4FE"VD7Q#6P"i!<3)t!:p0j!O_t4!<WZE+!`0%
-3Y\=)@m#Rq>g'd"Tef6%hTBB&d8jX$O6b7k5bM_mJm4fh>l4/"p"f5(*=eJn0S;b+W:jq!p]gi!X&i@
&J4FE"VD7Q#6P#(!:9dd!U]pf!O_t4!<WZE+!`03-M&Pf,p=0;"p4)j"Tef6%hTBB&d8jX$O6b7k5bM_
mJm4fq#J,/"p"f5(*=eJn0S;b+W:jq!p]gk!X&i@&J,Qfne)*<%grUE!TsI_!U]pf!QP30!!WH+$5O^/
-1E5b,p=0;"p4)j"Tef6%hTBB&d8jX$O6b7k5YPa!<DQg!!0M."p"f5(*=eJn0S;b+W:jq!r`2f!!NE,
$4d^[n.Gm:%grUE!TsI_!U]pf!TF+0!!WH+$5O^/-1E5b,p=0;"p4)j"Tef6%hTBB&dK!Z$O6b7!!)6`
rrMNf!!0M."T\]4(*=e%-1E5b,p=0;"p4)j"Tef6%hTBB&d8jX$O6b7k5bM_mJm4fr;aD/"p"f5(*=eJ
n0S;b+W:jq!p]gg!X&i@!>,n4&d8jX$O6b7k5bM_mJm4fb5gl/"p"f5(*=eJn0S;b+W:jq!p]gi!X&i@
&J4FE"VD7Q#6P"j!!3-$!U]pf!O_t4!<WZE+!`0%-3PV<)@m#P!p]gi!X&i@&J4FE"VD7Q#6P"i!<3)f
!!!&^!7:cN!<WZE+!`0%-3Y\=)@m#RlMq(i":>YO&F^;7&J#6S!<WAc!<3)f!!!&.!!**&":>nd,UMq,
"XP<1%gE+$!!NE,$4d^[n.Gm:%grUE!TsI_!U]pf!O_t4!<WZE+!`0%-3Y\=)@m#RlMq(i":>YO&F^;9
&J#6S!s.QbrrMNf!!1CGnGr=a"p"f5(*=eJn0S;b+W:jq!p]gi!X&i@&J4FE"VD7Q#6P"i!<3)p!;?Hn
!O_t4!<WZE+!`0%-3Y\=)@m#Rp&Odd"Tef6%hTBB&d8jX$O6b7k5bM_mJm4fg&Tq/"p"f5(*=eJn0S;b
+W:jq!p]gi!X&i@&J4FE"VD7Q#6P#$!:^'h!U]pf!O_t4!<WZE+!`0/-MJhj,p=0;"p4)j"Tef6%hTBB
&d8jX$O6b7k5bM_mJm4fo`2i/"p"f5(*=eJn0S;b+W:jq!p]gi!X&i@&J4gPp(@N@%grUE!TsI_!U]pf
!Q+p0!!WH+$5O^/-1E5b,p=0;"p4)j"Tef6%hTBB&d8jX$O6b7k5bM_quH<g!!0M."p"f5(*=eJn0S;b
+W:jq!r;of!!NE,$4d^[n.Gm:%grUE!TsI_!U]pf!T!h0!!WH+$5O^/-1E5b,p=0;"p4)j"Tef6%hTBB
&d8jX$O6b7qZ-!`rrMNf!!0M."p"f5(*=eJr[.4`"XP<1%gE+$!!NE,$4d^[n.Gm:%grUE!TsI_!U]pf
!Vl`0!!WH+$5O^/-1E5b,p=0;"p4)j#6G#8%hT?c'(QY=&J#6S!s.QbrrMNf!!1+?n,NXn!t#ec,UMq,
"XP<1%gE+$!!NE,$4d^[n.Gm:%grUE!TsFa!<E2h!!!&.!!WH+$5O^/-1E5b,p=0;"p4c(mJmCl":>YO
&F^;9&J#6S!s.QbrrMNf!!2'ZeGodS!t#ec,UMq,"XP<1%gE+$!!NE,$4d^[n.Gs<%grUE!<<,a!<3)f
!!!&.!!NB*$5O^/!%%+]"XP<1%gE+$!!NE,$4d^[n.Gm:%grUE!TsI_!U]pf!W<#0!!WH+$5O^/-1E5b
,p=0;"p4)j!s/T4%fm7Rn.Gm:%grUE!TsI_!U]pf!QtK0!!WH+$5O^/-1E5b,p=0;"p4)j"Tef6%hTBB
&d8jX$O6b7kPtYa!<MTg!!0M."p"f5(*=eJn0S8a+W:jq!!;Hd"Tef6%hTBB&d8jX$O6b7k5bM_mJm4f
joEd/"p"f5(*=eJn0S;b+W:jq!p]gi!X&i@&J4FE!tc%O#6=o-k5bM_mJm4f[K$=/!sArH+!`0%-3Y\=
)@m#RlMq(i":>YO&F^;9&J#6S!s.QbrrMNf!!0M."p"f5(*=eJn0S;b+W:jq!p]gi!X&i@&J4FE"VD7Q
#6P"i!<3)f!!!&G!:^'a!!WH+$5O^/-1E5b,p=0;"p4)j"Tef6%hTBB&d8jX$O6b7k5bM_p]1$g!!0M.
"p"f5(*=eJn0S;b+W:jq!qlWf!!NE,$4d^[n.Gm:%grUE!TsI_!U]pf!SRP0!!WH+$5O^/-1E5b,p=0;
"p4)j"Tef6%hTBB&d8jX$O6b7pAj^`rrMNf!!0M."p"f5(*=eJqBkq`"XP<1%gE+$!!NE,$4d^[n.Gm:
%grUE!TsI_!U]pf!VHH0!!WH+$5O^/-1E5b,p=0;"p4)j"Tef6%hTBM'(uqA&J#6S!s.QbrrMNf!!0t;
oDf'r!t#ec,UMq,"XP<1%gE+$!!NE,$4d^[n.Gm:%grUE!TsI_!W2rh!!!&.!!WH+$5O^/-1E5b,p=0;
"p4W$nc/gp":>YO&F^;9&J#6S!s.QbrrMNf!!1pVf`23W!t#ec,UMq,"XP<1%gE+$!!NE,$4d^[n.Gm:
%grUE!W)la!<3)f!!!&.!!WH+$5O^/-2o7_-3Y\=)@m#RlMq(i":>YO&F^;9&J#6S!s.QbrrMNf!!2lq
^&S?<!t#ec,UMq,"XP<1%gE+$!!`Q.$4d^[&eaaJ"VD7Q#6P"i!<3)f!!!&?!:Tsm!<WZE+!`0%-3Y\=
)@m#RlMq(i":>YO&F^;9&J#6S!s.Qb!W`<%mf3=g[K$L4!t#ec,UMq,"XP<1%gE+7!:Bgj!X&i@&J4FE
"VD7Q#6P"i!<3)f!!!&Z!7_&R!<WZE+!`0%-3Y\=)@m#RlMq(i":>YO&F^;;&J#6S!s&B%klC_amJm4f
[K$I3!t#ec,QK.[-3Y\=)@m#RlMq(i":>YO&F^;9&J#6S!s.QbrrMNf!!3#u\c;p8!t#ec,UMq,"XP<1
%gE+$!!<9*$4d.L&F^;9&J#6S!s.QbrrMNf!!17Cli71i!t#ec,OZr_,pF6<"p4)j"9J]5%hS1B"VD7S
#6P"j!!!%m!!NB*$5=L)mj/)^+W1ao!!;Hd"9J]4%M.t>":ttG!s.Ze"9AQ(!!2Qh!s&B&!TsI1!!WH+
#o"=$+n-ZZ+W_C."p4)j"Tei7$k<j<%g*@Q$3gM6!pK[b!UB^f!<E0%cN!qHli7%e!WrZ:'c6<V"W/$f
#m14p!!NB(!sT,@mL01*#mCCo!!<6%!!2Ti!!3'![/^@3!sT)A%IXc0$OI"=!UB^g!WiH,#O_j##R(A7
!!2Bc!!<-"mK*7d!!2?b!!;BbnGr:`!s&H+"769p"9S]+l2Une!WrMk"9JT*!U'O`!qcQg!!!)_!!!)G
!<*#e!ri;m!:^'W!oX.I!oX.S!qubT!.k3&!.k3&!.k3T!.Y~>

%%EndBinary
grestore
np
gsave
137.015 84.023 mo
132.858 84.023 li
132.858 82.1951 li
137.015 82.1951 li
137.015 84.023 li
clp
132.858 82.1951 mo
137.015 82.1951 li
137.015 84.023 li
132.858 84.023 li
cp
/2 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 87.642 171.75 ]ct
[6 0 0 3.75 44.466 86.62 ]ct
snap_to_device
<<
/T 1
/W 8 
/H 5 
/M[8 0 0 -5 0 5 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
1 dict begin
.662745 .286274 0 0 cmyk
/IESYKH+SimSun-GBK-EUC-H-Identity-H findfont [12.025 0 0 -12.025 0 0 ]msf
126.258 87.45 mo
(\001\002)sh
end
grestore
gsave
169.608 84.023 mo
166.854 84.023 li
166.854 82.1951 li
169.608 82.1951 li
169.608 84.023 li
clp
166.854 82.1951 mo
169.608 82.1951 li
169.608 84.023 li
166.854 84.023 li
cp
/2 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 87.642 171.75 ]ct
[4.5 0 0 3.75 78.216 86.62 ]ct
snap_to_device
<<
/T 1
/W 6 
/H 5 
/M[6 0 0 -5 0 5 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
1 dict begin
.662745 .286274 0 0 cmyk
/IESYKH+SimSun-GBK-EUC-H-Identity-H findfont [12.025 0 0 -12.025 0 0 ]msf
165.628 87.45 mo
(\001\002)sh
false sop
end
grestore
141.348 117.11 mo
158.427 117.11 li
158.427 49.079 li
141.348 49.079 li
cp
1 .949 .8 rgb
ef
2 lc
0 lj
141.348 117.11 mo
158.427 117.11 li
158.427 49.079 li
141.348 49.079 li
cp
0 .69 .941 rgb
@
0 gry
IESYKG+Calibri-Bold*1 [-6.281e-7 -14.275 -14.275 6.281e-7 0 0 ]msf
154.308 94.71 mo
(Slot)
[-6.75217 -3.02634 -7.52286 0 ]ysh
224.358 124.13 mo
187.608 124.13 li
187.608 84.023 li
188.385 84.023 li
188.385 82.1951 li
187.608 82.1951 li
187.608 46.13 li
224.358 46.13 li
224.358 82.1951 li
221.564 82.1951 li
221.564 84.023 li
224.358 84.023 li
224.358 124.13 li
/2 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 87.642 171.75 ]ct
[38.25 0 0 79.5 99.216 46.87 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 51 
/H 106 
/M[51 0 0 -106 0 106 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 51 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 51 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 51 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 51 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&^B!L!g]6sH!!//]o)Jmo!X&T/mf`XmrrVEb"9AN*!X.rm!s/N)!p9Ob!WW5t!qcWo
!!!)H!!!)b!!<9+#R]o+!XAf/q#Ksc!!3'%mKE^t"p4o.kQ(V`l2UechuN6H!!;Hd"9AW2%i+LK"Vqa]
#6Fql!!36*#OMm&$47%@!<N&tnGiRk!M08q!<iiF*$6:%+S-]Z*Z>\"!s.]f"U##9$P*d<&-WOR%13:@
klC_biW-[m"Tel;(Eask,R#A5((13Fli7.i":#;Gr=ST4":ktL"p4)j!Wi?&m/R+erVup"l2UechuN6H
"p+u<)'U@Qn0S;a+;YCg!UKdj!X&]9&J5TD&d/dV$O$Rs!!`Q*!<E0$!<DWi"9AK(!!;Hd!!:IH"Tel<
)'UBq-3YY;(CL?HrW)Be"Tef2$kEs=&d/dX$O$Rs!!33%!U'L`!p]gd!rDuJ!!NE.%N-H:mj82`+;YCg
!UKdi!X&]9%h\7C";)1Q"TeT&mJm:i!!29`!!;Hd!!:IH"Tel<)'UBq-3YY;(CL?Hli71j"9o8F&ap>8
&J,<R!UB^e!WW8b!!33%!:9ad!m^iM!X9,P+sl\)"XG3,$NpLs!!E?+"q2"B&ap>8&J,<R!UB^e!WW8b
!!!)d!!!)]!:0[h!X9,P+sl\)"XG3,$NpLs!!NE,"q2"Smh,a8&.8XBlMq"g!!*)a!!!)d!!!)H!!NE.
%N-H:mj8/_+;YCg!!2Ed"Tef2$kEs=&d/dX$O$Rs!!33%!U'L`!p]gf!WW5J!!NE.%N-H:mj82`+;YCg
!UKdi!X&]9%h\7C!tc(P"TSSh!!33%!U'L`!p]gd!m^iI!X8`:)'UBq-3YY;(CL?Hli71j"9o8F&ap>8
&J,<R!UB^e!WW8c!!*'$lMpndcN"+M"qDLp-1</a,Tmm2"9Iih!!39+"q2"Smh,a8&.8XBlMptf!!29`
!!;Hd!!;?anGr=a"Tel<)'UBq-3YY;(CL?Hli71j"9o8F&ap>8&J,<R!UB^e!WW8n!;-<l!p]gd!m^iM
!X9,P+sl\)"XG3,$NpM(!;?Hs!X&]9%h\7C";)1Q"Tdoh!Wi?&kPtSalMpndo)RSH"Tel<)'UBq-3YY;
(CL?Hli71j"9o8F&ap>8&J,<R!VQNe!!33%!U'L`!p]gd!m^iM!X9,P+sm%3pEg%h+;YCg!UKdi!X&]9
%h\7C";)1Q"Tdoh!Wi?&kPtSapAjjd!!:IH"Tel<)'UBq-3YY;(CL?Hli71j"9o8F&c*.6&d/dX$O$Rs
!!33%!U'L`!p]gd!o*eJ!!NE.%N-H:mj82`+;YCg!UKdi!X&]9%h\7C";)1Q"Tdoh!Wi?&p]0ga!!;Hd
!!:IH"Tel<)'UBq-3YY;(CL?Hq>g*e"Tef2$kEs=&d/dX$O$Rs!!33%!U'L`!p]gd!qu]J!!NE.%N-H:
mj82`+;YCg!UKdi!X&]9%h\7C";)1Q"TeH"nc/^m!!29`!!;Hd!!:IH"Tel<)'UC*-M&Pf,Tmm2"9Iih
"Tef2$kEs=&d/dX$O$Rs!!33%!U'L`!rDuf!!!)H!!NE.%N-H:mj82`+;YCg!UKdi!X&]9%h\dRne)';
&.8XBlMptf!!29`!!;Hd!!;'Yn,NUn"qDLp-1</a,Tmm2"9Iih"Tef2$kEs=&d/dX$O$Rs!!33%!W2rb
!!!)d!!!)H!!NE.%N-H:mj82`+;YCg!WE)f!!NE,"q2"Smh,a8&.8XBlMptf!!29`!!;Hd!!<#teGoaS
"qDLp-1</a,Tmm2"9Iih"Tef2$kEs=&d/dX$O$S1!:Bgg!WW8b!!!)d!!!)H!!NE.%N-H:mj82`+;YCg
!UKdi!X&]9%h\7C";)1Q"Tdoh!Wi?&kPtYc!!)Bd!!:IH"Tel<)'UBq-3YY;(CL?Hli7.i"9o8F!"nZ4
";)1Q"Tdoh!Wi?&kPtSalMpndj8eNH"Tel<)'UBq-3YY;(CL?Hli71j"9o8F&ap>8&J,<R!UB^f!WW6$
kl:\blMpndcN"+M"qDLp-1</`,Tmm2"98Jh!!NE,"q2"Smh,a8&.8XBlMptf!!29`!!;Hd!Wi?%d/X=O
"qDLp-1</a,Tmm2"9Iih"Tef2$kEs=&d&^W$O$M2lMptf!!29`!!;Hd!!:IH!<NH-%N-H:mj82`+;YCg
!UKdi!X&]9%h\7C";)1Q"Tdoh!Wi?&kl:_a!p]gd!m^iM!X9,P+sl\)"XG3,$NpLs!!!''"9o8F&ap>8
&J,<R!UB^e!WW8b!!!)d!!!)a!:^'a!!NE.%N-H:mj82`+;YCg!UKdi!X&]9%h\7C";)1Q"Tdoh!Wi?&
oDnOa!!;Hd!!:IH"Tel<)'UBq-3YY;(CL?Hp&Oge"Tef2$kEs=&d/dX$O$Rs!!33%!U'L`!p]gd!qQEJ
!!NE.%N-H:mj82`+;YCg!UKdi!X&]9%h\7C";)1Q"Te;sp&G-q!!29`!!;Hd!!:IH"Tel<)'UC&-MJhj
,Tmm2"9Iih"Tef2$kEs=&d/dX$O$Rs!!33%!U'L`!qu]f!!!)H!!NE.%N-H:mj82`+;YCg!UKdi!X&]9
%h\XNp(@K?&.8XBlMptf!!29`!!;Hd!!:pUoDf$r"qDLp-1</a,Tmm2"9Iih"Tef2$kEs=&d/dX$O$Rs
!!33%!VcZb!!!)d!!!)H!!NE.%N-H:mj82`+;YCg!Vuff!!NE,"q2"Smh,a8&.8XBlMptf!!29`!!;Hd
!!;lpf`20W"qDLp-1</a,Tmm2"9Iih"Tef2$kEs=&d/dX$O$S-!:g*k!WW8b!!!)d!!!)H!!NE.%N-H:
r?h+_"XG3,$NpLs!!NE,"q2"Smh,a8&.8XBlMptf!!29`!!<#tnGiOjcN"+M"qDLp-1</a,Tmm2"9Iih
"Tef2$kEsL'(QY<&J,<R!UB^e!WW8b!!!)d!!!)Y!:Tsl!X9,P+sl\)"XG3,$NpLs!!NE,"q2"Smh,a8
&.8XBlMptf!!2utm/R+flMpndcN"+M"qDLp-1</a,Tmm2"9JK%mf3Lm"9o8F&ap>8&J,<R!UB^e!WW8b
!!!)d!!!)t!7_&Q!X9,P+sl\)"XG3,$NpLs!!NE,"q2"Smh,a8&.8XBrW)?d!Wi?&kPtSalMpndcN"+M
"qDLp-1</a,Tmm2"9Iih"Tef2$kEs=&d/dX$O$Rs!!33%!U'Lb!WW5f!!!)H!!NE.%N-H:mj82`+;YCg
!UKdh!X&]9%fd41&d/dX$O$Rs!!33%!U'L`!p]gd!os@J!!NE.%N-H:mj82`+;YCg!UKdi!X&]9%h\7C
";)1Q"Tdoh!s/H'!9jI`!p]gd!m^iM!X9,P+sl\)"=,*+$NpG1li71j"9o8F&ap>8&J,<R!UB^e!WW8b
!!!)d!!33%!7:cM!X9,P+sl\)"XG3,$NpLs!!NE,"q2"Smh,^7&.8XA!UB^e!WW8b!!!)d!!!)H!!*-*
!tH1m-1</a,Tmm2"9Iih"Tef2$kEs=&d/dX$O$Rs!!33%!U0Rb!!;Hd!!:IH"Tel<)'UBq-3YY;(CL?H
li7"e"9\o;%h\7C";)1Q"Tdoh!Wi?&kPtSalMpndkQ(,Qp](I!"qDLp-1</a,Tmm2"9Iih"Tef2$kEs=
&d/dX$O$Rs!!33%!V?Bb!!!)d!!!)H!!NE.%N-H:mj82`+;YCg!VQNf!!NE,"q2"Smh,a8&.8XBlMptf
!!29`!!;Hd!!;`lh#IT["qDLp-1</a,Tmm2"9Iih"Tef2$kEs=&d/dX$O$S)!;6Bo!WW8b!!!)d!!!)H
!!NE.%N-H:q'Ph_"XG3,$NpLs!!NE,"q2"Smh,a8&.8XBlMptf!!29`!!;lpo`+sncN"+M"qDLp-1</a
,Tmm2"9Iih"Tef2$kEsH'(uq@&J,<R!UB^e!WW8b!!!)d!!!)U!;$6p!X9,P+sl\)"XG3,$NpLs!!NE,
"q2"Smh,a8&.8XBlMptf!!2ipnGiOjlMpndcN"+M"qDLp-1</a,Tmm2"9J?!o)Jpq"9o8F&ap>8&J,<R
!UB^e!WW8b!!!)d!!!)p!8.>U!X9,P+sl\)"XG3,$NpLs!!NE,"q2"Smh,a8&.8XBq>g'd!Wi?&kPtSa
lMpndcN"+M"qDLp-2f1^-3YY;(CL?Hli71j"9o8F&ap>8&J,<R!UB^e!WW8b!!!)t!:^$h!m^iM!X9,P
+sl\)"XG3,$NpLs!!NE,"q2"SrY"c7";)1Q"Tdoh!Wi?&kPtSalMpndhuN6H"Tel<)'UBq-3YY;(CL?H
li71j"9o8F&ap>8&J,<R!UB^e!WW9!!:9ad!p]gd!m^iM!X9,P+sl\)"XG3,$NpM0!:Kmk!X&]9%h\7C
";)1Q"Tdoh!Wi?&kPtSalMpndqZ,.H"Tel<)'UBq-3YY;(CL?Hli71j"9o8F&ap>8&J,<R!WE)e!!33%
!U'L`!p]gd!m^iM!X9,P+sl\)"XG3,$NpLs!!NE,"q2"Smh,a8&.8XBlMptf!!29`!Wi?%m/R+fcN"+M
"qDLp-1</a,Tmm2"9Iih"9J]1$kE=Mmh,a8&.8XBlMptf!!29`!!;Hd!!;3]li71j"qDLp-1</a,Tmm2
"9Iih"Tef2$kEs=&d/dX$O$Rs!!<9&!<D?a!!;Hd!!:IH"Tel<)'UBq-3PS:(CL?G!UKdi!X&]9%h\7C
";)1Q"Tdoh!Wi?&kPtSalMptf!!(CH"Tel<)'UBq-3YY;(CL?Hli71j"9o8F&ap>7&J,<R!!2Bc!Wi?&
kPtSalMpndcN!tI"p5>Q+sl\)"XG3,$NpLs!!NE,"q2"Smh,a8&.8XBlMptf!!2<a!<<2e!!!)H!!NE.
%N-H:mj82`+;YCg!UKdd!X&W1$kEs=&d/dX$O$Rs!!33%!U'L`!p]gd!pBXS!;HNt!X9,P+sl\)"XG3,
$NpLs!!NE,"q2"Smh,a8&.8XBlMptf!!2]lo`+snlMpndcN"+M"qDLp-1</a,Tmm2"9J2rpAb?u"9o8F
&ap>8&J,<R!UB^e!WW8b!!!)d!!!)l!8RVY!X9,P+sl\)"XG3,$NpLs!!NE,"q2"Smh,a8&.8XBp&Odd
!Wi?&kPtSalMpndcN"+M"qDLp-2An^-3YY;(CL?Hli71j"9o8F&ap>8&J,<R!UB^e!WW8b!!!)p!;-<l
!m^iM!X9,P+sl\)"XG3,$NpLs!!NE,"q2"Sq@`K7";)1Q"Tdoh!Wi?&kPtSalMpndg]6sH"Tel<)'UBq
-3YY;(CL?Hli71j"9o8F&ap>8&J,<R!UB^e!WW8r!:^$h!p]gd!m^iM!X9,P+sl\)"XG3,$NpM,!:p0o
!X&]9%h\7C";)1Q"Tdoh!Wi?&kPtSalMpndpAikH"Tel<)'UBq-3YY;(CL?Hli71j"9o8F&ap>8&J,<R
!Vufe!!33%!U'L`!p]gd!m^iM!X9,P+sm17o-OVd+;YCg!UKdi!X&]9%h\7C";)1Q"Tdoh!Wi?&kPtSa
qZ--d!!:IH"Tel<)'UBq-3YY;(CL?Hli71j"9o8F&cNF6&d/dX$O$Rs!!33%!U'L`!p]gd!oO(J!!NE.
%N-H:mj82`+;YCg!UKdi!X&]9%h\7C";)1Q"Tdoh!Wi?&quH*a!!;Hd!!:IH"Tel<)'UBq-3YY;(CL?H
rW)Be"Tef2$kEs=&d/dX$O$Rs!!33%!U'L`!p]gd!rDuJ!!NE.%N-H:mj82`+;YCg!UKdi!X&]9%h\7C
";)1Q"TeT&mJm:i!!29`!!;Hd!!:IH"Tel<)'UBq-3YY;(CL?Hli71j"9o8F&ap>8&J,<R!UB^e!WW8b
!!33%!:9ad!m^iM!X9,P+sl\)"XG3,$NpLs!!E?+"q2"B&ap>8&J,<R!UB^e!WW8b!!!)d!!!)]!:0[h
!X9,P+sl_*"skN:(CL?Hli71j"9o8F&b$D:&.oE\"Tdoh!s/H'!U]pf!W;uu!p]gd!m^iM!X9,O+=-D%
"=#!)$O$M2li7.i":,DGm1BF2$O-b"!!!*!!!!&h!!!&^!!33%!7:cM!<`cH*[0tr"X"d!$3L=p!!E<+
$P!a;%g3IU$OR%;!pTac!pBUa!Oi%0!<WE1&/H,O)$Lfj%gE.;lMq"g"pbS($j6qE#6P(l!!<6%!!2Ti
!s&B%!W`9&[f?L3"pk\+%L!:N$O?h9l2Uqf"9o#8mfin""p=u/jT+]L!s/K'!mpuL!!!)m!;?Hq!<N?+
m03Xp"9JVg!!30&!UU!l!WrH(k5YJ`p&Oge!!9J,rrMNhrW2Tjnc8(Zi;i9Ii;iTRp]??RJcLB&JcLB&
JcN"TJ,~>

%%EndBinary
grestore
np
gsave
188.385 84.023 mo
187.608 84.023 li
187.608 82.1951 li
188.385 82.1951 li
188.385 84.023 li
clp
187.608 82.1951 mo
188.385 82.1951 li
188.385 84.023 li
187.608 84.023 li
cp
/2 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 87.642 171.75 ]ct
[2.25 0 0 3.75 99.216 86.62 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 5 
/M[3 0 0 -5 0 5 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
1 dict begin
.662745 .286274 0 0 cmyk
/IESYKH+SimSun-GBK-EUC-H-Identity-H findfont [12.025 0 0 -12.025 0 0 ]msf
177.628 87.45 mo
(\001\002)sh
end
grestore
gsave
224.358 84.023 mo
221.564 84.023 li
221.564 82.1951 li
224.358 82.1951 li
224.358 84.023 li
clp
221.564 82.1951 mo
224.358 82.1951 li
224.358 84.023 li
221.564 84.023 li
cp
/2 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 87.642 171.75 ]ct
[4.5 0 0 3.75 132.966 86.62 ]ct
snap_to_device
<<
/T 1
/W 6 
/H 5 
/M[6 0 0 -5 0 5 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
1 dict begin
.662745 .286274 0 0 cmyk
/IESYKH+SimSun-GBK-EUC-H-Identity-H findfont [12.025 0 0 -12.025 0 0 ]msf
220.338 87.45 mo
(\001\002)sh
end
grestore
195.798 117.11 mo
212.877 117.11 li
212.877 49.079 li
195.798 49.079 li
cp
.929 gry
ef
195.798 117.11 mo
212.877 117.11 li
212.877 49.079 li
195.798 49.079 li
cp
0 .69 .941 rgb
@
0 gry
IESYKG+Calibri-Bold*1 [-6.27e-7 -14.25 -14.25 6.27e-7 0 0 ]msf
208.808 94.71 mo
(Slot)
[-6.74036 -3.03528 -7.52393 0 ]ysh
109.408 171.75 mo
101.908 171.75 li
101.908 117.485 li
102.658 117.485 li
102.658 119.36 li
109.408 119.36 li
109.408 171.75 li
102.658 48.7037 mo
101.908 48.7037 li
101.908 18.9521 li
105.118 17.9 li
101.908 16.8132 li
101.908 0 li
109.408 0 li
109.408 16.0947 li
104.668 17.6499 li
109.408 19.2567 li
109.408 46.61 li
102.658 46.61 li
102.658 48.7037 li
/2 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 87.642 171.75 ]ct
[0 173.25 -9 0 22.516 -.75 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 231 
/H 12 
/M[231 0 0 -12 0 12 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 231 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 231 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 231 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 231 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcP?A!Wa&i
pbVd_rAb!:1Fst(r[.aj+<^Uuq`4R1q^hUor$9]Ho/$7Zr]1!7r@Ipts!4s-!\b\trW)ot!=0G8(B"R>
$N1eC()@S]&cN:=$Mt\<(AedB')W9Z('#-K$3(A3)#kBM'E/XE&%!)R'Fb*+!.k3&!.k3i!!36tSDg:@
RJioYU&L\aT(SoYV"L/QU\:DYTDY;7V#-SZU\phbTDtMGUu\<QT4eH,!!33G5iG$+5Q*nJ6N07L5O^u3
5PmbH6N0=K5l3dr62NnG62s:N5lO!n62NqL5:cqq!.k3&!29Gp"D"@iUuA-HU&LhdTDtV3V"UMZU\g\]
U&CeUV#6qcU]$hbU#DdKV1AmL!!**LbX)"ir]pHLr^$NMs$4psq`t'Gqa(*Gr'9R6r]pKMr^$KLs$5O/
!^nmLqu?]uZiG[XJcLB&rVus#+L3g&;#X8i/H7O)3W;/@6g?J_1\OWA/Gq=$3W2)?5lF1Q.K1mu1]BE6
4T@eB1BAm*qu?`u%IY(N(Af9S'E8jH)#bHR*7G\p(A8pK'DrXC)#YBQ)uUcW&cNID(B,0M)ZLfN('"uo
!.k3n!!!&2!.k3&!.k3&!/po0!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&
!.k3&!6,"h~>

%%EndBinary
grestore
np
102.658 116.735 mo
101.908 116.735 li
101.908 49.4545 li
102.658 49.4545 li
102.658 116.735 li
/2 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 87.642 171.75 ]ct
[0 69 -2.25 0 15.766 54 ]ct
snap_to_device
<<
/T 1
/W 92 
/H 3 
/M[92 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)
!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)
!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)
!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)
!WiE)!WiE)!WiE)!WiE)!WiE)~>
<~,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\
,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\
,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\
,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\
,U=W\,U=W\,U=W\,U=W\,U=W\~>
<~.Olnt.Olnt.Olnt.Olnt.Olnt.Olnt.Olnt.Olnt.Olnt.Olnt.Olnt.Olnt.Olnt.Olnt.Olnt.Olnt
.Olnt.Olnt.Olnt.Olnt.Olnt.Olnt.Olnt.Olnt.Olnt.Olnt.Olnt.Olnt.Olnt.Olnt.Olnt.Olnt
.Olnt.Olnt.Olnt.Olnt.Olnt.Olnt.Olnt.Olnt.Olnt.Olnt.Olnt.Olnt.Olnt.Olnt.Olnt.Olnt
.Olnt.Olnt.Olnt.Olnt.Olnt.Olnt.Olnt.Olnt.Olnt.Olnt.Olnt.Olnt.Olnt.Olnt.Olnt.Olnt
.Olnt.Olnt.Olnt.Olnt.Olnt~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
102.658 117.485 mo
101.908 117.485 li
101.908 116.735 li
102.658 116.735 li
102.658 117.485 li
102.658 49.4545 mo
101.908 49.4545 li
101.908 48.7037 li
102.658 48.7037 li
102.658 49.4545 li
/2 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 87.642 171.75 ]ct
[0 70.5 -2.25 0 15.766 53.25 ]ct
snap_to_device
<<
/T 1
/W 94 
/H 3 
/M[94 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~\$riU\$riU\$riU\$riU\$riU\$riU\$riU\$riU\$riU\$riU\$riU\$riU\$riU\$riU\$riU\$riU
\$riU\$riU\$riU\$riU\$riU\$riU\$riU\$riU\$riU\$riU\$riU\$riU\$riU\$riU\$riU\$riU
\$riU\$riU\$riU\$riU\$riU\$riU\$riU\$riU\$riU\$riU\$riU\$riU\$riU\$riU\$riU\$riU
\$riU\$riU\$riU\$riU\$riU\$riU\$riU\$riU\$riU\$riU\$riU\$riU\$riU\$riU\$riU\$riU
\$riU\$riU\$riU\$riU\$riU\$riU\$l~>
<~)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0
)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0
)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0
)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0
)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&W~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
109.408 19.2567 mo
104.668 17.6499 li
109.408 16.0947 li
109.408 19.2567 li
/2 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 87.642 171.75 ]ct
[0 5.25 -6 0 22.516 151.5 ]ct
snap_to_device
<<
/T 1
/W 7 
/H 8 
/M[7 0 0 -8 0 8 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~WMukrWMukmUnjf^Unjf^Unjf^UoC>mWMukrWMukrWMukrWMukrWMukrWMukrWMukrWMukr~>
<~8P)KF8P)K>5s[e&5s[e&5s[e&5tOX>8OuBC8P)KF8P)KF8P)KF8P)KF8P)KF8P)KF8P)KF~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
101.908 18.9521 mo
101.908 16.8132 li
105.118 17.9 li
101.908 18.9521 li
/2 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 87.642 171.75 ]ct
[0 3.75 -4.5 0 18.016 152.25 ]ct
snap_to_device
<<
/T 1
/W 5 
/H 6 
/M[5 0 0 -6 0 6 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~WMukrWMukrWMukrWMukrWMukrWMukrWMH>cUnd~>
<~8P)KF8P)KF8P)KF8P)KF8P)KF8P)KF8O5X.5sY~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
109.408 119.36 mo
102.658 119.36 li
102.658 117.485 li
103.408 117.485 li
103.408 119.36 li
109.408 119.36 li
103.408 48.7037 mo
102.658 48.7037 li
102.658 46.61 li
109.408 46.61 li
109.408 47.36 li
103.408 47.36 li
103.408 48.7037 li
/2 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 87.642 171.75 ]ct
[0 73.4015 -7.25806 0 22.0079 52.0527 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 306 
/H 30 
/M[306 0 0 -30 0 30 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 306 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 306 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 306 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 306 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcOF'
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcOF'
JcLB&JcLB&R/m%=r]U6Npdp'/j%8Ynpe:QVoL&C>qE3Y,pdtH[r_WS]r\XF,q%iiDXVn;[oF:[-p_s#I
p(mZDp_EW=di&-(rYbDFdf=t"JcLB&JcNgkq(r"5r^Y+&P"G0ur\=1AqapEIpd+a=ek,j9r_WS]r\XF,
q%iiDrY^;*h&5hoq[WB>q\f#Ap_EW=jVdM)rYthSp(jJ)JcLB&JcLB&o`4eDr]U6NS4ULfmP4K1qapEI
pd+d>!'Jh(r_EGhr^6ZAq(qg^q\RTsN#D@!rXJ`7p_s#IoG73:q@h<qrYthSp(m?%JcLB&fDpL'JcO$q
r1s=[rgj%`jIu%=o;(*9nY3Ric_U!&pndYZrh]UfqO[bZr'C<Hnj(qpnNu"rnNuV/RmH7'r]p?Iog&@<
!(!4WJcLB&JcLB&qZ-PirgEbVrhJPJn"n7(qP*bZMkp<Im\0EPoq_S`rh91\!1s*Sr]eUlq*OmDgd(Br
^Hot-jZr]0og&@<!($)SJcLB&JcLB&WW;smrgEbVrhJYMrh8eWbbXd'gn_$Im\0EPoq_Va!2][gqO[bZ
r'C<HbWt\bgctj+nj8I)pHdn+qa0s@qEFsG_>o/fJcLB&JcOF'r1X+bqkWtYqk9[Yae[den"]?D!2&eT
hPC'9pd+X@q`rXsPsOh'nNu\1mR$G/hEgE,JcLB&JcLB&YQ4TprhK@dpRh>VnYCc4pS?Z>n"]<CnY,$>
qkX-Vpd+X@q`q#E_a3]UnNu\1og8LAnNbqs]E!N`JcLB&JcOX-r1X+bqkWtYqk:p'VPN(B!2K%Ym[s$C
hPC'9pd+X@q`smAJjJommQg;/mm6A.nNcA*og+T<JcLB&JcLc1r1X+brhTOhpRh>VQ))p*hP'D5m[s6I
qk;lBr'L0EpHnaBTL$[cmQg;/mm6D/!(-3@hEeRMJcLB&JcLB&j8f!3ra#M.kVMs0peUW8q_Rn*pH8IC
rBl;q^bc!drd"KNq+pf%rYthTkSF"<oca&Cq\JiApDWoK\e^5?ruq@grZqLeq]UaqJcLB&JcLu7q(r"U
r`oFYlSJ93peUW8q_Rn*pH8=?f/&"7mPFl=rd"KNq+pf%rYthTkSES0pCmE>obdQEr>PPQN#&u?ruq@g
rZq:_f`6U(JcLB&JcNUeq(r"Ur`nYCpJCW\r%.asq_Rn*pH8=?WAC)$s%iW>ra>Otq%irKrYju9mNM<<
q\JiApDWoKh%kSXkSF1Ar[.Uiq&t=iJcLB&JcLo5r]L0Ap],mGJcP?Ar_WS:nGrOnrW]J)JcNLbrX8]/
b5d+oJcLB&JcNOcr]L0AaoI"nT`G'grZL_2rWiE,rW%NMJcP-;rX8]/SH+6AJcLB&JcP0<r]L0AS,e-@
cN*r@rZL_2rWiE,ciAXtRfNEqrWV]iJcLB&fDpL'JcNair]L0A_uPAhVZ?]mrZL_2rWiE,p],mGJcP?A
rX8]/QN2U;JcLB&JcPBBr]L0AQ2lL:eH#SFrZL_2rWiE,aoI"nT`G'"rWVKcJcLB&JcLB&U&b0Tr]B9C
JcLH(s%i\lrZL_2rWiE,S,e-@cN*qPrWTk5JcLB&JcLB&fDt^Ir]L0AO8sk4gAq4LrZL_2rWiE,_uPAh
VZ?](rWV9]JcLB&JcLB&VuZfZr]B'=JcLZ.r_WS:rrDWjrWiE,Q2lL:eH#RVrWTY/JcLB&JcLB&ec>\3
r]@FdJcN:\r_WS:nGrOnrW_NcJcLH(rsJf7rWS#VJcLB&JcLK)r]L0AK`H])joGBWrZM":q#LC!rW\Ga
JcOO*rX8]/XoO%RJcLB&JcOj3J,~>

%%EndBinary
grestore
np
103.408 116.735 mo
102.658 116.735 li
102.658 49.4545 li
103.408 49.4545 li
103.408 116.735 li
/2 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 87.642 171.75 ]ct
[0 67.8844 -1.20968 0 15.9596 54.6913 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 283 
/H 5 
/M[283 0 0 -5 0 5 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 283 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 283 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 283 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 283 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
Jc^N*j8tr!JgAA^]IJL_W[c[%JcLc1p&]gIJcbBBPU(i+dNl(IJh"/Xc2`FrQiQFRJc^N*q>uL!JgB.t
VCI0I^ad5%JcMPGhu\K3L'%<!Jg>pnkTka0Jh#h2T)aHC`rNaRJc_qRfd).pN?n3IJgu@%mjaP%JcO4!
J,~>

%%EndBinary
grestore
np
103.408 117.485 mo
102.658 117.485 li
102.658 116.735 li
103.408 116.735 li
103.408 117.485 li
103.408 49.4545 mo
102.658 49.4545 li
102.658 48.7037 li
103.408 48.7037 li
103.408 49.4545 li
/2 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 87.642 171.75 ]ct
[0 69.3237 -1.20968 0 15.9596 53.9717 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 289 
/H 5 
/M[289 0 0 -5 0 5 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 289 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 289 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 289 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 289 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
K"$?@hRB=!Jf20<a8gelJcLB&JcPECO10_MdC6D!Jf1^/eGt1$JcLB&JcOs6S@=*Z`4*K!Jf17"iW+Q1
JcLB&JcOL)WOIJg\$sR!Jf0djJcLB&JcLB&])]p]K"%,VlPY9lJf41uNrXb3JcLB&XoNt~>

%%EndBinary
grestore
np
109.408 119.36 mo
103.408 119.36 li
103.408 117.485 li
105.522 117.485 li
105.522 48.7037 li
103.408 48.7037 li
103.408 47.36 li
109.408 47.36 li
109.408 72.8506 li
108.898 72.8506 li
108.898 94.2684 li
109.408 94.2684 li
109.408 119.36 li
/2 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 87.642 171.75 ]ct
[0 72.6819 -6.53226 0 22.0079 52.0527 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 303 
/H 27 
/M[303 0 0 -27 0 27 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 303 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 303 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 303 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 303 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcPfN
JcLB&JcLB&JcLB&JcP0<q(r"5r^WbU\4Q*Cpe:QVoL&I@s$?KDek,j9r_WS]r\XO/q%iiDeJX,[r!iH2
q[WB>q\f#Ap_EW=di&-(rYbMIp],mGJcLB&JcM_Lq(r"5r^Z3EJk>N)mP4K1qapEIpd+a=ek,j9r_WS]
r\XO/q%iiDRi0$[oF:[-p_s#IoG73:q@h<qrYthSq%g[EJcLB&JcLB&iW/d1r]U6NY=YifmP4K1qapQM
rBp?GqE3>#r_EGhr^6ZAr%n-aq\S0.Jf4G'oF:[-p_s#IoG73:q@h<qrYthSq\K2IJcLB&JcLB&T)eeb
rgEbWrhAtWo:bWLnYGTLn"fKKkG4fIm\0EPrhTOhpndt`r1EmQq`j%)mm6J2j$<H+nNrX0mm6A,pd+dE
og&F>q#LBri;rKLmJtH3aoK-UmK*1brW2lrqZ6'aJcLB&f`:rGrgEbWrhAJIn"oQMpSIY]n"fKKXea^I
m\0EPqkX"`rh97^r'C3Ek!8i0mm6J2gd(BrhEe/-mQgP5qa:6Gq`t'Dq#LBri;qg9g&^dGO9#%UmK*1b
rW2lrqZ4#'JcM#8r1s=[rgs+`rLrGKn"oQMm\TBJnY>ZNQDErB!2]LfqkX"`rh97^r'C3EiBZitnO)_0
mm-D0Ud='-mQgP5qa:$Ar'0uWrWD*[r;bjXbQ65oZN0CoqZ-TrqZ-Kop]1<oJcLB&ciF!;rhK@dpRh>V
dA3/*l_3sEn"]<CnY+p;r'L0EpHndC!'l0&k!AE#nNu\1mR$G/og.t2q#L9mnH-&t[/fUri;rrZh?'ST
JcL]/r1X+b!2TOgpRh>VQ_`'*hP'D5m[s<Kq4ZcCr'L0EpHnaBa?cLcmQgG3rBfs=mR$G/iBd8>qZ63g
q#H!Hmf;bWhZ;R8li;V;JcNair1X+bqkWtYqk;f@NMQ9Al(RR@m[s$CiM?B<pd+jFqa10FN^;DcmQg;/
mm6A.nN[(?i^*A?qZ63g^At86mK2_UoE!eMZ2fIVJcPfNr1X+bqkWtYqk9[Yae[den"]?D!2&eTiM?B<
pd+X@q`rOpQpL.*r^-6Dmm6A.nNc&!q#L9mncAdmK)k$6mK28Hh?*?MJcLB&]E%a`ra,S0kV`*3pe^];
q_e%-pHACAXu2S(s%r]@ra>Y"q%`rLru:qUkSNY1pD!K?obdEAq]4Q1Jf!Pcruq@hrZqCbq#L:2kU>j?
pFH+hoHs>[q]h4O[4)%rrXmTZJcLB&p&OnEra,S0kV`*3pe^];q_e%-pHACAo/2+WdP_&$rd+QOr(m,(
rYthTkSNY1p_3]Bq\JiApDWoLV&,gAruq@hrZqCbq#L:2r@%"\mN2*Qq^CbWq]jZ?Jgg(9ruV.OR/hg=
YlOSUra,S0kV`05s&&PfpFc>#ofDh1qa@tPNA^`4rd+QOr_NPiq%irKrYju:mNM<=q\JiApDWoLkSJge
h&$)7r[7[jr#tk9q]"`ImN2*Qq^DCimj@oVROG6cruV.Og]2p+JcOm4r]U6CU]Q,L`rc6;rZLh5rWiE,
eH(7&Q3$snrWVoo!%.^mr[3I^Ji_sRrZIp8JcMGDr]U6CklQG<JcbpKrZLh5rWiE,RfS*AciO+SrWVoo
r[.UlbW:>:T/urok5^)6JcOL)r]U6CY6':W]E8(0rZLh5rWiE,huSE1MZNecrWW9$rrDipr[.UlO?.tS
gH,<VWrR_OQN7"Jr]K`QJc^N*p]CFlrZLh5rWiE,U]H&J`rZ/JrWVoor[.UleN/:CQ9,!fn,S%?JcO0u
r]U6C\,q6`ZNC,'rZLh5rWiE,klHA:JcYiZrWVoor[.UlRlZ-^coV.K[K(mZMu`i?r]L,\Jc^N*m/m8a
rZLh5rWiE,Y5s4U]E/!?rWVoor[.Uli&ZHNM`Uh[qZ-WrJcLB&a8l3&r]J!uJc_qRr_`Y;oDnjqrW_oo
JcUH(p]:@&rWVoor[.UlUcO)ga#a2B^AricK)bm7s#p?DLB<&/j9#<XrZLh5rWiE,\,h0^ZN:%6rWVoo
r[.UlkrODWJi`lRK`H])]`A$pr]JC+Jc_PGr_`Y;oDnjqrW`<%JcUH(m/d1prWVoor[.UlY<%7r]K6$7
aoI"nJcPfNq#LCWr]H8DJca[.r_`Y;oDnjqrW^1>JcVkPrXAc0oDnk;r[77tJi\KEpcABsNW=Y2]E!H
~>

%%EndBinary
grestore
np
104.772 116.735 mo
103.408 116.735 li
103.408 49.4545 li
104.772 49.4545 li
104.772 116.735 li
/2 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 87.642 171.75 ]ct
[0 67.8844 -1.93548 0 17.4112 54.6913 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 283 
/H 8 
/M[283 0 0 -8 0 8 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 283 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 283 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 283 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 283 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
Jc^N*j8tr!JgAA^]IJL_W[c[%JcLc1p&]gIJcbBBPU(i+dNl(IJh"/Xc2`FrQiQFRJc^N*q>uL!JgB.t
VCI0I^ad5%JcMPGhu\K3L'%<!Jg>pnkTka0Jh#h2T)aHC`rQ*1^Ik%hmP=T5!)ED`oL/I@qE<D%r_NMj
s$Zi;gb+12s"<pkq^D4lq^q+bqC:&Kr[n+%s"F'_Jf*JaoH*lOp_WfElPfU>i#)2*rYPPLru.+%JcO4!
r^jIhW(QJ5peL]YrC$EKpd4g?ek5p;r_`\`r[cGLM_=cPr?qIjpb)FqlR_l^eh6qRr\"4(lPP3jm25I:
q]GSLq\\W;qAe''!#PYOrYGMPM#`,-h#RFGWCjKhmP=Q4qb$KKs$HQKqE<D%r_NMjs$Zi;`\*Q0oI'Ma
!&"("q^q+bqC:&Kr[n+%s"E:IJf+8"oH*lOp_WfElPfU>eenB&rYGMPr;_ELJcP!7rhJPJn"n7(nY>oU
O/2EAqk<e]oq_VaiBZitnO)8#r'9d=QU1.-mQgP5qa:0Ei;qg9rW1=GZiJSUmK*1brW2lrqZ5:KJcLc1
J,~>

%%EndBinary
grestore
np
105.522 117.485 mo
103.408 117.485 li
103.408 116.735 li
104.772 116.735 li
104.772 49.4545 li
103.408 49.4545 li
103.408 48.7037 li
105.522 48.7037 li
105.522 117.485 li
/2 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 87.642 171.75 ]ct
[0 69.3237 -2.66129 0 18.137 53.9717 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 289 
/H 11 
/M[289 0 0 -11 0 11 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 289 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 289 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 289 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 289 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
K"$?@hRB=!Jf20<a8gelJcLB&JcPECO10_MdC6D!Jf1^/eGt1$JcLB&JcOs6S@=*Z`4*K!Jf17"iW+Q1
JcLB&JcOL)WOIJg\$sR!Jf0djJcLB&JcLB&])_i:rj'hUNjJDeqR61)jg4fjf!G@]q6U&Jr[.._Jg]h2
oH3rQpaH"elQuBPfI-SEr[Igps!Nj-JcLB&JcMqRrj2U0gTuL<!42+%pp0"fqR"h[rj)@+r[7[lr[3:F
h'_h:q]PY^q^:\UqBP)LmjJ)`r[@doS,e-@JcLB&T`G(urj(aoK!Y'Tm^Dnrjg4fjf!G@]rNlI/r[7[l
N$lt"oH3rQpaH"elQuBPngEEEr[Igps!OcGJcLB&JcM#8rgs+ajJ)+>nYGTLn"fKKr1o:IpS.GWpndk`
pne"ghE^NqnO)S,o0Dh4TL%d-mQgP5qa:-D!C9!M"5s:H!;-?9!Q+oV!:BmY!;cfZ!.k3&!;$9jT)PMG
U@4rKV!b)JV"pe]UPblHV!auPV>I(`V>mIM5jq#/6h`k.5k.1C6/+]n5kmYB6hinI5sYDOi;r]RkQ&g-
ciCQUmK)kYqZ69gJcLB&k5bLQrhJPKn"oQMm\TQOr1rkXQ_a/Im\9KQqkX"`s/4^=mm6S5r^5I+nNsfQ
c9^k`pd+dEpcnjG5lLlI!W<&V!6bK"!36+f!V-6f!<<+O!.k4)!;iSdTDP=sUoL6IU&:\XU[FcEU$&6K
62*_C5iP(b62X">5k.2061.)05j(H1!V$5Y!7:f7!oF%A!r)hT!.k3_!.Y~>

%%EndBinary
grestore
np
gsave
109.408 94.2684 mo
108.898 94.2684 li
108.898 72.8506 li
109.408 72.8506 li
109.408 94.2684 li
clp
108.898 72.8506 mo
109.408 72.8506 li
109.408 94.2684 li
108.898 94.2684 li
cp
/2 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 87.642 171.75 ]ct
[0 21.8286 -.967742 0 22.0079 77.2395 ]ct
snap_to_device
<<
/T 1
/W 91 
/H 4 
/M[91 0 0 -4 0 4 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)
!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)
!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)
!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)
!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)
!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)~>
<~!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%
!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%
!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%
!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%
!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%
!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%~>
<~3]];_3]];_3]];_3]];_3]];_3]];_3]];_3]];_3]];_3]];_3]];_3]];_3]];_3]];_3]];_3]];_
3]];_3]];_3]];_3]];_3]];_3]];_3]];_3]];_3]];_3]];_3]];_3]];_3]];_3]];_3]];_3]];_
3]];_3]];_3]];_3]];_3]];_3]];_3]];_3]];_3]];_3]];_3]];_3]];_3]];_3]];_3]];_3]];_
3]];_3]];_3]];_3]];_3]];_3]];_3]];_3]];_3]];_3]];_3]];_3]];_3]];_3]];_3]];_3]];_
3]];_3]];_3]];_3]];_3]];_3]];_3]];_3]];_3]];_3]];_3]];_3]];_3]];_3]];_3]];_3]];_
3]];_3]];_3]];_3]];_3]];_3]];_3]];_3]];_3]];_3]];_3]];_~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
1 dict begin
/T1_Text{eclp cmyk
IESYKG+Calibri-Bold*1 [0 -14.25 -14.25 0 0 0 ]msf
118.588 94.71 mo
(S)sh
T1_grestore}def
T1_gsave
T1_path 109 88 6.38546 .649933 -6.38546 -.649933 ()
0 0 0 1 T1_Text
false sop
/T1_Text{eclp cmyk
IESYKG+Calibri-Bold*1 [0 -14.25 -14.25 0 0 0 ]msf
118.588 87.9696 mo
(l)sh
T1_grestore}def
T1_gsave
T1_path 108.682 85 3 .94281 -3 -.94281 ()
0 0 0 1 T1_Text
false sop
end
grestore
1.5 lw
1 lc
1 lj
158.968 145.46 mo
158.548 3.73001 li
.357 .608 .835 rgb
@
195.818 117.11 mo
195.818 3.73001 li
@
370.608 124.13 mo
334.608 124.13 li
334.608 46.13 li
370.608 46.13 li
370.608 124.13 li
/2 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 87.642 171.75 ]ct
[37.5 0 0 79.5 246.216 46.87 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 50 
/H 106 
/M[50 0 0 -106 0 106 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 50 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 50 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 50 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 50 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&cN*52b5d=u"T\Z,!sJht"9\l1!s/Mf!!<6'!X.un!sAZ,!TX7M!qlW/!!E<("pkY)
$NpeC"p+hk!!<6)"pFf,oE>=""p=sj!;-<p!X&iA'^cb?'G(TS!pfmi!W`H1$180(#m^\8!pfmj!WiB&
!Wr,sq#CR"!WW6&!pfme!p0I_!pfmj!XB5P*?Xbn"Wna$%gN1.!;HNs!s]2C%Iao3%1N[M"7#pj!<<0$
!<MZi"T\W(!WW8S!94%`!<NN=)Bg?p,R,J:)A*5V!U]pl!<E</%1j*?&I&dX%1!(;!V$0f!<3)b!<3)2
!!`N-#SJ+$,pi+/!$qgq+rh4$"9Ioj#6=o0#n%=W&FpG=&.oK^#m:>2m/R+fqu?]tnc/Xjqu?]uli>B4
"T\`3&f`+`-3YS5&dSU@mJmCk!sAo<%djr2%LWRE"9S\l!!!*"!!!&f!!!'!!!!)4!!E<*#SJ*W,46c]
+rh4$"9Ioj"T\].#n%72&d8aQ#m:>2m/R+frVup!mJm4frW!!$!!'\4"T\`3&f`+`-3YS5&dSU@mJmCk
!sAo<%fR+2&d8aQ#m:>2m/R+frVup!mJm4frVup"aT1o4"T\`3&f`+`-3YS5&dSU@mJmCk!sAo<%djr5
%LWRG!s.ch!!<-"!!2oro`+smrVup"])W!8":,V[,46c]+rh4$"9J8tpAb?t!sAo<%djr5%LWRG!s.ch
!!<-"!!2Kf!!3'!!!:pUhuEo]":,V[,46c]+rh4$"9Ioj"T\].#n%72&d8aQ#m:>2oDn^f!!<-"!!2Kf
!!3'!!!9b4"T\`3&f`+d-N,7p+rh4$"9Ioj"T\].#n%72&d8aQ#m:>2m/R+frVup!mJm4frVup"mf:T4
"T\`3&f`+`-3YS5&dSU@mJmCk!sAo<%djr5%LWRG!s.ch!!<-"!!2Kf!!3'!!!9b4!<E<*#SJ+$mNr)]
*"iM[!U]pk!<WH2$P)S;"V(nH"9S\l!!!*"!!!&f!!!'!!!!)4!!NB+#SJ+$mNr)]*"iM[!VQNh!!NB*
":5GGmLf[5$OHq<!UTje!r`0"!U]pf!WE'!!nmY6!!NB+#SJ+$mNr)]*"iM[!U]pk!<WH2$P)S;"V(nH
"9S\q!;lfs!r`0"!U]pf!WE'!!kSF9!<`Z@*$Xl!#::cA*"iM[!U]pk!<WH2$P)S;"V(nH"9S\l!!!*"
!!!&f!!!'!!!!)f!7(WK!<`Z@*$Xet"X4p!#Qt1r!!NB*":5GGmLfO1$Ng\<!s.ch!!<-"!!2Kf!!3'!
!!9b4!s&N1&cisrmNr)]*"iM[!U]pk!<WH2$P)S;"V(nH"9S\l!!!*"!!!&f!!!'!!!*-$]Dr*9":,V[
,46c]+rh4$"9Ioj#6=o0#n%4U'(?M;%LWRG!s.ch!!<-"!!2Kf!!3'!!!::Cnc/go":,V[,46c]+rh4$
"9Ioj"T\].#n%72&d8aQ#m:>2m/R+frVup!qZ-6g!!3'!!!9b4"T\`3&f`+`-3YS5&dSU@q#L*g"T\].
#n%72&d8aQ#m:>2m/R+frVup!mJm4frVup"h#Q=4"T\`3&f`+`-3YS5&dSU@mJmCk!sAo<%djr5%LWRG
!s/&pq#CBrrVup!mJm4frVup"])W!8":,V[,4d/Z-3YS5&dSU@mJmCk!sAo<%djr5%LWRG!s.ch!!<-"
!!2Kf!!3'!!!;WibQ%eI":,V[,46c]+rh4$"9Ioj"T\].#n%73&dAsY$OHq<!UTje!r`0"!U]pf!WE'!
!kSF4!<`N2&f`+`-3YS5&dSU@mJmCk!sAo<%djr5%LWRG!s.ch!!<-"!!2Kf!W`9$!<<25!!NB+#SJ+$
mNr)]*"iM[!U]pj!<WH2$NL\)&d8aQ#m:>2m/R+frVup!mJm4frVup"blI24"T\`3&f`+`-3YS5&dSU@
mJmCk!sAo<%djr5%LWRG!s.ch!!<-"!!3'!nGiOirVup"])W!8":,V[,46c]+rh4$"9JE#o)Jpp!sAo<
%djr5%LWRG!s.ch!!<-"!!2Kf!!3'!!!;'Yg].KY":,V[,46c]+rh4$"9Ioj"T\].#n%72&d8aQ#m:>2
p]1!f!!<-"!!2Kf!!3'!!!9b4"T\`3&f`+h-M\tl+rh4$"9Ioj"T\].#n%72&d8aQ#m:>2m/R+frVup!
mJm4frVup"o)Ql4"T\`3&f`+`-3YS5&dSU@mJmCk!sAo<%e:82&d8aQ#m:>2m/R+frVup!mJm4frVup"
]`89;!!*3.&f`+`-3YS5&dSU@mJmCk!sAo<%djr5%LWRG!s.ch!!<-"!!2Kf!!3'!!!9b4"T\`3&f`+`
-3YS5&dSU@mJm7g!s8Z4$P)S;"V(nH"9S\l!!!*"!!!&f!!!'!!!!)I!:0[h!<`Z@*$Xet"X4p!#Qt1r
!!NB*":5GGmLf[5$OHq<!VQNg!!!*"!!!&f!!!'!!!!)4!!NB+#SJ+$oHsG^"X4p!#Qt1r!!NB*":5GG
mLf[5$OHq<!UTje!r`0"!U]pf!WE'!!q?96!!NB+#SJ+$mNr)]*"iM[!U]pk!<WH2$P)Y=#8.XZ$OHq<
!UTje!r`0"!U]pf!WE'!!kSF9!<`Z@*$Xet"X4p!#Qt1r!!NB*":5GGmLf[5$OHq<!UTje!r`0"!U]pg
!<<0$!!9b4"T\`3&f`+`-3YS5&dSU@mJm=i!sAo2$P)S;"V(nH"9S\l!!!*"!!!&f!!!'!!!!)G!:Bgj
!<`Z@*$Xet"X4p!#Qt1r!!NB*":5GGmLf[5$OHq<!UTje!r`0$!<<,h!!!'!!!!)4!!NB+#SJ+$mNr)]
*"iM[!W<#h!!NB*":5GGmLf[5$OHq<!UTje!r`0"!U]pf!WE'!!oX.6!!NB+#SJ+$mNr)]*"iM[!U]pk
!<WH2$P)S;"V(nH"9S]#!;-<l!r`0"!U]pf!WE'!!kSF9!<`Z@*$Y,(pa-.g*"iM[!U]pk!<WH2$P)S;
"V(nH"9S\l!!!*"!!!&f!!!'!!!!)m!6>-D!<`Z@*$Xet"X4p!#Qt1r!!NB*":5GGo+Ls6"V(nH"9S\l
!!!*"!!!&f!!!'!!!!)7!<)s%!<`Z@*$Xet"X4p!#Qt1r!!NB*":5GGmLf[5$OHq<!UTje!r`0"!Ug!h
!!3'!!!9b4"T\`3&f`+`-3YS5&dSU@mJm4f"9Sc5$P)S;"V(nH"9S\l!!!*"!!!&f!!!'!!!!)J!:'Ug
!<`Z@*$Xet"X4p!#Qt1r!!NB*":5GGmLf[5$OHq<!UTje!r`0"!U]pf!WE'!!kSF9!<`Z@*$Xet"sP$"
#Qt/.mf3Ll!sAo<%djr5%LWRG!s.ch!!<-"!!2Kf!!3'!!!;3]fDl'U":,V[,46c]+rh4$"9Ioj"T\].
#n%72&d8aQ#m:>2quH9f!!<-"!!2Kf!!3'!!!9b4"T\`3&f`+l-M8\h+rh4$"9Ioj"T\].#n%72&d8aQ
#m:>2m/R+frVup!mJm4frVup"pAi/4"T\`3&f`+`-3YS5&dSU@mJmCk!sAo<%e^P2&d8aQ#m:>2m/R+f
rVup!mJm4frVup"_#X?4"T\`3&f`+`-3YS5&dSU@mJmCk!sAo<%djr5%LWRG!s.ch!!<-"!!2Wjr;Zfu
rVup"])W!8":,V[,46c]+rh4$"9Iul#64`)!sAo<%djr5%LWRG!s.ch!!<-"!!2Kf!!3'!!!:XMkPtbe
":,V[,46c]+rh4$"9Ioj"T\].#n%72&d8aQ#m:>2m/R+frVup!mJm4frVup"])W!8":,V[,46c[+rh4$
!<`Gk!!NB*":5GGmLf[5$OHq<!UTje!r`0"!U]pf!WE'!!qcQ6!!NB+#SJ+$mNr)]*"iM[!U]pk!<WH2
$P)eAq[s&B$OHq<!UTje!r`0"!U]pf!WE'!!l"a6!!NB+#SJ+$mNr)]*"iM[!U]pk!<WH2$P)S;"V(nH
"9S\l!!!*"!!!&h!!3-#!WE'!!kSF9!<`Z@*$Xet"X4p!#Qt1r!!NB*":5GGmLf[5$OHq<!UTje!r`0"
!U]pf!WE'!!n%)6!!NB+#SJ+$mNr)]*"iM[!U]pk!<WH2$P)S;"V(nH"9S\l!!33%!!*'#mJm4frVup"
])W!8":,V[,46c]+rh4$"9Ioj"T\].#n%72&d8aQ#m:>2m/R+frVup!mJm4frVup"jT*m4"T\`3&f`+`
-3YS5&dSU@mJmCk!sAo<%djr5%LWRG!s/?#nGiOjrVup!mJm4frVup"])W!8":,V[,5W_Z-3YS5&dSU@
mJmCk!sAo<%djr5%LWRG!s.ch!!<-"!!2Kf!!3'!!!;oq_uKrA":,V[,46c]+rh4$"9Ioj"T\].#n%7;
')3(C%LWRG!s.ch!!<-"!!2Kf!!3'!!!:";q>^["":,V[,46c]+rh4$"9Ioj"T\].#n%72&d8aQ#m:>2
m/R+frVup!o)S[g!!3'!!!9b4"T\`3&f`+`-3YS5&dSU@nGrOg"T\].#n%72&d8aQ#m:>2m/R+frVup!
mJm4frVup"eH"b4"T\`3&f`+`-3YS5&dSU@mJmCk!sAo<%djr5%LWRG!s.ch!!<-"!!2Kf!!3'!!!9b4
"T\`3&f`+`-3>A2&cr=A!U]pk!<WH2$P)S;"V(nH"9S\l!!!*"!!!&f!!!'!!!!)a!7UuP!<`Z@*$Xet
"X4p!#Qt1r!!NB*":5GGmLf^6$OHq<!<DNf!!<-"!!2Kf!!3'!!!9b4"T\`3&f`+p-LiDd+rh4$"9Ioj
"T\].#n%72&d8aQ#m:>2m/R+frVup!mJm4frVup"qZ+G4"T\`3&f`+`-3YS5&dSU@mJmCk!sAo<%f-h2
&d8aQ#m:>2m/R+frVup!mJm4frVup"`;oW4"T\`3&f`+`-3YS5&dSU@mJmCk!sAo<%djr5%LWRG!s.ch
!!<-"!!2cnq#CBqrVup"])W!8":,V[,46c]+rh4$"9J,pqZ$d#!sAo<%djr5%LWRG!s.ch!!<-"!!2Kf
!!3'!!!:dQj8]>a":,V[,46c]+rh4$"9Ioj"T\].#n%72&d8aQ#m:>2n,WFf!!<-"!!2Kf!!3'!!!9b4
"T\`3&f`+`-3YS5&dSU@mJmCk!sAo<%djr5%LWRG!s.ch!!<-"!!2Kf!!3'!!!;Hdd/X=N":,V[,46c]
+rh4$"9Ioj"T\].#n%72&d&UO#m:82!UTje!r`0"!U]pf!WE'!!lG$6!!NB+#SJ+$mNr)]*"iM[!U]pk
!<WH2$P)S;"V(nH"9S\l!!!*"!!!&l!;c`r!WE'!!kSF9!<`Z@*$Xet"X4p!#Qt2!!;um$!<WH2$P)S;
"V(nH"9S\l!!!*"!!!&f!!!'!!!!)O!9O7b!<`Z@*$Xet"X4p!#Qt1r!!NB*":5GGmLf[5$OHq<!U]pg
!!<-"!!2Kf!!3'!!!9b4"T\`3&f`+`-35;1!tkkB!U]pk!<WH2$P)S;"V(nH"9S\l!!!*"!!!&f!!!'!
!!!)b!7LoO!<`Z@*$Xet"X4p!#Qt1r!!NB*":5GGmLf[5$OHq<!UTje!r`0"!U]pf!WE'!!kSF;!<`Z@
*$Q^Vn0S;_*"iM[!U]pk!<WH2$P)S;"V(nH"9S\l!!!*"!!!&f!!!'!!!!)u!5JR<!<`Z@*$Xet"X4p!
#Qt1r!!NB*":5GGq\&N6"V(nH"9S\l!!!*"!!!&f!!!'!!!!)?!;6Br!<`Z@*$Xet"X4p!#Qt1r!!NB*
":5GGmLf[5$OHq<!UTje!r`0"!VZTh!!!'!!!!)4!!NB+#SJ+$mNr)]*"iM[!VHHh!!NB*":5GGmLf[5
$OHq<!UTje!r`0"!U]pf!WE'!!ndS6!!NB+#SJ+$mNr)]*"iM[!U]pk!<WH2$P)S;"V(nH"9S\p!;ult
!r`0"!U]pf!WE'!!kSF9!<`Z@*$Xhu"stN6&dSU@mJmCk!sAo<%djr5%LWRG!s.ch!!<-"!!2Kf!!3'!
!!;Keci=4M":,V[,46c]+rh4$"9Ioj"T\].#n%72&crON#m(53!UTje!r`0"!U]pf!WE'!!kSF8!<`Z@
)uq2N-3YS5&dSU@mJmCk!sAo<%djr5%LWRG!s.ch!!<-"!!2Kf!!3'!!Wi?%]`83:":,V[,46c]+rh4$
"9Ioj"T\].#n%7B'(HS<%LWRG!s.ch!!<-"!!2Kf!!3'!!!:7Bo)Jsq":,V[+sl_*"skH5&dSU@mJmFl
!sAo<%h\:D"q_@R#m:>2m/R+frVup!q>g0g!!3'!!!9b4"p"c2&K;l=n0J8a+WD"!!Wi&rpAb?t!<`Z:
&+1#5%h&^H!<MNerrMBbrrLjShZ*f]#7q^n+n-ZZ+W_I3#6O2k"9So<%M8+?":u%O#QsVtq>gKql2^ea
\c;j7"q)%[neqBD";_[Y"p4,k"9AW0#Rg&/":GJ>"9Icf"9JQ)!<M`k"9AN)!!;NfbQ%eI":#8C%Iai2
%1N[L"9Ifg!WrT0m0<Rprr_Nd!!;Ed!WW3%\,ZU3!WrSn"p4u1!WhNc!W`?'mK<Ok!p'C^!q$$j!WW6$
[fHC.mK3@go)SIa!W`9$mK*Fi!!20]mK2AJoE+mkL]E#,JcLB&JcLB&_uP;~>

%%EndBinary
grestore
np
342.518 117.11 mo
359.597 117.11 li
359.597 49.079 li
342.518 49.079 li
cp
.984 .898 .835 rgb
ef
.75075 lw
2 lc
0 lj
342.518 117.11 mo
359.597 117.11 li
359.597 49.079 li
342.518 49.079 li
cp
0 .69 .941 rgb
@
0 gry
IESYKG+Calibri-Bold*1 [-6.281e-7 -14.275 -14.275 6.281e-7 0 0 ]msf
355.658 94.71 mo
(Slot)
[-6.75217 -3.02634 -7.52286 0 ]ysh
411.108 124.13 mo
374.358 124.13 li
374.358 46.13 li
411.108 46.13 li
411.108 124.13 li
/2 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 87.642 171.75 ]ct
[38.25 0 0 79.5 285.966 46.87 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 51 
/H 106 
/M[51 0 0 -106 0 106 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 51 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 51 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 51 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 51 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&^B!L!jo>A^p],mGnc/am!WrPn"9\l1"9JVf!!30&!q--l"9JZ+j8f&Yo`>0p!!9P.
!s&K/$1/*'$4$b9!Vufd!!<9+"U=Aurri<%kl:bc!!;Nf!<E8Z!8.>U!<NK6&f0pP"Vqd`#m14p!!NB'
"U#)<mgB7*#m^_:q>g$crrN*!!!;WirW0G-"T\]3&fMhi+S-]Z*ul%("p4)j"Tel7%1Wm;&-WRR$3UJ5
df9@KrVup"quG4H!!;Ke"T\]4'HSIe,R#D8(_-`OlMq%h"UPYLrXn]5"V;4R"p4nk!!E<&!!*,f!!!&@
!:Tsl!<WZE*[C/$"skQ>)@m#RlMq%h":>VMn.Gp:&J#<U!s.H_nc8[jZiC:2!t#ec,UMq,"XP<1%gE+7
!:Bgj!X&i@&J4FE"VD7Q#6P"i!<3)f!!!&Z!7_&R!<WZE+!`0%-3Y\=)@m#RlMq(i":>YO&F^;;&J#6S
!s&B%klC_amJm4f[K$I3!t#ec,QK.[-3Y\=)@m#RlMq(i":>YO&F^;9&J#6S!s.QbrrMNf!!3#u\c;p8
!t#ec,UMq,"XP<1%gE+$!!<9*$4d.L&F^;9&J#6S!s.QbrrMNf!!17Cli74j!t#ec,UMq,"XP<1%gE+$
!!NE,$4d^[n.Gm:%grUE!U'Lb!!*,g!!!&.!!WH+$5O^/-1E5a,p=0;"on_j!!NE,$4d^[n.Gm:%grUE
!TsI_!U]pf!TjC0!!WH+$5O^/-1E5b,p=0;"p4)j"Tef6%hTBB&d&^V$O6\7!TsI_!U]pf!O_t/!<WH3
(*=eJn0S;b+W:jq!p]gi!X&i@&J4FE"VD7Q#6P"i!<3)f!!!&.!!WH+$5O^/-1E5b,p=0;"p4)j"Tef6
%hTBB&d8jX$O6b7k5bM_mJm4fcN*J8p](L!!t#ec,UMq,"XP<1%gE+$!!NE,$4d^[n.Gm:%grUE!TsI_
!VcZh!!!&.!!WH+$5O^/-1E5b,p=0;"p4Jup&G6t":>YO&F^;9&J#6S!s.QbrrMNf!!1dRh#IW[!t#ec
,UMq,"XP<1%gE+$!!NE,$4d^[n.Gm:%grUE!VZTa!<3)f!!!&.!!WH+$5O^/-2Jt_-3Y\=)@m#RlMq(i
":>YO&F^;9&J#6S!s.QbrrMNf!!2`m_>jc@!t#ec,UMq,"XP<1%gE+$!!NE,$4d^[q\&T8"VD7Q#6P"i
!<3)f!!!&;!;$6q!<WZE+!`0%-3Y\=)@m#RlMq(i":>YO&F^;9&J#6S!s.QbrrN#to)Jak[K$L4!t#ec
,UMq,"XP<1%gE+3!:g*n!X&i@&J4FE"VD7Q#6P"i!<3)f!!!&V!8.>V!<WZE+!`0%-3Y\=)@m#RlMq(i
":>YO&F^;9&J#6S!s/9!m/[.emJm4f[K$L4!t#ec,UNF:o-OVe+W:jq!p]gi!X&i@&J4FE"VD7Q#6P"i
!<3)f!!!&q!58F;!<WZE+!`0%-3Y\=)@m#RlMq.k":>YO&/#WH&d8jX$O6b7k5bM_mJm4f`rPT/"p"f5
(*=eJn0S;b+W:jq!p]gi!X&i@&J4FE"VD7Q#6P"i!!30%!:Kmf!O_t4!<WZE+!`0%-3Y\=)@m#RrW)?d
"Tef6%hTBB&d8jX$O6b7k5bM_mJm4fiW.L/"p"f5(*=eJn0S;b+W:jq!p]gi!X&i@&J4FE#8%IS#6Ou,
!9jL`!U]pf!O_t3!<WZE+!^h4n0S;b+W:jq!p]gi!X&i@&J4FE"VD7Q#6P"i!<3)f!!!&u!4i.7!<WZE
+!`0%-3Y\=)@m#RlMq"g":>Y?&J4FE"VD7Q#6P"i!<3)f!!!&C!:0[i!<WZE+!`0%-3Y\=)@m#RlMq(i
":>YO&F^;9&J#6S!s.Tc!WW6%mJm4f[K$L4!t#ec,UMq,"=530%gE"8lMq(i":>YO&F^;9&J#6S!s.Qb
rrMNf!!23^d/X@O!t#ec,UMq,"XP<1%gE+$!!NE,$4d^[n.Gg8%grUC!s.QbrrMNf!!0M.!<E9*$5O^/
-1E5b,p=0;"p4)j"Tef6%hTBB&d8jX$O6b7k5bM_mJm4f[K$L4!t#ec,UMq,"XP<1%gE+$!!NE,$4d^[
n.Gm:%grUE!TsI_!U]pf!RCc9!;HNu!<WZE+!`0%-3Y\=)@m#RlMq(i":>YO&F^;9&J#6S!s.QbrrMlp
pAb0o[K$L4!t#ec,UMq,"XP<1%gE+/!;6Br!X&i@&J4FE"VD7Q#6P"i!<3)f!!!&R!8RVZ!<WZE+!`0%
-3Y\=)@m#RlMq(i":>YO&F^;9&J#6S!s/,rnGrRimJm4f[K$L4!t#ec,UN:6pEg%i+W:jq!p]gi!X&i@
&J4FE"VD7Q#6P"i!<3)f!!!&m!5\^?!<WZE+!`0%-3Y\=)@m#RlMq(i":>YO&Gm+6&d8jX$O6b7k5bM_
mJm4f_Z9</"p"f5(*=eJn0S;b+W:jq!p]gi!X&i@&J4FE"VD7Q#6P"i!<3)t!:p0j!O_t4!<WZE+!`0%
-3Y\=)@m#Rq>g'd"Tef6%hTBB&d8jX$O6b7k5bM_mJm4fh>l4/"p"f5(*=eJn0S;b+W:jq!p]gi!X&i@
&J4FE"VD7Q#6P#(!:9dd!U]pf!O_t4!<WZE+!`03-M&Pf,p=0;"p4)j"Tef6%hTBB&d8jX$O6b7k5bM_
mJm4fq#J,/"p"f5(*=eJn0S;b+W:jq!p]gk!X&i@&J,Qfne)*<%grUE!TsI_!U]pf!QP30!!WH+$5O^/
-1E5b,p=0;"p4)j"Tef6%hTBB&d8jX$O6b7k5YPa!<DQg!!0M."p"f5(*=eJn0S;b+W:jq!r`2f!!NE,
$4d^[n.Gm:%grUE!TsI_!U]pf!TF+0!!WH+$5O^/-1E5b,p=0;"p4)j"Tef6%hTBB&dK!Z$O6b7!!)6`
rrMNf!!0M."T\]4(*=e%-1E5b,p=0;"p4)j"Tef6%hTBB&d8jX$O6b7k5bM_mJm4fr;aD/"p"f5(*=eJ
n0S;b+W:jq!p]gg!X&i@!>,n4&d8jX$O6b7k5bM_mJm4fb5gl/"p"f5(*=eJn0S;b+W:jq!p]gi!X&i@
&J4FE"VD7Q#6P"j!!3-$!U]pf!O_t4!<WZE+!`0%-3PV<)@m#P!p]gi!X&i@&J4FE"VD7Q#6P"i!<3)f
!!!&^!7:cN!<WZE+!`0%-3Y\=)@m#RlMq(i":>YO&F^;7&J#6S!<WAc!<3)f!!!&.!!**&":>nd,UMq,
"XP<1%gE+$!!NE,$4d^[n.Gm:%grUE!TsI_!U]pf!O_t4!<WZE+!`0%-3Y\=)@m#RlMq(i":>YO&F^;9
&J#6S!s.QbrrMNf!!1CGnGr=a"p"f5(*=eJn0S;b+W:jq!p]gi!X&i@&J4FE"VD7Q#6P"i!<3)p!;?Hn
!O_t4!<WZE+!`0%-3Y\=)@m#Rp&Odd"Tef6%hTBB&d8jX$O6b7k5bM_mJm4fg&Tq/"p"f5(*=eJn0S;b
+W:jq!p]gi!X&i@&J4FE"VD7Q#6P#$!:^'h!U]pf!O_t4!<WZE+!`0/-MJhj,p=0;"p4)j"Tef6%hTBB
&d8jX$O6b7k5bM_mJm4fo`2i/"p"f5(*=eJn0S;b+W:jq!p]gi!X&i@&J4gPp(@N@%grUE!TsI_!U]pf
!Q+p0!!WH+$5O^/-1E5b,p=0;"p4)j"Tef6%hTBB&d8jX$O6b7k5bM_quH<g!!0M."p"f5(*=eJn0S;b
+W:jq!r;of!!NE,$4d^[n.Gm:%grUE!TsI_!U]pf!T!h0!!WH+$5O^/-1E5b,p=0;"p4)j"Tef6%hTBB
&d8jX$O6b7qZ-!`rrMNf!!0M."p"f5(*=eJr[.4`"XP<1%gE+$!!NE,$4d^[n.Gm:%grUE!TsI_!U]pf
!Vl`0!!WH+$5O^/-1E5b,p=0;"p4)j#6G#8%hT?c'(QY=&J#6S!s.QbrrMNf!!1+?n,NXn!t#ec,UMq,
"XP<1%gE+$!!NE,$4d^[n.Gm:%grUE!TsFa!<E2h!!!&.!!WH+$5O^/-1E5b,p=0;"p4c(mJmCl":>YO
&F^;9&J#6S!s.QbrrMNf!!2'ZeGodS!t#ec,UMq,"XP<1%gE+$!!NE,$4d^[n.Gs<%grUE!<<,a!<3)f
!!!&.!!NB*$5O^/!%%+]"XP<1%gE+$!!NE,$4d^[n.Gm:%grUE!TsI_!U]pf!W<#0!!WH+$5O^/-1E5b
,p=0;"p4)j!s/T4%fm7Rn.Gm:%grUE!TsI_!U]pf!QtK0!!WH+$5O^/-1E5b,p=0;"p4)j"Tef6%hTBB
&d8jX$O6b7kPtYa!<MTg!!0M."p"f5(*=eJn0S8a+W:jq!!;Hd"Tef6%hTBB&d8jX$O6b7k5bM_mJm4f
joEd/"p"f5(*=eJn0S;b+W:jq!p]gi!X&i@&J4FE!tc%O#6=o-k5bM_mJm4f[K$=/!sArH+!`0%-3Y\=
)@m#RlMq(i":>YO&F^;9&J#6S!s.QbrrMNf!!0M."p"f5(*=eJn0S;b+W:jq!p]gi!X&i@&J4FE"VD7Q
#6P"i!<3)f!!!&G!:^'a!!WH+$5O^/-1E5b,p=0;"p4)j"Tef6%hTBB&d8jX$O6b7k5bM_p]1$g!!0M.
"p"f5(*=eJn0S;b+W:jq!qlWf!!NE,$4d^[n.Gm:%grUE!TsI_!U]pf!SRP0!!WH+$5O^/-1E5b,p=0;
"p4)j"Tef6%hTBB&d8jX$O6b7pAj^`rrMNf!!0M."p"f5(*=eJqBkq`"XP<1%gE+$!!NE,$4d^[n.Gm:
%grUE!TsI_!U]pf!VHH0!!WH+$5O^/-1E5b,p=0;"p4)j"Tef6%hTBM'(uqA&J#6S!s.QbrrMNf!!0t;
oDf'r!t#ec,UMq,"XP<1%gE+$!!NE,$4d^[n.Gm:%grUE!TsI_!W2rh!!!&.!!WH+$5O^/-1E5b,p=0;
"p4W$nc/gp":>YO&F^;9&J#6S!s.QbrrMNf!!1pVf`23W!t#ec,UMq,"XP<1%gE+$!!NE,$4d^[n.Gm:
%grUE!W)la!<3)f!!!&.!!WH+$5O^/-2o7_-3Y\=)@m#RlMq(i":>YO&F^;9&J#6S!s.QbrrMNf!!2lq
^&S?<!t#ec,UMq,"XP<1%gE+$!!`Q.$4d^[&eaaJ"VD7Q#6P"i!<3)f!!!&?!:Tsm!<WZE+!`0%-3Y\=
)@m#RlMq(i":>YO&F^;9&J#6S!s.Qb!W`<%mf3=g[K$L4!t#ec,UMq,"XP<1%gE+7!:Bgj!X&i@&J4FE
"VD7Q#6P"i!<3)f!!!&Z!7_&R!<WZE+!`0%-3Y\=)@m#RlMq(i":>YO&F^;;&J#6S!s&B%klC_amJm4f
[K$I3!t#ec,QK.[-3Y\=)@m#RlMq(i":>YO&F^;9&J#6S!s.QbrrMNf!!3#u\c;p8!t#ec,UMq,"XP<1
%gE+$!!<9*$4d.L&F^;9&J#6S!s.QbrrMNf!!17Cli71i!t#ec,OZr_,pF6<"p4)j"9J]5%hS1B"VD7S
#6P"j!!!%m!!NB*$5=O*mj/)^+W1ao!!;Hd"9J]4%M.t>":ttG!s.Ze"9AQ(!!2Qh!s&B&!TsI1!!WH+
#ne1"+n-ZZ+W_C."p4)j"Tei5%Ls'>%g*@Q$3pS7!n%&N!<E0%cN!qHli7%e!WrZ:'Gp3U"W/$f#m14p
!!NB(!sT)?mL01*#R(:n!!<6%!!2Ti!s&B%!OVn2!WrW6%1Ve:"UthG"p+hk!!E?)!sAks"p>)5"98Jg
!!!*"!:9gd!!!&b!!!)b!:^'_!!<9*!sJ#r!sA]-!U0Rd!WrK)mK<Ok!p9Oc!Wi?'pAjsg!Wi?&kPtSa
c2dhEmK3@goDnL`!W`9$mK*Fi!!2-\mK2>Ip]C0kMu\G0JcLB&JcLB&YQ01~>

%%EndBinary
grestore
np
382.888 117.11 mo
399.967 117.11 li
399.967 49.079 li
382.888 49.079 li
cp
.984 .898 .835 rgb
ef
382.888 117.11 mo
399.967 117.11 li
399.967 49.079 li
382.888 49.079 li
cp
0 .69 .941 rgb
@
0 gry
IESYKG+Calibri-Bold*1 [-6.281e-7 -14.275 -14.275 6.281e-7 0 0 ]msf
396.058 94.71 mo
(Slot)
[-6.75217 -3.02634 -7.52286 0 ]ysh
.357 .608 .835 rgb
/IESYKH+SimSun-GBK-EUC-H-Identity-H findfont [12.025 0 0 -12.025 0 0 ]msf
366.738 88.96 mo
(\001\002)sh
287.358 124.13 mo
252.108 124.13 li
252.108 117.485 li
259.191 117.485 li
259.191 46.13 li
288.858 46.13 li
287.358 46.13 li
287.358 124.13 li
/2 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 87.642 171.75 ]ct
[38.25 0 0 79.5 163.716 46.87 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 51 
/H 106 
/M[51 0 0 -106 0 106 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 51 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 51 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 51 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 51 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&^B!L!g]6sH!!//]o)Jmo!X&T/mfW^p!s/Me!!<6(!X.rmrrV9^!Wi?%qZ?El!WW3$
[K$F2!X8r<m0a"&"p=u&!:p0n!<<6,"RZEq"pG)2kl:\alMq"g!!!)X!8.>U!Wr`?'Gg-R";VUX"p4)j
"Te`/#RLk,$NpeC"p=u'!:g*n!WW3$!!2Qh!s/H&!pK[b!m^iM!X9,N*$>,%o,n2X(_?rS!UKdi!<WT8
%1Ve<"qD+O#Qt//k5YJ_m/[.eq>e50"Teo?)B^9n,R#>2'FFsDlMq%i#Rq7TrXn]5":kqK"U"&j!W`9%
m/R:j!!**#!m(H3!!WK0&/l]<-1E5b+rq@(!s.]f"To#>%hTBB&d/^S#mCCr!<*!%!!!$#!:Kmf!O_t3
!X92S+sl\)"X>'&#m15-!:Bgi!sf>J&ap>8&Io-O!p]gf!<</C!7_&Q!X92S+sl\)"X>'&#m14o!!EB0
%1s3@&d/dV$3^M1!:Bgg!<<.l!!NE.&/l`=mj82_*Y\n_!UB^g!sf>J&ap>8&Io-O!p]gf!<</^!4i.6
!X92S+sl\)"X>'&#m14o!!<</%1rRPmh,a8%LN@@lMpte!!0D+li71j"qV[s-1</a,9@O*!s.]f"9So=
&J=IE";)+N"Tmui!s&B&!1s5p!X92S+sl\)"="s%#m1/.lMq%i#Rq@Xmh,a8%LN@@lMpte!!1@Fd/X=O
"qV[s-1</a,9@O*!s.]f"9So=&J=IE!tc"M"TSVi!!30$!M08l!X8`<)BpKr-3YV8'F=jBlMq%i#Rq@X
mh,a8%LN@@lMpte!!2<a[K$I4"qV[s-1</a,9@O*!s.]f"9So=&J=IE";)+N"Tmui!W`9%[fGpup](I!
"qV[s-1</a,9@O*!s.]f"9So=&J=IE";)+N"Tmui!W`9%oDkol"Tel>)BpKr-3YV8'F=jBp&Odd"9So=
&J=IE";)+N"Tmui!W`9%_>rBl"Tel>)BpKr-3YV8'F=jBlMq%i#Rq@Xmh,a8%LN@@p&Odd!W`9%ScAoq
"qV[s-2An^-3YV8'F=jBlMq%i#Rq@Xmh,a8%LN@@lMpte!!1mU_>j`@"qV[s-1</a,9@O*!s.]f"9So=
&J=jPp(@K?%LN@@lMpte!!0,#oDf$r"qV[s-1</a,9@O*!s.]f"9So=&J=IE";)+N"Tmui!W`9%p].2l
"Tel>)BpKr-3YV8'F=jBq>g'd"9So=&J=IE";)+N"Tmui!W`9%`W4Zl"Tel>)BpKr-3YV8'F=jBlMq%i
#Rq@Xmh,a8%LN@@q>g'd!W`9%ScAoq"qV[s-2f1^-3YV8'F=jBlMq%i#Rq@Xmh,a8%LN@@lMpte!!2$Y
^&S<<"qV[s-1</a,9@O*!s.]f"9So=&J>!Tne)';%LN@@lMpte!!08'n,NUn"qV[s-1</a,9@O*!s.]f
"9So=&J=IE";)+N"Tmui!W`9%quEJl"Tel>)BpKr-3YV8'F=jBrW)?d"9So=&J=IE";)+N"Tmui!W`9%
aoKrl"Tel>)BpKr-3YV8'F=jBlMq%i#Rq@Xmh,a8%LN@@rW)?d!W`9%ScAoq"qV[s-1</a,9@O*!s.]f
"9So=&J=IE";)+N"Tmui!W`9%jT)jl"Tel>)BpKr-3YV8'F=jBlMq"h#Rq@G&ap>8&Io-O!p]gf!<</,
!:0[h!X92S+sl\)"X>'&#m14o!!EB0%1s3@&d/dV$3^Ls!!<6%!<A_l"Tel>)BpKr-3PP7'F=jA!UB^g
!sf>J&ap>8&Io-O!p]gf!<</G!7:cM!X92S+sl\)"X>'&#m14o!!EB0%1s3@&d&^U$3^D2lMpte!!/Yk
!<NH-&/l`=mj82_*Y\n_!UB^g!sf>J&ap>8&Io-O!p]gf!<</b!4Dk2!X92S+sl\)"X>'&#m14o!!EB0
%1s3@&d/dV$3^Ls!!30$!Oi(!!;HNt!X92S+sl\)"X>'&#m14o!!EB0%1s3@&d/dV$3^Ls!!30$!V?Am
!!NE.&/l`=mj82_*Y\n_!VQNe!!EB0%1s3@&d/dV$3^Ls!!30$!Q"im!!NE.&/l`=mj82_*Y\n_!UB^g
!sf>J&ap>8&Io-O!qlWf!!30$!M08p!X92S+sm%3pEg%g*Y\n_!UB^g!sf>J&ap>8&Io-O!p]gf!<</V
!5\^>!X92S+sl\)"X>'&#m14o!!EB0%1s3K'(uq@&Io-O!p]gf!<</$!;$6p!X92S+sl\)"X>'&#m14o
!!EB0%1s3@&d/dV$3^Ls!!30$!VcYm!!NE.&/l`=mj82_*Y\n_!Vufe!!EB0%1s3@&d/dV$3^Ls!!30$
!QG,m!!NE.&/l`=mj82_*Y\n_!UB^g!sf>J&ap>8&Io-O!r;of!!30$!M08p!X92S+sm17o-OVc*Y\n_
!UB^g!sf>J&ap>8&Io-O!p]gf!<</Z!58F:!X92S+sl\)"X>'&#m14o!!EB0%1s3O'(QY<&Io-O!p]gf
!<</(!:Tsl!X92S+sl\)"X>'&#m14o!!EB0%1s3@&d/dV$3^Ls!!30$!W2qm!!NE.&/l`=mj82_*Y\n_
!WE)e!!EB0%1s3@&d/dV$3^Ls!!30$!QkDm!!NE.&/l`=mj82_*Y\n_!UB^g!sf>J&ap>8&Io-O!r`2f
!!30$!M08p!X92S+sl\)"X>'&#m14o!!EB0%1s3@&d/dV$3^Ls!!30$!Ta<m!!NE.&/l`=mj82_*Y\n_
!UB^f!sf>J!"nZ4";)+N"Tmui!W`9%ZN0=l"Tel>)BpKr-3YV8'F=jBlMq%i#Rq@Xmh,a8%LN@@lMq"f
!!*(l!!NE.&/l`=mj8/^*Y\n_!!2Bc"9So=&J=IE";)+N"Tmui!W`9%c2c5l"Tel>)BpKr-3YV8'F=jB
lMq%i#Rq@Xmh,^7%LN@>!p]gf!<<.l!!*-*!tZ@p-1</a,9@O*!s.]f"9So=&J=IE";)+N"Tmui!W`9%
klA-l"Tel>)BpKr-3YV8'F=jBlMq%i#Rq@Xmh,a8%LN@@lMpte!!0P/nGr=a"Tel>)BpKr-3YV8'F=jB
lMq%i#Rq@Xmh,a8%LN@@lMpte!!2]lWrN;)"qV[s-1</a,9@O*!s/)qp&G3t#Rq@Xmh,a8%LN@@lMpte
!!0q:h#IT["qV[s-1</a,9@O*!s.]f"9So=&J=IE";)+N"TnAtp&G-p!!/Yk"Tel>)BpL'-MJhj,9@O*
!s.]f"9So=&J=IE";)+N"Tmui!W`9%h#P:l"Tel>)BpKr-3YV8'F=jBlMq%i#Rq@Xq@`K7";)+N"Tmui
!W`9%WrVbl"Tel>)BpKr-3YV8'F=jBlMq%i#Rq@Xmh,a8%LN@@lMpte!!2ipVZ6l%"qV[s-1</a,9@O*
!s/5unc/dp#Rq@Xmh,a8%LN@@lMpte!!1(>f`20W"qV[s-1</a,9@O*!s.]f"9So=&J=IE";)+N"TnN#
nc/^l!!/Yk"Tel>)BpL+-M&Pf,9@O*!s.]f"9So=&J=IE";)+N"Tmui!W`9%i;gRl"Tel>)BpKr-3YV8
'F=jBlMq%i#Rq@XrY"c7";)+N"Tmui!W`9%Y5n%l"Tel>)BpKr-3YV8'F=jBlMq%i#Rq@Xmh,a8%LN@@
lMpte!!2utUAtH!"qV[s-1</a,9@O*!s/B$mJm@l#Rq@Xmh,a8%LN@@lMpte!!14BeGoaS"qV[s-1</a
,9@O*!s.]f"9So=&J=IE";)+N"TnZ'mJm:h!!/Yk"Tel>)BpKr-3YV8'F=jBlMq%i#Rq@Xmh,a8%LN@@
lMpte!!20]\c;m8"qV[s-1</a,9@O*!s.]f!s8f<&HEF3&d/dV$3^Ls!!30$!ODdm!!NE.&/l`=mj82_
*Y\n_!UB^g!sf>J&ap>8&Io-O!p]gg!<<-#T)]#r"qV[s-1</`,9@O*!rrAf!!EB0%1s3@&d/dV$3^Ls
!!30$!R:\m!!NE.&/l`=mj82_*Y\n_!UB^g!sf>J&ap>7&Io-O!!;Hd!W`9%ScAcm"p5DT+sl\)"X>'&
#m14o!!EB0%1s3@&d/dV$3^Ls!!30$!U0Tm!!NE.&/l`=mj82_*Y\n_!UB^g!sf>J&ap>8&Io-O!p]gf
!<</0!:^'a!!NE.&/l`=mj82_*Y\n_!UB^g!sf>J&ap>8&Io-O!p]gf!<</m!36)'!X92S+sl\)"X>'&
#m15%!;6Bq!sf>J&ap>8&Io-O!p]gf!<</;!8RVY!X92S+sl\)"X>'&#m14o!!EB0%1s3@&d/dV$3^M)
!;6Bo!<<.l!!NE.&/l`=q'Ph_"X>'&#m14o!!EB0%1s3@&d/dV$3^Ls!!30$!Smam!!NE.&/l`=mj82_
*Y\n_!UB^g!sf>J&c*.6&d/dV$3^Ls!!30$!NQ4m!!NE.&/l`=mj82_*Y\n_!UB^g!sf>J&ap>8&Io-O
!p]gf!<</q!2ff#!X92S+sl\)"X>'&#m15)!:g*m!sf>J&ap>8&Io-O!p]gf!<</?!8.>U!X92S+sl\)
"X>'&#m14o!!EB0%1s3@&d/dV$3^M-!:g*k!<<.l!!NE.&/l`=r?h+_"X>'&#m14o!!EB0%1s3@&d/dV
$3^Ls!!30$!T=$m!!NE.&/l`=mj82_*Y\n_!UB^g!sf>J&cNF6&d/dV$3^Ls!!30$!NuLm!!NE.&/l`=
mj82_*Y\n_!UB^g!sf>J&ap>8&Io-O!p]gf!<</u!2BMt!X92S+sl\)"X>'&#m15-!:Bgi!sf>J&ap>8
&Io-O!p]gf!<</C!7_&Q!X92S+sl\)"X>'&#m14o!!EB0%1s3@&d/dV$3^M1!:Bgg!<<.l!!NE.&/l`=
mj82_*Y\n_!UB^g!sf>J&ap>8&Io-O!p]gf!<</^!4i.6!X92S+sl\)"X>'&#m14o!!<</%1rRPmh,a8
%LN@@lMpte!!0D+li71j"qV[r-1</a,T[X+!s.]f"9So=%h\7C";)+M"Tmui!s&B&!:9af!<<//!!NE/
%iQT:mj/)\*>8_^!!2Bc!s8c9&FL,5%h8jK"7#pj!<<*#!!2Qh"T\W(!<<2b!7:cM!X9,N*?jnr"sG',
&I8L?li71i!sT,C&F^25&.]-S"9AT*l2UeblMq"f!<<22!!*-(!t#YV)"/=F(D@5^!p]gh!W`E1$LS<*
$O?q=!UB^i!WiB&!<</k!!E<'!!*,b!!!)H!!NB)"pkYHn.#U2%13=B!U9Xe!<WK.m03Up!s7QaliGB3
nGr:`!s&H*"RZHr"9S],k5YMa!U^'m!<N9'kPtYb!!;ioq#CKu!!!)H!!!)a!<*#e!r`5l!;-<n!<<,f
!Wi?%!TX7K!oX.R!r)hT!.k3&!.k3&!.k3T!.Y~>

%%EndBinary
grestore
np
258.441 116.735 mo
252.108 116.735 li
252.108 46.13 li
258.441 46.13 li
258.441 116.735 li
/2 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 87.642 171.75 ]ct
[7.5 0 0 72 163.716 54.37 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 10 
/H 96 
/M[10 0 0 -96 0 96 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 10 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 10 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 10 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 10 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
pNuX)m/Zm-pIFTNpNuX)m/[!0rd4B0m/Zm-pIFTNpNuX)m/Zm-rC?`Tm/Zp.!.=Q3!(ckb!!;oq!!;qB
!.=Q3!(cJWpj3!gpI>2`q#CBqpAju8!.=N2p](9ppAju8!.=N2p](9ppAju8!.=N2q#CEq!VZThHN8Hf
8,*&a!VZThHN8Hf8,*&a!VZThHN8Hf8,*&a!W2rq!;Lm@I.p/+!!!&o!;Lm@I.p/+!!!&o!;Lm@I.p/+
!!!&o!<7EBHN8Hf8,*&a!VZThHN8Hf8,*&a!VZThHN8Hf8,*&a!VZThHN8Hf8,*&a!VZThHN8Hf8,*&a
!VZThHN8Hf8,*&a!VZThHN8Hj8,YsQ!!!&o!;Lm@I.p/+!!!&o!;Lm@I.p/+!!!&o!;Lm@I.p/1!;c`r
!VZThHN8Hf8,*&a!VZThHN8Hf8,*&a!VZThHN8Hf8,*&a!VZThHN8Hf8,*&a!VZThHN8Hf8,*&a!VZTh
HN8Hf8,*&a!Vufq!;Lm@I.p/+!!!&o!;Lm@I.p/+!!!&o!;Lm@I.p/+!!!&o!<%9BHN8Hf8,*&a!VZTh
HN8Hf8,*&a!VZThHN8Hf8,*&a!VZThHNALapdb)Z!!2fopj3!gpIFuY!!2fopj3!gpIFuY!!2fopj3!g
q+(HTp](9ppAju8!.=N2p](9ppAju8!.=N2p](9ppAju8!.=N2quHZq!!2fopj3!gpIFuY!!2fopj3!g
pIFuY!!2fopj3!gpIFuY!W`9$q#L2:!.=N2p](9ppAju8!.=N2p](9ppAju8!.=N2p](9pp](9opj3!g
pIFuY!!2fopj3!gpIFuY!!2fopj3!gpIFuY!!2foqg8<h!.=N2p](9ppAju8!.=N2p](9ppAju8!.=N2
p](9ppAju8!.=c9qFC;\!!2fopj3!gpIFuY!!2fopj3!gpIFuY!!2fopj3!gpIFuY!!2fopj3!gpIFuY
!!2fopj3!gpIFuY!!2fopj3!gpIG&[!WW3$pAju8!.=N2p](9ppAju8!.=N2p](9ppAju8!.=N2p](9p
r;c]ppj3!gpIFuY!!2fopj3!gpIFuY!!2fopj3!gpIFuY!!2fo!.4Ng!.=N2p](9ppAju8!.=N2p](9p
pAju8!.=N2p](9ppAk#9!IK4g8,*&a!VZThHN8Hf8,*&a!VZThHN8Hf8,*&a!VZThHN8Hk8,PmP!!!&o
!;Lm@I.p/+!!!&o!;Lm@I.p/+!!!&o!;Lm@I.p/2!;ZZq!VZThHN8Hf8,*&a!VZThHN8Hf8,*&a!VZTh
HN8Hf8,*&a!VZThHN8Hf8,*&a!VZThHN8Hf8,*&a!VZThHN8Hf8,*&a!W)lq!;Lm@I.p/+!!!&o!;Lm@
I.p/+!!!&o!;Lm@I.p/+!!!&o!<.?BHN8Hf8,*&a!VZThHN8Hf8,*&a!VZThHN8Hf8,*&a!VZThHN8Hf
8,*&a!VZSE~>

%%EndBinary
grestore
np
259.191 117.485 mo
252.108 117.485 li
252.108 116.735 li
258.441 116.735 li
258.441 46.13 li
259.191 46.13 li
259.191 117.485 li
/2 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 87.642 171.75 ]ct
[8.25 0 0 72.75 163.716 53.62 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 11 
/H 97 
/M[11 0 0 -97 0 97 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 11 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 11 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 11 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 11 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
p>P^tlN$Y;p4MZ2p>P^tn,W@dp>P^tlN$Y;p4MZ2p>Pau!.skDpAjsH!9!U(!.sqF!!2cnpYc,1pk&U#
K(o<G!quZq!W_uR!9!U(!.t%Inc8IDs5<[)!J5mt!!!&m!;POQi:qp*Jq3UrrrMfnpu)83htVg+Jq3n%
q>^Kro`4dG!T;l1K)pRTp](9po`4dG!T;l1K)pRTp](9po`4dG!T;l2K*$[WJbT3F!VHHfi;qlopk&U!
JbT3F!VHHfi;qlopk&U!JbT3F!VHHfi;qlore(*#!J5mt!!!&m!;PLRi8=<^!J5mt!!!&m!;PLRi8=<^
!J5mt!!!&m!;PLRi8=<^!J5mt!!!&m!;PLRi8=<^!J5mt!!!&m!;PLRi8=<^!J5mt!!!&m!<(mSi;qlo
pk&U!JbT3F!VHHfi;qlopk&U!JbT3F!VHHfi;qlopk&U!JbT3F!VQKn!;PLRi8=<^!J5mt!!!&m!;PLR
i8=<^!J5mt!!!&m!;PLRi8=<^!J5mt!!!&s!;ccki;qlopk&U!JbT3F!VHHfi;qlopk&U!JbT3F!VHHf
i;qlopk&U!JbT3G!<Dfnpu)83htVg)Jq<[s!!2`mpu)83htVg)Jq<[s!!2`mpu)83htVg)Jq<e!rVup!
o`4dG!T;l1K)pRTp](9po`4dG!T;l1K)pRTp](9po`4dG!T;l1K*$XU!;QTp!VHHfi;qlopk&U!JbT3F
!VHHfi;qlopk&U!JbT3F!VHHfi;qloqL\m&K7\[L!!!&m!;PLRi8=<^!J5mt!!!&m!;PLRi8=<^!J5mt
!!!&m!;PLTi890>qL\g#JbT3F!VHHfi;qlopk&U!JbT3F!VHHfi;qlopk&U!JbT3F!VHHgi<%urhtVg)
Jq<[s!!2`mpu)83htVg)Jq<[s!!2`mpu)83htVg)Jq<[s!!2`mro*b5!T;l1K)pRTp](9po`4dG!T;l1
K)pRTp](9po`4dG!T;l1K)pRTp](9ppAk3npu)83htVg)Jq<[s!!2`mpu)83htVg)Jq<[s!!2`mpu)83
htVg)Jq<[s!!2utq>g<L!T;l1K)pRTp](9po`4dG!T;l1K)pRTp](9po`4dG!T;l1K)pRTp](9po`4dG
!T;l1K)pRTp](9po`4dG!T;l1K)pRTp](9po`4dG!T;l1K)pRTquHZq!!2`mpu)83htVg)Jq<[s!!2`m
pu)83htVg)Jq<[s!!2`mpu)83htVg)Jq<[s!!2`mpu)83htVg)Jq<[s!!2`mpu)83htVg)Jq<[s!!2`m
pu)83htr'*K)pRTp](9po`4dG!T;l1K)pRTp](9po`4dG!T;l1K)pRTp](9po`4dG!oVsgq1A^"JbT3F
!VHHfi;qlopk&U!JbT3F!VHHfi;qlopk&U!JbT3F!VHHhi</&ti8=<^!J5mt!!!&m!;PLRi8=<^!J5mt
!!!&m!;PLRi8=<^!J5mt!!!&m!<;$Si;qlopk&U!JbT3F!VHHfi;qlopk&U!JbT3F!VHHfi;qlopk&U!
JbT3F!VcZo!;PLRi8=<^!J5mt!!!&m!;PLRi8=<^!J5mt!!!&m!;PLRi8=<^!J5mt!!!&u!;QWii;qlo
pk&U!JbT3F!VHHfi;qlopk&U!JbT3F!VHHfi;qlopk&U!JbT3F!VHHfi;qlopk&U!JbT3F!VHHfi;qlo
pk&U!JbT3F!VHHfi;qlopk&U!Jc,TH!!!&m!;PLRi8=<^!J5mt!!!&m!;PLRi8=<^!J5mt!!!&m!;PLR
i8=<^!.k3%p](9po`4dG!T;l1K)pRTp](9po`4dG!T;l1K)pRTp](9po`4dG!T;l5KDgE'Jq<[s!!2`m
pu)83htVg)Jq<[s!!2`mpu)83htVg)Jq<[s!!2`mpu)83htVg)Jq<[s!!2orquHNNs5<[)!J5mt!!!&m
!.Y~>

%%EndBinary
grestore
np
260.148 117.11 mo
277.227 117.11 li
277.227 49.079 li
260.148 49.079 li
cp
1 .949 .8 rgb
ef
260.148 117.11 mo
277.227 117.11 li
277.227 49.079 li
260.148 49.079 li
cp
0 .69 .941 rgb
@
0 gry
IESYKG+Calibri-Bold*1 [-6.27e-7 -14.25 -14.25 6.27e-7 0 0 ]msf
273.208 94.71 mo
(Slot)
[-6.74036 -3.03528 -7.52393 0 ]ysh
324.108 124.13 mo
287.358 124.13 li
288.858 124.13 li
288.858 46.13 li
324.108 46.13 li
324.108 124.13 li
/2 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 87.642 171.75 ]ct
[38.25 0 0 79.5 198.966 46.87 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 51 
/H 106 
/M[51 0 0 -106 0 106 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 51 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 51 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 51 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 51 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&^B!L!g]6sH!!//]o)Jmo!X&T/mf`XmrrVEb"9AN*!X.rm!s/N)!p9Ob!WW5t!qcWo
!!!)H!!!)b!!<9+#R]o+!XAf/q#Ksc!!3'%mKE^t"p4o.kQ(V`l2UechuN6H!!;Hd"9AW2%i+LK"Vqa]
#6Fql!!36*#OMm&$47%@!<N&tnGiRk!M08q!<iiF*$6:%+S-]Z*Z>\"!s.]f"U##9$P*d<&-WOR%13:@
klC_biW-[m"Tel;(Eask,R#A5((13Fli7.i":#;Gr=ST4":ktL"p4)j!Wi?&m/R+erVup"l2UechuN6H
"p+u<)'U@Qn0S;a+;YCg!UKdj!X&]9&J5TD&d/dV$O$Rs!!`Q*!<E0$!<DWi"9AK(!!;Hd!!:IH"Tel<
)'UBq-3YY;(CL?HrW)Be"Tef2$kEs=&d/dX$O$Rs!!33%!U'L`!p]gd!rDuJ!!NE.%N-H:mj82`+;YCg
!UKdi!X&]9%h\7C";)1Q"TeT&mJm:i!!29`!!;Hd!!:IH"Tel<)'UBq-3YY;(CL?Hli71j"9o8F&ap>8
&J,<R!UB^e!WW8b!!33%!:9ad!m^iM!X9,P+sl\)"XG3,$NpLs!!E?+"q2"B&ap>8&J,<R!UB^e!WW8b
!!!)d!!!)]!:0[h!X9,P+sl\)"XG3,$NpLs!!NE,"q2"Smh,a8&.8XBlMq"g!!*)a!!!)d!!!)H!!NE.
%N-H:mj8/_+;YCg!!2Ed"Tef2$kEs=&d/dX$O$Rs!!33%!U'L`!p]gf!WW5J!!NE.%N-H:mj82`+;YCg
!UKdi!X&]9%h\7C!tc(P"TSSh!!33%!U'L`!p]gd!m^iI!X8`:)'UBq-3YY;(CL?Hli71j"9o8F&ap>8
&J,<R!UB^e!WW8c!!*'$lMpndcN"+M"qDLp-1</a,Tmm2"9Iih!!39+"q2"Smh,a8&.8XBlMptf!!29`
!!;Hd!!;?anGr=a"Tel<)'UBq-3YY;(CL?Hli71j"9o8F&ap>8&J,<R!UB^e!WW8n!;-<l!p]gd!m^iM
!X9,P+sl\)"XG3,$NpM(!;?Hs!X&]9%h\7C";)1Q"Tdoh!Wi?&kPtSalMpndo)RSH"Tel<)'UBq-3YY;
(CL?Hli71j"9o8F&ap>8&J,<R!VQNe!!33%!U'L`!p]gd!m^iM!X9,P+sm%3pEg%h+;YCg!UKdi!X&]9
%h\7C";)1Q"Tdoh!Wi?&kPtSapAjjd!!:IH"Tel<)'UBq-3YY;(CL?Hli71j"9o8F&c*.6&d/dX$O$Rs
!!33%!U'L`!p]gd!o*eJ!!NE.%N-H:mj82`+;YCg!UKdi!X&]9%h\7C";)1Q"Tdoh!Wi?&p]0ga!!;Hd
!!:IH"Tel<)'UBq-3YY;(CL?Hq>g*e"Tef2$kEs=&d/dX$O$Rs!!33%!U'L`!p]gd!qu]J!!NE.%N-H:
mj82`+;YCg!UKdi!X&]9%h\7C";)1Q"TeH"nc/^m!!29`!!;Hd!!:IH"Tel<)'UC*-M&Pf,Tmm2"9Iih
"Tef2$kEs=&d/dX$O$Rs!!33%!U'L`!rDuf!!!)H!!NE.%N-H:mj82`+;YCg!UKdi!X&]9%h\dRne)';
&.8XBlMptf!!29`!!;Hd!!;'Yn,NUn"qDLp-1</a,Tmm2"9Iih"Tef2$kEs=&d/dX$O$Rs!!33%!W2rb
!!!)d!!!)H!!NE.%N-H:mj82`+;YCg!WE)f!!NE,"q2"Smh,a8&.8XBlMptf!!29`!!;Hd!!<#teGoaS
"qDLp-1</a,Tmm2"9Iih"Tef2$kEs=&d/dX$O$S1!:Bgg!WW8b!!!)d!!!)H!!NE.%N-H:mj82`+;YCg
!UKdi!X&]9%h\7C";)1Q"Tdoh!Wi?&kPtYc!!)Bd!!:IH"Tel<)'UBq-3YY;(CL?Hli7.i"9o8F!"nZ4
";)1Q"Tdoh!Wi?&kPtSalMpndj8eNH"Tel<)'UBq-3YY;(CL?Hli71j"9o8F&ap>8&J,<R!UB^f!WW6$
kl:\blMpndcN"+M"qDLp-1</`,Tmm2"98Jh!!NE,"q2"Smh,a8&.8XBlMptf!!29`!!;Hd!Wi?%d/X=O
"qDLp-1</a,Tmm2"9Iih"Tef2$kEs=&d&^W$O$M2lMptf!!29`!!;Hd!!:IH!<NH-%N-H:mj82`+;YCg
!UKdi!X&]9%h\7C";)1Q"Tdoh!Wi?&kl:_a!p]gd!m^iM!X9,P+sl\)"XG3,$NpLs!!!''"9o8F&ap>8
&J,<R!UB^e!WW8b!!!)d!!!)a!:^'a!!NE.%N-H:mj82`+;YCg!UKdi!X&]9%h\7C";)1Q"Tdoh!Wi?&
oDnOa!!;Hd!!:IH"Tel<)'UBq-3YY;(CL?Hp&Oge"Tef2$kEs=&d/dX$O$Rs!!33%!U'L`!p]gd!qQEJ
!!NE.%N-H:mj82`+;YCg!UKdi!X&]9%h\7C";)1Q"Te;sp&G-q!!29`!!;Hd!!:IH"Tel<)'UC&-MJhj
,Tmm2"9Iih"Tef2$kEs=&d/dX$O$Rs!!33%!U'L`!qu]f!!!)H!!NE.%N-H:mj82`+;YCg!UKdi!X&]9
%h\XNp(@K?&.8XBlMptf!!29`!!;Hd!!:pUoDf$r"qDLp-1</a,Tmm2"9Iih"Tef2$kEs=&d/dX$O$Rs
!!33%!VcZb!!!)d!!!)H!!NE.%N-H:mj82`+;YCg!Vuff!!NE,"q2"Smh,a8&.8XBlMptf!!29`!!;Hd
!!;lpf`20W"qDLp-1</a,Tmm2"9Iih"Tef2$kEs=&d/dX$O$S-!:g*k!WW8b!!!)d!!!)H!!NE.%N-H:
r?h+_"XG3,$NpLs!!NE,"q2"Smh,a8&.8XBlMptf!!29`!!<#tnGiOjcN"+M"qDLp-1</a,Tmm2"9Iih
"Tef2$kEsL'(QY<&J,<R!UB^e!WW8b!!!)d!!!)Y!:Tsl!X9,P+sl\)"XG3,$NpLs!!NE,"q2"Smh,a8
&.8XBlMptf!!2utm/R+flMpndcN"+M"qDLp-1</a,Tmm2"9JK%mf3Lm"9o8F&ap>8&J,<R!UB^e!WW8b
!!!)d!!!)t!7_&Q!X9,P+sl\)"XG3,$NpLs!!NE,"q2"Smh,a8&.8XBrW)?d!Wi?&kPtSalMpndcN"+M
"qDLp-1</a,Tmm2"9Iih"Tef2$kEs=&d/dX$O$Rs!!33%!U'Lb!WW5f!!!)H!!NE.%N-H:mj82`+;YCg
!UKdh!X&]9%fd41&d/dX$O$Rs!!33%!U'L`!p]gd!os@J!!NE.%N-H:mj82`+;YCg!UKdi!X&]9%h\7C
";)1Q"Tdoh!s/H'!9jI`!p]gd!m^iM!X9,P+sl\)"=,*+$NpG1li71j"9o8F&ap>8&J,<R!UB^e!WW8b
!!!)d!!33%!7:cM!X9,P+sl\)"XG3,$NpLs!!NE,"q2"Smh,^7&.8XA!UB^e!WW8b!!!)d!!!)H!!*-*
!tH1m-1</a,Tmm2"9Iih"Tef2$kEs=&d/dX$O$Rs!!33%!U0Rb!!;Hd!!:IH"Tel<)'UBq-3YY;(CL?H
li7"e"9\o;%h\7C";)1Q"Tdoh!Wi?&kPtSalMpndkQ(,Qp](I!"qDLp-1</a,Tmm2"9Iih"Tef2$kEs=
&d/dX$O$Rs!!33%!V?Bb!!!)d!!!)H!!NE.%N-H:mj82`+;YCg!VQNf!!NE,"q2"Smh,a8&.8XBlMptf
!!29`!!;Hd!!;`lh#IT["qDLp-1</a,Tmm2"9Iih"Tef2$kEs=&d/dX$O$S)!;6Bo!WW8b!!!)d!!!)H
!!NE.%N-H:q'Ph_"XG3,$NpLs!!NE,"q2"Smh,a8&.8XBlMptf!!29`!!;lpo`+sncN"+M"qDLp-1</a
,Tmm2"9Iih"Tef2$kEsH'(uq@&J,<R!UB^e!WW8b!!!)d!!!)U!;$6p!X9,P+sl\)"XG3,$NpLs!!NE,
"q2"Smh,a8&.8XBlMptf!!2ipnGiOjlMpndcN"+M"qDLp-1</a,Tmm2"9J?!o)Jpq"9o8F&ap>8&J,<R
!UB^e!WW8b!!!)d!!!)p!8.>U!X9,P+sl\)"XG3,$NpLs!!NE,"q2"Smh,a8&.8XBq>g'd!Wi?&kPtSa
lMpndcN"+M"qDLp-2f1^-3YY;(CL?Hli71j"9o8F&ap>8&J,<R!UB^e!WW8b!!!)t!:^$h!m^iM!X9,P
+sl\)"XG3,$NpLs!!NE,"q2"SrY"c7";)1Q"Tdoh!Wi?&kPtSalMpndhuN6H"Tel<)'UBq-3YY;(CL?H
li71j"9o8F&ap>8&J,<R!UB^e!WW9!!:9ad!p]gd!m^iM!X9,P+sl\)"XG3,$NpM0!:Kmk!X&]9%h\7C
";)1Q"Tdoh!Wi?&kPtSalMpndqZ,.H"Tel<)'UBq-3YY;(CL?Hli71j"9o8F&ap>8&J,<R!WE)e!!33%
!U'L`!p]gd!m^iM!X9,P+sl\)"XG3,$NpLs!!NE,"q2"Smh,a8&.8XBlMptf!!29`!Wi?%m/R+fcN"+M
"qDLp-1</a,Tmm2"9Iih"9J]1$kE=Mmh,a8&.8XBlMptf!!29`!!;Hd!!;3]li71j"qDLp-1</a,Tmm2
"9Iih"Tef2$kEs=&d/dX$O$Rs!!<9&!<D?a!!;Hd!!:IH"Tel<)'UBq-3PS:(CL?G!UKdi!X&]9%h\7C
";)1Q"Tdoh!Wi?&kPtSalMptf!!(CH"Tel<)'UBq-3YY;(CL?Hli71j"9o8F&ap>7&J,<R!!2Bc!Wi?&
kPtSalMpndcN!tI"p5>Q+sl\)"XG3,$NpLs!!NE,"q2"Smh,a8&.8XBlMptf!!2<a!<<2e!!!)H!!NE.
%N-H:mj82`+;YCg!UKdd!X&W1$kEs=&d/dX$O$Rs!!33%!U'L`!p]gd!pBXS!;HNt!X9,P+sl\)"XG3,
$NpLs!!NE,"q2"Smh,a8&.8XBlMptf!!2]lo`+snlMpndcN"+M"qDLp-1</a,Tmm2"9J2rpAb?u"9o8F
&ap>8&J,<R!UB^e!WW8b!!!)d!!!)l!8RVY!X9,P+sl\)"XG3,$NpLs!!NE,"q2"Smh,a8&.8XBp&Odd
!Wi?&kPtSalMpndcN"+M"qDLp-2An^-3YY;(CL?Hli71j"9o8F&ap>8&J,<R!UB^e!WW8b!!!)p!;-<l
!m^iM!X9,P+sl\)"XG3,$NpLs!!NE,"q2"Sq@`K7";)1Q"Tdoh!Wi?&kPtSalMpndg]6sH"Tel<)'UBq
-3YY;(CL?Hli71j"9o8F&ap>8&J,<R!UB^e!WW8r!:^$h!p]gd!m^iM!X9,P+sl\)"XG3,$NpM,!:p0o
!X&]9%h\7C";)1Q"Tdoh!Wi?&kPtSalMpndpAikH"Tel<)'UBq-3YY;(CL?Hli71j"9o8F&ap>8&J,<R
!Vufe!!33%!U'L`!p]gd!m^iM!X9,P+sm17o-OVd+;YCg!UKdi!X&]9%h\7C";)1Q"Tdoh!Wi?&kPtSa
qZ--d!!:IH"Tel<)'UBq-3YY;(CL?Hli71j"9o8F&cNF6&d/dX$O$Rs!!33%!U'L`!p]gd!oO(J!!NE.
%N-H:mj82`+;YCg!UKdi!X&]9%h\7C";)1Q"Tdoh!Wi?&quH*a!!;Hd!!:IH"Tel<)'UBq-3YY;(CL?H
rW)Be"Tef2$kEs=&d/dX$O$Rs!!33%!U'L`!p]gd!rDuJ!!NE.%N-H:mj82`+;YCg!UKdi!X&]9%h\7C
";)1Q"TeT&mJm:i!!29`!!;Hd!!:IH"Tel<)'UBq-3YY;(CL?Hli71j"9o8F&ap>8&J,<R!UB^e!WW8b
!!33%!:9ad!m^iM!X9,P+sl\)"XG3,$NpLs!!E?+"q2"B&ap>8&J,<R!UB^e!WW8b!!!)d!!!)]!:0[h
!X9,P+sl_*"skN:(CL?Hli71j"9o8F&b$D:&.oE\"Tdoh!s/H'!U]pf!W;uu!p]gd!m^iM!X9,O+=-D%
"=#!)$O$M2li7.i":,DGm1BF2$O-b"!!!*!!!!&h!!!&^!!33%!7:cM!<`cH*[0tr"X"d"$3L=p!!E<+
$P!a;%g3IU$O[+<!pTac!pBUa!Oi%0!<WE1&/H,O)$Lfj%g`@>lMq"g"pbS($j6qE#6k:o!!<6%!!2Ti
!s&B'!!*'$[f?L3"pk\+%L!:N$O?n;l2Uqf"9o#8mfin""p>&0jT+]L!<N;J!:^'`!!<6'!sIuq!sJf/
!U0Rc!<N;g"9JZ+!TsF_!qlWg!!!),!<3)e!ri;m!:g-W!oa4I!oa4S!qubT!.k3&!.k3&!.k3T!.Y~>

%%EndBinary
grestore
np
288.858 124.13 mo
287.358 124.13 li
287.358 46.13 li
288.858 46.13 li
288.858 124.13 li
/2 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 87.642 171.75 ]ct
[1.92157 0 0 78.48 199.476 47.38 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 8 
/H 327 
/M[8 0 0 -327 0 327 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 8 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 8 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 8 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 8 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
i;eH0JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcOa0JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLl4J,~>

%%EndBinary
grestore
np
295.578 117.11 mo
312.657 117.11 li
312.657 49.079 li
295.578 49.079 li
cp
1 .949 .8 rgb
ef
295.578 117.11 mo
312.657 117.11 li
312.657 49.079 li
295.578 49.079 li
cp
0 .69 .941 rgb
@
0 gry
IESYKG+Calibri-Bold*1 [-6.27e-7 -14.25 -14.25 6.27e-7 0 0 ]msf
308.678 94.71 mo
(Slot)
[-6.74036 -3.03528 -7.52393 0 ]ysh
1.5 lw
1 lc
1 lj
259.598 168.49 mo
259.598 3.73001 li
.357 .608 .835 rgb
@
313.478 145.71 mo
313.478 3.73001 li
@
/IESYKH+SimSun-GBK-EUC-H-Identity-H findfont [12.025 0 0 -12.025 0 0 ]msf
282.258 88.96 mo
(\001\002)sh
.75075 lw
267.208 17.94 mo
305.858 18.11 li
@
267.888 20.71 mo
259.588 17.9 li
267.908 15.17 li
267.888 20.71 li
cp
ef
305.178 15.34 mo
313.478 18.15 li
305.148 20.88 li
305.178 15.34 li
cp
ef
272.888 29.96 mo
300.068 30.09 li
300.178 6.09 li
272.998 5.95999 li
272.888 29.96 li
cp
1 gry
ef
278.858 14.54 mo
278.818 14.74 li
278.708 14.89 li
278.558 14.97 li
278.368 15 li
277.828 15 li
277.708 14.99 277.608 14.98 277.528 14.96 cv
277.298 14.83 li
277.228 14.77 277.168 14.69 277.098 14.59 cv
277.038 14.49 276.958 14.35 276.878 14.19 cv
275.318 11.23 li
275.228 11.05 275.138 10.86 275.048 10.66 cv
274.948 10.45 274.868 10.26 274.798 10.06 cv
274.788 10.06 li
274.798 10.3 274.808 10.53 274.808 10.76 cv
274.818 11 274.818 11.24 274.818 11.49 cv
274.798 14.79 li
274.778 14.88 li
274.678 14.94 li
274.508 14.98 li
274.428 14.99 274.338 15 274.218 15 cv
274.098 15 274.008 14.99 273.928 14.98 cv
273.758 14.94 li
273.668 14.87 li
273.648 14.79 li
273.668 9.11002 li
273.668 8.95001 273.718 8.84 273.808 8.76001 cv
273.898 8.69 274.008 8.64999 274.138 8.64999 cv
274.828 8.64999 li
274.948 8.64999 275.058 8.66 275.138 8.69 cv
275.368 8.79001 li
275.548 9 li
275.608 9.08002 275.668 9.19 275.728 9.32001 cv
276.948 11.63 li
277.018 11.77 277.088 11.91 277.158 12.05 cv
277.228 12.18 277.298 12.32 277.358 12.45 cv
277.428 12.59 277.488 12.72 277.548 12.85 cv
277.608 12.98 277.668 13.11 277.728 13.24 cv
277.738 13.24 li
277.728 13.01 277.718 12.78 277.718 12.53 cv
277.708 12.28 277.708 12.05 277.708 11.82 cv
277.728 8.86002 li
277.758 8.77002 li
277.858 8.70001 li
278.038 8.66 li
278.108 8.64999 278.208 8.64999 278.318 8.64999 cv
278.428 8.64999 278.528 8.64999 278.598 8.66 cv
278.778 8.70999 li
278.858 8.77002 li
278.878 8.86002 li
cp
284.738 12.63 mo
284.738 13 284.688 13.34 284.588 13.64 cv
284.488 13.95 284.338 14.21 284.138 14.43 cv
283.938 14.65 283.688 14.82 283.388 14.94 cv
283.088 15.06 282.738 15.12 282.338 15.12 cv
281.948 15.12 281.618 15.06 281.328 14.95 cv
281.038 14.84 280.808 14.69 280.618 14.48 cv
280.428 14.27 280.288 14.02 280.198 13.72 cv
280.108 13.42 280.068 13.08 280.068 12.7 cv
280.068 12.32 280.118 11.99 280.218 11.68 cv
280.318 11.37 280.468 11.11 280.668 10.89 cv
280.868 10.67 281.118 10.5 281.418 10.38 cv
281.718 10.26 282.068 10.2 282.468 10.21 cv
282.858 10.21 283.198 10.26 283.478 10.37 cv
283.768 10.48 284.008 10.63 284.188 10.84 cv
284.378 11.05 284.518 11.3 284.608 11.6 cv
284.698 11.9 284.738 12.24 284.738 12.63 cv
cp
283.468 12.67 mo
283.468 12.46 283.458 12.26 283.428 12.08 cv
283.388 11.9 283.328 11.74 283.248 11.61 cv
283.168 11.47 283.068 11.37 282.928 11.29 cv
282.798 11.22 282.628 11.18 282.418 11.18 cv
282.238 11.18 282.078 11.21 281.938 11.28 cv
281.808 11.34 281.688 11.44 281.598 11.57 cv
281.518 11.7 281.448 11.85 281.398 12.03 cv
281.358 12.21 281.338 12.42 281.338 12.65 cv
281.328 12.86 281.348 13.06 281.388 13.24 cv
281.418 13.42 281.478 13.58 281.558 13.71 cv
281.638 13.85 281.738 13.95 281.878 14.02 cv
282.018 14.1 282.188 14.14 282.388 14.14 cv
282.568 14.14 282.728 14.11 282.868 14.04 cv
283.008 13.97 283.118 13.88 283.208 13.75 cv
283.298 13.62 283.358 13.47 283.408 13.29 cv
283.448 13.11 283.468 12.9 283.468 12.67 cv
cp
289.698 14.87 mo
289.678 14.96 li
289.598 15.02 li
289.438 15.06 li
289.368 15.06 289.288 15.07 289.188 15.07 cv
289.088 15.07 288.998 15.06 288.938 15.06 cv
288.778 15.02 li
288.688 14.96 li
288.658 14.87 li
288.668 14.39 li
288.438 14.63 288.208 14.81 287.958 14.94 cv
287.708 15.08 287.438 15.14 287.138 15.14 cv
286.808 15.14 286.528 15.07 286.298 14.94 cv
286.068 14.81 285.878 14.64 285.738 14.42 cv
285.598 14.2 285.488 13.95 285.428 13.66 cv
285.358 13.36 285.328 13.06 285.328 12.73 cv
285.338 12.35 285.378 12 285.458 11.69 cv
285.548 11.38 285.668 11.12 285.828 10.9 cv
285.988 10.68 286.188 10.52 286.428 10.4 cv
286.668 10.28 286.938 10.23 287.248 10.23 cv
287.488 10.23 287.718 10.28 287.908 10.38 cv
288.108 10.48 288.308 10.63 288.498 10.82 cv
288.508 8.45999 li
288.538 8.37 li
288.638 8.31 li
288.828 8.27002 li
288.908 8.26001 288.998 8.25 289.118 8.25 cv
289.248 8.26001 289.338 8.26001 289.418 8.27002 cv
289.608 8.31 li
289.708 8.38 li
289.728 8.47 li
cp
288.498 11.96 mo
288.318 11.74 288.158 11.57 287.988 11.45 cv
287.828 11.33 287.668 11.27 287.488 11.27 cv
287.328 11.27 287.188 11.31 287.078 11.39 cv
286.958 11.47 286.868 11.57 286.798 11.71 cv
286.728 11.84 286.668 11.99 286.638 12.15 cv
286.598 12.32 286.588 12.48 286.588 12.66 cv
286.578 12.84 286.598 13.02 286.628 13.19 cv
286.658 13.36 286.698 13.52 286.768 13.65 cv
286.828 13.79 286.918 13.9 287.028 13.98 cv
287.138 14.06 287.278 14.1 287.448 14.1 cv
287.698 14.07 li
287.938 13.95 li
288.028 13.89 288.108 13.82 288.198 13.73 cv
288.288 13.64 288.388 13.53 288.488 13.4 cv
cp
294.858 12.59 mo
294.858 12.74 294.818 12.85 294.758 12.92 cv
294.688 13 294.598 13.03 294.478 13.03 cv
291.828 13.02 li
291.828 13.2 291.848 13.37 291.888 13.52 cv
291.938 13.68 291.998 13.8 292.098 13.91 cv
292.198 14.02 292.318 14.1 292.468 14.15 cv
292.618 14.21 292.798 14.24 293.008 14.24 cv
293.228 14.24 293.418 14.23 293.578 14.2 cv
293.738 14.17 293.878 14.13 293.998 14.1 cv
294.118 14.06 294.218 14.02 294.298 13.99 cv
294.488 13.95 li
294.558 13.97 li
294.608 14.03 li
294.638 14.15 li
294.638 14.35 li
294.638 14.54 li
294.618 14.67 li
294.588 14.76 li
294.538 14.83 li
294.368 14.92 li
294.268 14.96 294.148 15 294.008 15.03 cv
293.858 15.07 293.688 15.1 293.498 15.13 cv
293.308 15.15 293.108 15.17 292.898 15.17 cv
292.508 15.16 292.168 15.11 291.878 15.02 cv
291.588 14.92 291.348 14.77 291.148 14.57 cv
290.958 14.37 290.808 14.12 290.718 13.81 cv
290.618 13.51 290.578 13.16 290.578 12.75 cv
290.578 12.36 290.628 12.01 290.738 11.7 cv
290.838 11.39 290.988 11.13 291.178 10.91 cv
291.368 10.7 291.608 10.53 291.878 10.42 cv
292.158 10.31 292.468 10.25 292.808 10.25 cv
293.178 10.26 293.488 10.31 293.748 10.42 cv
294.008 10.53 294.218 10.68 294.378 10.87 cv
294.548 11.06 294.668 11.29 294.748 11.55 cv
294.818 11.81 294.858 12.09 294.858 12.4 cv
cp
293.668 12.24 mo
293.678 11.89 293.608 11.62 293.458 11.42 cv
293.318 11.22 293.088 11.12 292.778 11.12 cv
292.618 11.12 292.488 11.15 292.368 11.21 cv
292.258 11.27 292.158 11.35 292.078 11.44 cv
292.008 11.54 291.948 11.66 291.908 11.8 cv
291.858 11.93 291.838 12.07 291.828 12.23 cv
cp
299.648 15.07 mo
299.648 15.41 299.608 15.68 299.548 15.9 cv
299.498 16.11 299.408 16.28 299.288 16.43 cv
299.168 16.57 299.018 16.68 298.838 16.75 cv
298.658 16.83 298.448 16.86 298.208 16.86 cv
298.068 16.86 297.958 16.85 297.868 16.83 cv
297.768 16.81 297.698 16.8 297.658 16.78 cv
297.568 16.7 li
297.538 16.6 li
297.528 16.47 li
297.518 16.29 li
297.528 16.06 li
297.558 15.92 li
297.598 15.84 li
297.668 15.82 li
297.768 15.83 li
297.928 15.84 li
298.148 15.81 li
298.298 15.68 li
298.338 15.63 298.368 15.55 298.388 15.46 cv
298.408 15.37 298.418 15.23 298.418 15.04 cv
298.438 10.57 li
298.468 10.48 li
298.568 10.42 li
298.748 10.38 li
298.828 10.37 298.928 10.37 299.048 10.37 cv
299.168 10.37 299.268 10.37 299.348 10.38 cv
299.538 10.42 li
299.638 10.49 li
299.668 10.57 li
cp
299.768 9.09 mo
299.768 9.34 299.718 9.51001 299.618 9.60001 cv
299.518 9.70001 299.328 9.73999 299.048 9.73999 cv
298.778 9.73999 298.588 9.69 298.488 9.60001 cv
298.398 9.51001 298.348 9.35001 298.348 9.11002 cv
298.348 8.86002 298.398 8.69 298.498 8.59 cv
298.608 8.5 298.788 8.45001 299.068 8.45001 cv
299.338 8.45001 299.528 8.5 299.618 8.59 cv
299.718 8.69 299.768 8.85001 299.768 9.09 cv
cp
0 gry
f
1.5 lw
341.848 145.46 mo
341.848 3.73001 li
.357 .608 .835 rgb
@
399.918 145.46 mo
399.918 3.73001 li
@
423.388 117.11 mo
446.166 117.11 li
446.166 32.071 li
423.388 32.071 li
cp
.565 .667 .859 rgb
ef
.75075 lw
2 lc
0 lj
423.388 117.11 mo
446.166 117.11 li
446.166 32.071 li
423.388 32.071 li
cp
0 .439 .753 rgb
@
0 gry
IESYKG+Calibri-Bold*1 [-6.27e-7 -14.25 -14.25 6.27e-7 0 0 ]msf
439.458 96.33 mo
(Beacon)
[-7.49557 -7.48132 -6.75455 -5.98499 -7.49542 0 ]ysh
1 lc
1 lj
349.468 17.9 mo
392.298 17.9 li
.357 .608 .835 rgb
@
350.158 20.67 mo
341.848 17.9 li
350.158 15.13 li
350.158 20.67 li
cp
ef
391.608 15.13 mo
399.918 17.9 li
391.608 20.67 li
391.608 15.13 li
cp
ef
357.348 29.9 mo
384.428 29.9 li
384.428 5.89999 li
357.348 5.89999 li
cp
1 gry
ef
363.248 14.45 mo
363.208 14.65 li
363.098 14.8 li
362.948 14.88 li
362.758 14.91 li
362.218 14.91 li
362.098 14.91 361.998 14.9 361.918 14.88 cv
361.688 14.75 li
361.618 14.69 361.548 14.61 361.488 14.51 cv
361.418 14.41 361.348 14.27 361.268 14.11 cv
359.698 11.16 li
359.598 10.98 359.508 10.79 359.418 10.59 cv
359.318 10.38 359.238 10.19 359.158 9.98999 cv
359.148 9.98999 li
359.168 10.23 359.178 10.46 359.178 10.7 cv
359.188 10.93 359.188 11.17 359.188 11.42 cv
359.188 14.72 li
359.168 14.81 li
359.068 14.87 li
358.888 14.92 li
358.818 14.93 358.718 14.93 358.608 14.93 cv
358.488 14.93 358.398 14.93 358.318 14.92 cv
358.148 14.87 li
358.058 14.81 li
358.038 14.72 li
358.038 9.04001 li
358.038 8.89001 358.078 8.77002 358.168 8.70001 cv
358.258 8.62 358.368 8.58002 358.498 8.58002 cv
359.188 8.58002 li
359.308 8.58002 359.418 8.59 359.498 8.62 cv
359.728 8.72 li
359.918 8.92001 li
359.968 9.01001 360.028 9.12 360.098 9.23999 cv
361.328 11.55 li
361.398 11.69 361.468 11.83 361.538 11.96 cv
361.608 12.1 361.678 12.23 361.738 12.37 cv
361.808 12.51 361.868 12.64 361.928 12.77 cv
361.988 12.9 362.048 13.03 362.108 13.16 cv
362.118 13.16 li
362.108 12.93 362.098 12.69 362.098 12.45 cv
362.088 12.2 362.088 11.96 362.088 11.74 cv
362.088 8.77002 li
362.118 8.69 li
362.218 8.62 li
362.398 8.58002 li
362.468 8.57001 362.568 8.56 362.678 8.56 cv
362.788 8.56 362.888 8.57001 362.958 8.58002 cv
363.138 8.62 li
363.218 8.69 li
363.248 8.77002 li
cp
369.118 12.51 mo
369.118 12.89 369.068 13.22 368.968 13.53 cv
368.868 13.84 368.718 14.1 368.528 14.32 cv
368.328 14.54 368.078 14.71 367.778 14.83 cv
367.478 14.95 367.128 15.01 366.728 15.01 cv
366.338 15.01 365.998 14.96 365.718 14.85 cv
365.428 14.75 365.188 14.59 365.008 14.38 cv
364.818 14.18 364.678 13.93 364.588 13.63 cv
364.488 13.33 364.448 12.99 364.448 12.6 cv
364.448 12.23 364.498 11.89 364.598 11.58 cv
364.698 11.28 364.848 11.01 365.038 10.79 cv
365.238 10.57 365.488 10.4 365.788 10.28 cv
366.088 10.16 366.438 10.1 366.838 10.1 cv
367.228 10.1 367.568 10.15 367.848 10.26 cv
368.138 10.37 368.378 10.52 368.558 10.73 cv
368.748 10.93 368.888 11.18 368.978 11.48 cv
369.068 11.78 369.118 12.13 369.118 12.51 cv
cp
367.848 12.56 mo
367.848 12.35 367.828 12.15 367.798 11.97 cv
367.768 11.79 367.708 11.63 367.628 11.5 cv
367.548 11.37 367.438 11.26 367.298 11.19 cv
367.168 11.11 366.998 11.07 366.788 11.07 cv
366.608 11.07 366.448 11.11 366.308 11.17 cv
366.178 11.24 366.058 11.34 365.978 11.47 cv
365.888 11.6 365.818 11.75 365.778 11.93 cv
365.738 12.11 365.708 12.32 365.708 12.55 cv
365.708 12.76 365.728 12.96 365.768 13.14 cv
365.798 13.32 365.858 13.48 365.938 13.61 cv
366.018 13.75 366.128 13.85 366.258 13.92 cv
366.398 14 366.568 14.03 366.768 14.03 cv
366.958 14.03 367.118 14 367.258 13.93 cv
367.388 13.87 367.508 13.77 367.588 13.64 cv
367.678 13.52 367.748 13.36 367.788 13.18 cv
367.828 13 367.848 12.79 367.848 12.56 cv
cp
374.088 14.74 mo
374.068 14.83 li
373.988 14.89 li
373.828 14.92 li
373.758 14.93 373.678 14.93 373.578 14.93 cv
373.478 14.93 373.388 14.93 373.328 14.92 cv
373.168 14.89 li
373.078 14.83 li
373.048 14.74 li
373.048 14.25 li
372.828 14.49 372.588 14.68 372.348 14.81 cv
372.098 14.95 371.828 15.01 371.528 15.01 cv
371.198 15.01 370.918 14.95 370.688 14.82 cv
370.458 14.69 370.268 14.52 370.128 14.3 cv
369.978 14.08 369.878 13.83 369.808 13.54 cv
369.748 13.25 369.708 12.94 369.708 12.62 cv
369.708 12.23 369.748 11.88 369.838 11.57 cv
369.918 11.26 370.038 11 370.198 10.78 cv
370.358 10.56 370.558 10.39 370.798 10.28 cv
371.028 10.16 371.308 10.1 371.618 10.1 cv
371.858 10.1 372.078 10.15 372.278 10.25 cv
372.478 10.35 372.678 10.5 372.868 10.69 cv
372.868 8.33002 li
372.898 8.23999 li
372.998 8.17999 li
373.178 8.13 li
373.258 8.12 373.358 8.12 373.478 8.12 cv
373.598 8.12 373.698 8.12 373.778 8.13 cv
373.968 8.17999 li
374.058 8.23999 li
374.088 8.33002 li
cp
372.868 11.83 mo
372.698 11.6 372.528 11.44 372.368 11.32 cv
372.208 11.2 372.038 11.14 371.858 11.14 cv
371.698 11.14 371.558 11.18 371.448 11.26 cv
371.328 11.34 371.238 11.45 371.168 11.58 cv
371.098 11.71 371.048 11.86 371.008 12.03 cv
370.978 12.19 370.958 12.36 370.958 12.53 cv
370.958 12.72 370.978 12.89 371.008 13.07 cv
371.038 13.24 371.078 13.39 371.148 13.53 cv
371.218 13.66 371.308 13.77 371.418 13.85 cv
371.528 13.93 371.668 13.97 371.838 13.97 cv
372.078 13.94 li
372.328 13.82 li
372.578 13.6 li
372.668 13.51 372.768 13.4 372.868 13.27 cv
cp
379.238 12.43 mo
379.238 12.58 379.198 12.69 379.138 12.76 cv
379.068 12.83 378.978 12.87 378.858 12.87 cv
376.208 12.87 li
376.208 13.06 376.228 13.22 376.268 13.38 cv
376.318 13.53 376.388 13.66 376.478 13.76 cv
376.578 13.87 376.698 13.95 376.858 14 cv
377.008 14.06 377.188 14.09 377.398 14.09 cv
377.608 14.09 377.798 14.07 377.968 14.04 cv
378.128 14.01 378.268 13.97 378.388 13.94 cv
378.508 13.9 378.608 13.87 378.678 13.83 cv
378.868 13.79 li
378.948 13.81 li
378.998 13.87 li
379.018 13.99 li
379.028 14.19 li
379.028 14.38 li
379.008 14.51 li
378.978 14.6 li
378.928 14.67 li
378.758 14.76 li
378.658 14.8 378.538 14.84 378.398 14.87 cv
378.248 14.91 378.078 14.94 377.888 14.97 cv
377.698 15 377.498 15.01 377.288 15.01 cv
376.898 15.01 376.558 14.97 376.268 14.87 cv
375.978 14.77 375.728 14.62 375.538 14.42 cv
375.338 14.22 375.198 13.97 375.098 13.67 cv
375.008 13.37 374.958 13.01 374.958 12.61 cv
374.958 12.22 375.008 11.87 375.108 11.56 cv
375.208 11.25 375.358 10.98 375.548 10.77 cv
375.738 10.55 375.968 10.39 376.248 10.27 cv
376.518 10.16 376.828 10.1 377.178 10.1 cv
377.538 10.1 377.858 10.16 378.108 10.26 cv
378.368 10.37 378.588 10.52 378.748 10.71 cv
378.918 10.9 379.038 11.13 379.118 11.39 cv
379.198 11.65 379.238 11.93 379.238 12.24 cv
cp
378.038 12.08 mo
378.048 11.73 377.978 11.46 377.838 11.27 cv
377.688 11.07 377.458 10.97 377.148 10.97 cv
376.988 10.97 376.858 11 376.738 11.06 cv
376.628 11.12 376.528 11.2 376.448 11.3 cv
376.378 11.4 376.318 11.51 376.278 11.65 cv
376.238 11.78 376.208 11.93 376.208 12.08 cv
cp
383.938 14.74 mo
383.908 14.82 li
383.808 14.88 li
383.628 14.92 li
383.548 14.93 383.448 14.93 383.328 14.93 cv
383.208 14.93 383.108 14.93 383.028 14.92 cv
382.838 14.88 li
382.738 14.82 li
382.708 14.74 li
382.708 10.39 li
382.738 10.3 li
382.838 10.24 li
383.028 10.2 li
383.108 10.19 383.208 10.19 383.328 10.19 cv
383.448 10.19 383.548 10.19 383.628 10.2 cv
383.808 10.24 li
383.908 10.3 li
383.938 10.39 li
cp
384.038 8.91 mo
384.038 9.14999 383.978 9.32001 383.878 9.42001 cv
383.778 9.51001 383.598 9.56 383.318 9.56 cv
383.048 9.56 382.858 9.51001 382.758 9.42001 cv
382.668 9.33002 382.618 9.17001 382.618 8.92999 cv
382.618 8.67999 382.668 8.51001 382.768 8.41 cv
382.868 8.32001 383.058 8.27002 383.328 8.27002 cv
383.608 8.27002 383.788 8.32001 383.888 8.41 cv
383.988 8.5 384.038 8.67001 384.038 8.91 cv
cp
0 gry
f
.357 .608 .835 rgb
/IESYKH+SimSun-GBK-EUC-H-Identity-H findfont [12.025 0 0 -12.025 0 0 ]msf
320.608 88.96 mo
(\001\002)sh
166.858 138.37 mo
251.298 138.37 li
@
167.608 141.39 mo
158.548 138.37 li
167.608 135.35 li
167.608 141.39 li
cp
ef
250.538 135.35 mo
259.598 138.37 li
250.538 141.39 li
250.538 135.35 li
cp
ef
gsave
188.738 139.79 mo
226.722 139.79 li
226.722 120.798 li
188.738 120.798 li
188.738 139.79 li
clp
0 gry
%ADOBeginSubsetFont: TimesNewRomanPS-ItalicMT Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /TimesNewRomanPS-ItalicMT def
/FontInfo 5 dict dup begin
/ItalicAngle 0 def
/FSType 8 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 101 /e put
dup 106 /j put
dup 108 /l put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 116 /t put
def
/FontBBox {-498 -307 1333 1023} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
8 dict dup begin
/.notdef <1C60D8A8C9B6FF86FBD1638113E4B58C0B5F39100186722805B704
AA3988900AFCFF05DD> |-
/e <1C60D8A8C9B77FE2CEBC851BC1D55BEFCC6636F8B07C124AAAAD6AC237A2
E0178B712156D556EE6FB45645CC6CBEAF8E97CBE4F832E2F621B213660DC4F9
A0F0631BE4B937D282930FF5CB48932FE4C3118EA58028F6EA53582C8DE2452B
3135816834C0E4D947BA5BD58F1D5AB9E28423127BFB8D26FB6EEF3AB8E9B9D2
410DD3AF694FFEBD7B7FE682E5B937ACC2C6A43489D3F9EF3944E87BAD6842E7
160B3BC59BD87C15EE67EE949D19E2030F058D91390B17854C6C> |-
/j <1C60D8A8C9B854D0F4659B7FFADF9957DA68B07B6E521A3DF198F53722C1
EFCEAF10026DF73D4410F9B17662445DB6D83FCD5219002D838CE9DCB002E084
6F17BE49CA01BE8786E4F26F674D269761A97042F7EFEAFEE3C5B2BB4C341652
31ED8551E3DA0C24B7313736B99DA84705B3ED16D047EB9A35258AE26E18D6CF
2C6B83E7F0C4D2680AC8F3A24A06D908DFCA82AD4DED6865586C5C902373DF8D
C54F895E34149677C3F663323010C38B35E7F6C07F0B821D00A4DAC9EDFDFD4E
B4C4ED970BDCEF5168A762B8982DCC18EA83CE45E12A83029A091E9B3F36FD30
42E8F7> |-
/l <1C60D8A8C9B854D0F428CB56497DB3751CBCE205181DF8576DE7D01F56E6
658D50F3A55031CCFD90149657F347A7B8FBDA51BC713C50D2F7103D339A28E1
EA0AB3CDF3E8F9F3065FE59E41F46C69A0F86CC9ACCBC34698A8315C973C6386
81FD1CB4E96CC4A31C9059B1294515AA76EDF0278C3082EAC668C9E35B588539
A6BE> |-
/o <1C60D8A8C9B7A73DB6821681307BB58AF24E53259C166A4EBACA0E69F5B8
B042F6E6706D71FE2C4006799F0D83733098F02E11647B564DF12A496B06EAD6
56E6D297AE5BF88AE7615ABAF60F522DC6D667D6E703D83FA4EACD5E655591C5
F794B5601A90C6028B31DB06F3BFF28E5BAA1BCA504CD90A443D934E8ED98B1E
48DB90AD3B6CC51A1E1FA2EC8D3518D7436B0D1C> |-
/r <1C60D8A8C9B7361F365886EBFECCD8473E83DA137EE4FF5446DC34EB9670
2032A1EC6B4D0B80987318881760797A2A703BDB19E24F1B10629EC5D3297F26
5B468217AF43A693E97671CE6B3D388E20C056A563C2FC1423CD8BC8B3EC8EC0
9DC18882E406798A4EAEA9C53CBBD9B8E9BC3831F4F1A6A626135124B3F0C4D3
2FC8873A1B53DB02AD4C1E42492228869E79B5F7AA6DA878613B470F5F6920F4
2F08D0203966> |-
/s <1C60D8A8C9B7361F025C7C4D0303D6CE893F51D869BCCC57F238FED481B9
6AB0D6B406042D64909B5B15A441860ACAD524570DEF75E4EA76578FD91FD71A
8077FF6E23AAE6F0974095E4C999A83B7E16B60FBB6A5AE152855056216BA421
C7B30818AA939C216FDAB05C60988B0DD7002BC261826362CD346E3A6F514F9F
1431C9C48DFC0F46570808CB49BD9B3149C4A3AA291BC1EEAA3D03623F2375C9
388ABFFC392B3B4B21840AE82436B62C4B88BD91D9BCB6B1AFA172883784EBAA
7B75DEB4573067FB9BF34769691A6A89267BC4E51631D49211C8FFEA> |-
/t <1C60D8A8C9B854D0F4BEDEF58C8CF76928EC03CF9E6A69066343B65CF2F2
9CD6E545B8A00752040D324808F3F5D7377FE94463A69378800F35B93737A90E
D33397EF28DE6855D7404A61AF81C1EEF0FFED3B556E8E9BEB0451CA1D28658C
106F5916BA3D50810F2ED0B604B6D36F194AAE36158BC40E0B3FFAD76350433E> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/IESYKI+TimesNewRomanPS-ItalicMT /TimesNewRomanPS-ItalicMT findfont ct_VMDictPut
/IESYKI+TimesNewRomanPS-ItalicMT*1 
[101{/.notdef}rp /e 4{/.notdef}rp /j /.notdef /l 2{/.notdef}rp /o 
2{/.notdef}rp /r /s /t 139{/.notdef}rp]
IESYKI+TimesNewRomanPS-ItalicMT nf
IESYKI+TimesNewRomanPS-ItalicMT*1 [6.97258 0 0 -6.96087 0 0 ]msf
201.559 135.927 mo
(jslot)
[12.718 2.69147 1.93837 3.4863 0 ]xsh
IESYKI+TimesNewRomanPS-ItalicMT*1 [12.0598 0 0 -12.0395 0 0 ]msf
190.552 132.827 mo
(ret)
[4.69136 15.3763 0 ]xsh
%ADOBeginSubsetFont: QJJAAA+SymbolMT Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /QJJAAA+SymbolMT def
/FontInfo 5 dict dup begin
/ItalicAngle 0 def
/FSType 8 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 215 /g152 put
def
/FontBBox {0 -220 1113 1005} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
2 dict dup begin
/.notdef <1C60D8A8C9B7C3C9ED920C533BFCEF627DC3963E487931C80D1235
BDD70699E096A6312D> |-
/g152 <1C60D8A8C9B8707CDCE5EE9947DE2FBE1842673B52D83C50B31A40C78
ECC3E55F105D97284343A409901A7D182F8E2300EA6731101223D612602C524D
E8CE2A11CDC5C0136E0D2> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/IESYKJ+SymbolMT /QJJAAA+SymbolMT findfont ct_VMDictPut
/IESYKJ+SymbolMT*1 
[215{/.notdef}rp /g152 40{/.notdef}rp]
IESYKJ+SymbolMT nf
IESYKJ+SymbolMT*1 [12.0598 0 0 -12.0395 0 0 ]msf
206.499 132.827 mo
(\327)sh
grestore
gsave
270.958 138.37 mo
304.945 138.37 li
304.945 119.378 li
270.958 119.378 li
270.958 138.37 li
clp
0 gry
%ADOBeginSubsetFont: TimesNewRomanPS-ItalicMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
IESYKI+TimesNewRomanPS-ItalicMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/n <1C60D8A8C9B7A73DF087C158A303AE922A1CFBE99458C02E528DF85BC641
2E6FDD19DEE624C52F34F700473C3AF58CFD622B892B54F8D6362CC51D3848E5
F8B6B32B7B11E5E94464027CCA3CF1614C8F48813802B308AF8EC8766137EB89
CD5DD757628F33FCEA75D425A44D9BACEE2228E64D06D107FD7CF2CD26322E84
A7ED288FE0F79BC1C309E227374927714BC56EB962BF48D51F35D6762D6E3752
739DD5CCAA41E9D5E43DD7EF5CD51215167BF87390988E3AF0B364F3ACEB0FB5
C2394968F3DBA5DCC32E43963EC56DCDE85C8CB04CD0FA96CC48CFDB5153D23F
36F9AB24> |-
systemdict /gcheck known {setglobal} if end {end} if
end
IESYKI+TimesNewRomanPS-ItalicMT /Encoding get
dup 110 /n put
pop
%ADOEndSubsetFont
/IESYKI+TimesNewRomanPS-ItalicMT*1 
[101{/.notdef}rp /e 4{/.notdef}rp /j /.notdef /l /.notdef /n 
/o 2{/.notdef}rp /r /s /t 139{/.notdef}rp]
IESYKI+TimesNewRomanPS-ItalicMT nf
IESYKI+TimesNewRomanPS-ItalicMT*1 [6.96012 5.55866e-6 -9.93454e-6 -6.95101 0 0 ]msf
279.839 134.489 mo
(jslot)
[12.7231 2.70752 1.93494 3.45917 0 ]xsh
IESYKI+TimesNewRomanPS-ItalicMT*1 [12.0394 9.61518e-6 -1.71844e-5 -12.0236 0 0 ]msf
272.771 131.392 mo
(nt)
[16.1348 0 ]xsh
IESYKJ+SymbolMT*1 [12.0394 9.61518e-6 -1.71844e-5 -12.0236 0 0 ]msf
284.78 131.392 mo
(\327)sh
grestore
gsave
274.298 29.24 mo
298.769 29.24 li
298.769 17.9012 li
274.298 17.9012 li
274.298 29.24 li
clp
gsave
274.298 29.2166 mo
298.795 29.2166 li
298.795 17.9015 li
274.298 17.9015 li
274.298 29.2166 li
eclp
0 gry
%ADOBeginSubsetFont: TimesNewRomanPSMT Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /TimesNewRomanPSMT def
/FontInfo 5 dict dup begin
/ItalicAngle 0 def
/FSType 8 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 49 /one put
def
/FontBBox {-568 -307 2046 1040} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
2 dict dup begin
/.notdef <1C60D8A8C9B6FF86FBD66B095379F45880CA28D0F0C4629F99B72E
FEDBB222483BD74F8B> |-
/one <1C60D8A8C9B7A73DB92A3F8C4B412A6756A4F8D8439622AB29A83C93F5
89D112DBEAB54F9ACF0D9BFA06C28638F8F8CA9EE7AFD734575522301B5C0272
0FA00A934493EC3D856AF45EEE1D7462FF2375B7250579D34D9C249B6BEBF8EF
41DB28C0847307B8DCBC66> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/IESYKK+TimesNewRomanPSMT /TimesNewRomanPSMT findfont ct_VMDictPut
/IESYKK+TimesNewRomanPSMT*1 
[49{/.notdef}rp /one 206{/.notdef}rp]
IESYKK+TimesNewRomanPSMT nf
IESYKK+TimesNewRomanPSMT*1 [7.1662 7.94886e-6 -1.71227e-5 -7.15248 0 0 ]msf
294.761 25.0477 mo
(1)sh
grestore
0 gry
IESYKI+TimesNewRomanPS-ItalicMT*1 [4.14371 4.59626e-6 -9.90086e-6 -4.13577 0 0 ]msf
286.21 26.8909 mo
(j)sh
gsave
274.298 29.2166 mo
298.795 29.2166 li
298.795 17.9015 li
274.298 17.9015 li
274.298 29.2166 li
eclp
%ADOBeginSubsetFont: TimesNewRomanPS-ItalicMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
IESYKI+TimesNewRomanPS-ItalicMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/I <1C60D8A8C9B81F2C3AF4EA6F4A7427349C064720CDF55A9EB7294C422E28
E1A4F69411C479BED0740D6C103386910FB4668E325C9A314DB5CCC932F6C684
3077873E0CF7DD316398BC256225AFE31B916DD9E8C4B0B295CD8EC7E34E4A2D
4AE07149B61AEA75EC81B8026E66140E534EB80D9956B086493B538816587FB9
2D34894BC28C075DDBB44D719AEC> |-
/d <1C60D8A8C9B7A73DB691FFA60643BA6E96E7C7C2DDEF80CD1CC4E8DF6116
160F4B6BEC2C5A3FD0EFF676934C9853DC2AFCDE40FCD6A7962C3CCB0F256744
23D13531F42E3841F98600FD9B5DAA96A9419079DE3DDCAA270D347DBB8C114A
6FB1D82FDCA79BCBEE0518D5F888E4054C9768F6434472E73165A3126D5BD56D
8E1B8CDE44ACA6EF9615CFA40888BA656F1BE25E2866BF1A2FCA5AAAEE4F1293
B59360F147EFB7B6289498A57B7354A472AFD0CD81D495F51B9A26687A9D12C5
CDEBB20FAC42D12F908FE6C73F05DD391AF99090AF4E6EC3C789DC0A2BD1E10D
AD701AF1166FE91AEB4B604D5FDFFD4C81AD27FA4031BCD4AA2A60CE2C008F46
6E3EE8EE5415C047> |-
systemdict /gcheck known {setglobal} if end {end} if
end
IESYKI+TimesNewRomanPS-ItalicMT /Encoding get
dup 73 /I put
dup 100 /d put
pop
%ADOEndSubsetFont
/IESYKI+TimesNewRomanPS-ItalicMT*1 
[73{/.notdef}rp /I 26{/.notdef}rp /d /e 4{/.notdef}rp /j /.notdef 
/l /.notdef /n /o 2{/.notdef}rp /r /s /t 
139{/.notdef}rp]
IESYKI+TimesNewRomanPS-ItalicMT nf
IESYKI+TimesNewRomanPS-ItalicMT*1 [7.1662 7.94886e-6 -1.71227e-5 -7.15248 0 0 ]msf
275.605 25.0477 mo
(Ind)
[2.35046 3.5831 0 ]xsh
grestore
gsave
274.298 29.2166 mo
298.795 29.2166 li
298.795 17.9015 li
274.298 17.9015 li
274.298 29.2166 li
eclp
%ADOBeginSubsetFont: QJJAAA+SymbolMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
IESYKJ+SymbolMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g32 <1C60D8A8C9B796769E4E4DFA9BF53FF7837BC3FBEE296D33674BA72572
D0E59DACB0> |-
systemdict /gcheck known {setglobal} if end {end} if
end
IESYKJ+SymbolMT /Encoding get
dup 61 /g32 put
pop
%ADOEndSubsetFont
/IESYKJ+SymbolMT*1 
[61{/.notdef}rp /g32 153{/.notdef}rp /g152 40{/.notdef}rp]
IESYKJ+SymbolMT nf
IESYKJ+SymbolMT*1 [7.1662 7.94886e-6 -1.71227e-5 -7.15248 0 0 ]msf
289.945 25.0477 mo
(=)sh
grestore
grestore
gsave
357.368 30.0699 mo
385.746 30.0701 li
385.746 17.903 li
357.368 17.903 li
357.368 30.0699 li
clp
gsave
357.368 30.0513 mo
385.776 30.0513 li
385.776 17.9025 li
357.368 17.9024 li
357.368 30.0513 li
eclp
0 gry
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
IESYKK+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/two <1C60D8A8C9B7A73DB6F198797B24E7DF20E340C763AB9A17095FFDDA6B
4B0E4D4AC4BE83AF302018AACAF29AB5FCEB98A93FCCD2C9A968B7CB1B433E25
003CA8A63287F6BD1729C8188A209A7171C9BFB11D2FACEF2FADF63141D976A0
F90EDDE709834FFBF963952A5213F00F39F098C30D0F91D40A57CAEF920CE11E
C41D90433CE0F55F0A42A96AF852FD50FA> |-
systemdict /gcheck known {setglobal} if end {end} if
end
IESYKK+TimesNewRomanPSMT /Encoding get
dup 50 /two put
pop
%ADOEndSubsetFont
/IESYKK+TimesNewRomanPSMT*1 
[49{/.notdef}rp /one /two 205{/.notdef}rp]
IESYKK+TimesNewRomanPSMT nf
IESYKK+TimesNewRomanPSMT*1 [8.1242 7.77091e-6 -1.80826e-5 -8.1055 0 0 ]msf
380.322 26.0013 mo
(2)sh
grestore
gsave
357.368 30.0513 mo
385.776 30.0513 li
385.776 17.9025 li
357.368 17.9024 li
357.368 30.0513 li
eclp
0 gry
%ADOBeginSubsetFont: TimesNewRomanPS-ItalicMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
IESYKI+TimesNewRomanPS-ItalicMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/i <1C60D8A8C9B854D0F4620EF8AB3A43726CA9F1D5CA3F0AC21C46156AA7EA
FD30B421C67072AD9E9673A39A0C73C611BF2D30694524FB9362DF4B7BF42BD4
03E13FE93BE1CC4B973BBB2F8A1766424F865950A3B4E0C2909B014DAC40D6C3
1A5A624961F141A00D5EA650DA557D976995CE1AB37642609DB19511A8C6A021
6D711E915D0A16129E261DB540D787FC5DFEB3FE9BF504AACF3812EF9A098716
4BC0CA8AED8AA0620C2C50ECD33D7A5F1286537664219BFD394BB743A505> |-
systemdict /gcheck known {setglobal} if end {end} if
end
IESYKI+TimesNewRomanPS-ItalicMT /Encoding get
dup 105 /i put
pop
%ADOEndSubsetFont
/IESYKI+TimesNewRomanPS-ItalicMT*1 
[73{/.notdef}rp /I 26{/.notdef}rp /d /e 3{/.notdef}rp /i /j 
/.notdef /l /.notdef /n /o 2{/.notdef}rp /r /s 
/t 139{/.notdef}rp]
IESYKI+TimesNewRomanPS-ItalicMT nf
IESYKI+TimesNewRomanPS-ItalicMT*1 [4.69696 4.4927e-6 -1.04543e-5 -4.68615 0 0 ]msf
369.838 28.0894 mo
(i)sh
grestore
gsave
357.368 30.0513 mo
385.776 30.0513 li
385.776 17.9025 li
357.368 17.9024 li
357.368 30.0513 li
eclp
0 gry
IESYKI+TimesNewRomanPS-ItalicMT*1 [8.1242 7.77091e-6 -1.80826e-5 -8.1055 0 0 ]msf
358.848 26.0013 mo
(Ind)
[2.66467 4.0621 0 ]xsh
grestore
gsave
357.368 30.0513 mo
385.776 30.0513 li
385.776 17.9025 li
357.368 17.9024 li
357.368 30.0513 li
eclp
0 gry
IESYKJ+SymbolMT*1 [8.1242 7.77091e-6 -1.80826e-5 -8.1055 0 0 ]msf
373.981 26.0013 mo
(=)sh
grestore
grestore
3 lw
2.5 117.11 mo
483.948 117.11 li
0 .439 .753 rgb
@
482.568 111.59 mo
499.128 117.11 li
482.568 122.63 li
482.568 111.59 li
cp
ef
.75075 lw
350.488 138.37 mo
391.238 138.37 li
.357 .608 .835 rgb
@
351.248 141.39 mo
342.188 138.37 li
351.248 135.35 li
351.248 141.39 li
cp
ef
390.478 135.35 mo
399.538 138.37 li
390.478 141.39 li
390.478 135.35 li
cp
ef
321.778 138.37 mo
333.808 138.37 li
@
322.538 141.39 mo
313.478 138.37 li
322.538 135.35 li
322.538 141.39 li
cp
ef
333.048 135.35 mo
342.108 138.37 li
333.048 141.39 li
333.048 135.35 li
cp
ef
gsave
314.848 134.98 mo
343.226 134.98 li
343.226 119.951 li
314.848 119.951 li
314.848 134.98 li
clp
0 gry
%ADOBeginSubsetFont: TimesNewRomanPS-ItalicMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
IESYKI+TimesNewRomanPS-ItalicMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g <1C60D8A8C9B7A73DB6A115BACE7F487489BC503E16B9751BF18C6D7E42E0
6D2B7B1F089430E910A6253B6313C5EA899502D0D121C470848438F2B8A71B5D
102A13A82BD9E44627438E3D68944BDD10ECDC0CB5CF4D8C3CE72AE1E4BFF19C
4AD2BBC40F4E759C4D3469F3463BC36A69DB81E986C6811A83D2812B0E9989EE
680E8FEF508D5F307F1ADDA3FE5EB69147BD10417CE8BE6F7177827A708CCE4A
28BC62912C8577C9FCC2C284820C0D4D78BAE839F58F949E2DCA0357FDD18F3E
FEE894B48915C73CE679A1EBF63CDDD4819A9767EB909F9DC12CA2F1D6CF19CE
DDE14B260F16CAB8A1EE3C950BEF869CBEC21279DD1ECA7716492A81BD8B8D06
866B8145EA1E6F3754CEA3866CFB87B96A4D9E3A3656624F81275C91FDF7BA93
5E72F2A99C4EB25B2932A91C38CB78223D5AF70EC16B0EE27DA71AB9D0143E2B
2353D449A80518254D9FD55CE939B6FD0F1324A9AB14FB43BC87B748F7C154DE
3E1DD70C3E7F> |-
systemdict /gcheck known {setglobal} if end {end} if
end
IESYKI+TimesNewRomanPS-ItalicMT /Encoding get
dup 103 /g put
pop
%ADOEndSubsetFont
/IESYKI+TimesNewRomanPS-ItalicMT*1 
[73{/.notdef}rp /I 26{/.notdef}rp /d /e /.notdef /g /.notdef 
/i /j /.notdef /l /.notdef /n /o 2{/.notdef}rp 
/r /s /t 139{/.notdef}rp]
IESYKI+TimesNewRomanPS-ItalicMT nf
IESYKI+TimesNewRomanPS-ItalicMT*1 [5.81443 5.56157e-6 -1.04856e-5 -5.80576 0 0 ]msf
322.106 132.57 mo
(islot)
[10.5183 2.26184 1.61642 2.88394 0 ]xsh
IESYKI+TimesNewRomanPS-ItalicMT*1 [10.0554 9.61809e-6 -1.81337e-5 -10.0404 0 0 ]msf
316.833 129.983 mo
(gt)
[12.7414 0 ]xsh
IESYKJ+SymbolMT*1 [10.0554 9.61809e-6 -1.81337e-5 -10.0404 0 0 ]msf
326.128 129.983 mo
(\327)sh
grestore
gsave
355.088 137.88 mo
388.083 137.88 li
388.083 119.88 li
355.088 119.88 li
355.088 137.88 li
clp
gsave
355.088 137.873 mo
388.118 137.873 li
388.118 119.88 li
355.088 119.88 li
355.088 137.873 li
eclp
0 gry
IESYKI+TimesNewRomanPS-ItalicMT*1 [6.95013 5.71759e-6 -1.04661e-5 -6.94039 0 0 ]msf
362.469 134.967 mo
(islot)
[12.6006 2.70364 1.93213 3.47507 0 ]xsh
grestore
gsave
355.088 137.873 mo
388.118 137.873 li
388.118 119.88 li
355.088 119.88 li
355.088 137.873 li
eclp
0 gry
IESYKI+TimesNewRomanPS-ItalicMT*1 [12.0234 9.89115e-6 -1.81059e-5 -12.0065 0 0 ]msf
356.901 131.876 mo
(nt)
[14.5138 0 ]xsh
grestore
gsave
355.088 137.873 mo
388.118 137.873 li
388.118 119.88 li
355.088 119.88 li
355.088 137.873 li
eclp
0 gry
IESYKJ+SymbolMT*1 [12.0234 9.89115e-6 -1.81059e-5 -12.0065 0 0 ]msf
367.287 131.876 mo
(\327)sh
grestore
grestore
113.958 159.63 mo
250.898 159.63 li
@
114.718 162.65 mo
105.658 159.63 li
114.718 156.61 li
114.718 162.65 li
cp
ef
250.138 156.61 mo
259.198 159.63 li
250.138 162.65 li
250.138 156.61 li
cp
ef
gsave
161.168 161.97 mo
198.16 161.97 li
198.16 143.97 li
161.168 143.97 li
161.168 161.97 li
clp
0 gry
IESYKI+TimesNewRomanPS-ItalicMT*1 [6.9653 2.54871e-6 -1.04852e-5 -6.95303 0 0 ]msf
172.489 159.086 mo
(islot)
[12.5933 2.70955 1.93636 3.45479 0 ]xsh
IESYKI+TimesNewRomanPS-ItalicMT*1 [12.0485 4.40875e-6 -1.81372e-5 -12.0273 0 0 ]msf
162.982 155.987 mo
(ret)
[4.68698 13.7594 0 ]xsh
IESYKJ+SymbolMT*1 [12.0485 4.40875e-6 -1.81372e-5 -12.0273 0 0 ]msf
177.307 155.987 mo
(\327)sh
grestore
267.908 138.37 mo
305.168 138.37 li
@
268.658 141.39 mo
259.598 138.37 li
268.658 135.35 li
268.658 141.39 li
cp
ef
304.418 135.35 mo
313.478 138.37 li
304.418 141.39 li
304.418 135.35 li
cp
ef
/IESYKH+SimSun-GBK-EUC-H-Identity-H findfont [12.025 0 0 -12.025 0 0 ]msf
407.358 88.96 mo
(\001\002)sh
453.608 88.96 mo
(\001\002\001\002)
[12.0001 0 ]xsh
8.508 88.96 mo
(\001\002)sh
grestore
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 /2 ]]
] del_res
/IESYKJ+SymbolMT*1 uf
/IESYKJ+SymbolMT uf
/QJJAAA+SymbolMT uf
/IESYKI+TimesNewRomanPS-ItalicMT*1 uf
/IESYKI+TimesNewRomanPS-ItalicMT uf
/TimesNewRomanPS-ItalicMT uf
/IESYKK+TimesNewRomanPSMT*1 uf
/IESYKK+TimesNewRomanPSMT uf
/TimesNewRomanPSMT uf
/IESYKH+SimSun-GBK-EUC-H-Identity-H uf
/IESYKH+SimSun-GBK-EUC-H /CIDFont ur
/IESYKG+Calibri-Bold*1 uf
/IESYKG+Calibri-Bold uf
/PBAAAA+Calibri-Bold uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
